{"repository_name":"github.com/luckyframework/avram","body":"# Avram\n\n\n### Why Avram?\n\nThe name comes from [Henriette Avram](https://en.wikipedia.org/wiki/Henriette_Avram).\n\n> Henriette Davidson Avram (October 7, 1919 â€“ April 22, 2006) was a computer programmer and systems analyst who developed the MARC format (Machine Readable Cataloging), the international data standard for bibliographic and holdings information in libraries.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  avram:\n    github: luckyframework/avram\n```\n\n## Usage\n\n```crystal\nrequire \"avram\"\n```\n\n## Documenation\n[API (master)](https://luckyframework.github.io/avram/)\n\n## Contributing\n\n1. Fork it ( https://github.com/luckyframework/avram/fork )\n1. Create your feature branch (git checkout -b my-new-feature)\n1. Install docker and docker-compose: https://docs.docker.com/compose/install/\n1. Run `script/setup`\n1. Make your changes\n1. Run `script/test` to run the specs, build shards, and check formatting\n1. Commit your changes (git commit -am 'Add some feature')\n1. Push to the branch (git push origin my-new-feature)\n1. Create a new Pull Request\n\n## Testing\n\nTo run the tests:\n\n1. Install docker and docker-compose: https://docs.docker.com/compose/install/\n1. Run `script/setup` to set up the docker environment\n1. Run `script/test` to run the specs, build shards, and check formatting\n\nYou can run individual tests like this: `docker-compose run --rm app crystal spec path/to/spec.cr`\n\n> Remember to run `docker-compose down` when you're done. This will stop the\n> Crystal container.\n\n## Contributors\n\n- [paulcsmith](https://github.com/paulcsmith) Paul Smith - creator, maintainer\n- [mikeeus](https://github.com/mikeeus) Mikias Abera - contributor\n","program":{"html_id":"github.com/luckyframework/avram/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/luckyframework/avram","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/luckyframework/avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/luckyframework/avram/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/array_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/array_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":"Proxy to the `T`'s adapter so we can call methods like\n`Array(String).adapter.to_db([\"test\"])`","summary":"<p>Proxy to the <code>T</code>'s adapter so we can call methods like <code><a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>)<a href=\"Array.html#adapter-class-method\">.adapter</a>.to_db([\"test\"])</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/array_extensions.cr#L4","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T::Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L56","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"empty?"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram","path":"Avram.html","kind":"module","full_name":"Avram","name":"Avram","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"github.com/luckyframework/avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"avram/criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr"},{"filename":"avram/errors.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"},{"filename":"avram/order_by.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr"},{"filename":"avram/version.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/version.cr"},{"filename":"avram.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: lazy_load_enabled : Bool = true, example: nil}, {decl: logger : Dexter::Logger = Dexter::Logger.new(nil), example: nil}, {decl: query_log_level : ::Logger::Severity | ::Nil, example: nil}, {decl: save_failed_log_level : ::Logger::Severity | ::Nil = ::Logger::Severity::WARN, example: nil}, {decl: database_to_migrate : Avram::Database.class, example: \"AppDatabase\"}, {decl: time_formats : Array(String) = [] of String, example: nil}] of Nil","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.12.4\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"github.com/luckyframework/avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&amp;)-class-method","name":"configure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr#L19","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield settings"}},{"id":"logger-class-method","html_id":"logger-class-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr#L28","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings.logger"}},{"id":"settings-class-method","html_id":"settings-class-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr#L19","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Settings"}}],"constructors":[],"instance_methods":[{"id":"settings-instance-method","html_id":"settings-instance-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr#L19","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Settings"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Associations","path":"Avram/Associations.html","kind":"module","full_name":"Avram::Associations","name":"Associations","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"}],"locations":[{"filename":"avram/associations/belongs_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/belongs_to.cr"},{"filename":"avram/associations.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Associations/BelongsTo","path":"Avram/Associations/BelongsTo.html","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/associations/belongs_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/belongs_to.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"belongs_to(type_declaration,foreign_key=nil,table=nil)-macro","html_id":"belongs_to(type_declaration,foreign_key=nil,table=nil)-macro","name":"belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"args_string":"(type_declaration, foreign_key = <span class=\"n\">nil</span>, table = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/belongs_to.cr#L2","def":{"name":"belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"table","doc":null,"default_value":"nil","external_name":"table","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if !foreign_key %}\n      {% foreign_key = \"#{assoc_name}_id\".id %}\n    {% end %}\n\n\n    \n{% if !table %}\n      {% table = run(\"../../run_macros/infer_table_name.cr\", model.id) %}\n    {% end %}\n\n\n    column \n{{ foreign_key.id }}\n : \n{{ model }}\n::PrimaryKeyType\n{% if nilable %}?{% end %}\n\n\n    association \\\n      table_name: :\n{{ table.id }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: :\n{{ foreign_key.id }}\n,\n      relationship_type: :belongs_to\n\n    define_belongs_to_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n)\n    define_belongs_to_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n)\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasMany","path":"Avram/Associations/HasMany.html","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/associations/has_many.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/has_many.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"has_many(type_declaration,through=nil,foreign_key=nil)-macro","html_id":"has_many(type_declaration,through=nil,foreign_key=nil)-macro","name":"has_many","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, through = <span class=\"n\">nil</span>, foreign_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/has_many.cr#L2","def":{"name":"has_many","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if (!through.is_a?(NilLiteral)) && (!through.is_a?(SymbolLiteral)) %}\n      {% through.raise(\"The association name for 'through' must be a Symbol. Instead, got: #{through}\") %}\n    {% end %}\n\n    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n\n    association \\\n      table_name: :\n{{ assoc_name }}\n,\n      type: \n{{ type_declaration.type }}\n,\n      foreign_key: :\n{{ foreign_key }}\n,\n      through: \n{{ through }}\n,\n      relationship_type: :has_many\n\n    \n{% model = type_declaration.type %}\n\n\n    define_has_many_lazy_loading(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n)\n    define_has_many_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n)\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasOne","path":"Avram/Associations/HasOne.html","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/associations/has_one.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/has_one.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"has_one(type_declaration,foreign_key=nil)-macro","html_id":"has_one(type_declaration,foreign_key=nil)-macro","name":"has_one","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, foreign_key = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/associations/has_one.cr#L2","def":{"name":"has_one","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n\n    association \\\n      table_name: :\n{{ type_declaration.var }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: \n{{ foreign_key }}\n,\n      relationship_type: :has_one\n\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n)\n    define_has_one_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ nilable }}\n)\n    define_has_one_base_query(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n)\n  \n"}}],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Attribute","path":"Avram/Attribute.html","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/attribute.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/PermittedAttribute","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:Symbol,param:String?,value:T,param_key:String)-class-method","html_id":"new(name:Symbol,param:String?,value:T,param_key:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"}],"args_string":"(name : Symbol, param : String?, value : T, param_key : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L8","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Attribute(T).allocate\n_.initialize(name, param, value, param_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_error(message:ErrorMessage=&quot;isinvalid&quot;)-instance-method","html_id":"add_error(message:ErrorMessage=&amp;quot;isinvalid&amp;quot;)-instance-method","name":"add_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"ErrorMessage"}],"args_string":"(message : ErrorMessage = <span class=\"s\">&quot;is invalid&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L28","def":{"name":"add_error","args":[{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"perform_add_error(message)"}},{"id":"changed?(from:T|Nothing=Nothing.new,to:T|Nothing=Nothing.new)-instance-method","html_id":"changed?(from:T|Nothing=Nothing.new,to:T|Nothing=Nothing.new)-instance-method","name":"changed?","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"Nothing.new","external_name":"from","restriction":"T | Nothing"},{"name":"to","doc":null,"default_value":"Nothing.new","external_name":"to","restriction":"T | Nothing"}],"args_string":"(from : T | Nothing = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>, to : T | Nothing = <span class=\"t\">Nothing</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L69","def":{"name":"changed?","args":[{"name":"from","doc":null,"default_value":"Nothing.new","external_name":"from","restriction":"T | Nothing"},{"name":"to","doc":null,"default_value":"Nothing.new","external_name":"to","restriction":"T | Nothing"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"from = from.is_a?(Nothing) ? true : from == original_value\nto = to.is_a?(Nothing) ? true : to == value\n((value != original_value) && from) && to\n"}},{"id":"errors-instance-method","html_id":"errors-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L45","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors.uniq"}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"original_value-instance-method","html_id":"original_value-instance-method","name":"original_value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L53","def":{"name":"original_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_no_blank(@original_value)"}},{"id":"param-instance-method","html_id":"param-instance-method","name":"param","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L24","def":{"name":"param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@param || value.to_s"}},{"id":"param_key-instance-method","html_id":"param_key-instance-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L5","def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@param_key"}},{"id":"permitted-instance-method","html_id":"permitted-instance-method","name":"permitted","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L14","def":{"name":"permitted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_permitted || (@_permitted = (Avram::PermittedAttribute.new(name: @name, param: @param, value: @value, param_key: @param_key).tap do |attribute|\n  errors.each do |error|\n    attribute.add_error(error)\n  end\nend))"}},{"id":"reset_errors-instance-method","html_id":"reset_errors-instance-method","name":"reset_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L41","def":{"name":"reset_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors = [] of String"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L65","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"errors.empty?"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L49","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ensure_no_blank(@value)"}},{"id":"value=(value)-instance-method","html_id":"value=(value)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L4","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = value"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Attribute/ErrorMessage","path":"Avram/Attribute/ErrorMessage.html","kind":"alias","full_name":"Avram::Attribute::ErrorMessage","name":"ErrorMessage","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/attribute.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"(Avram::CallableErrorMessage | Proc(String, String, String) | String)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Attribute/Nothing","path":"Avram/Attribute/Nothing.html","kind":"class","full_name":"Avram::Attribute::Nothing","name":"Nothing","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/attribute.cr","line_number":75,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/AvramError","path":"Avram/AvramError.html","kind":"class","full_name":"Avram::AvramError","name":"AvramError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/ConnectionError","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError"},{"html_id":"github.com/luckyframework/avram/Avram/ImpossibleValidation","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation"},{"html_id":"github.com/luckyframework/avram/Avram/InvalidOperationError","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError"},{"html_id":"github.com/luckyframework/avram/Avram/LazyLoadError","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError"},{"html_id":"github.com/luckyframework/avram/Avram/RecordNotFoundError","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError"},{"html_id":"github.com/luckyframework/avram/Avram/Rollback","kind":"class","full_name":"Avram::Rollback","name":"Rollback"},{"html_id":"github.com/luckyframework/avram/Avram/SchemaMismatchError","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError"},{"html_id":"github.com/luckyframework/avram/Avram/UnsupportedQueryError","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"= Lucky Record Errors\n\nGeneric Lucky Record exception class.","summary":"<p>= Lucky Record Errors</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/BaseQueryTemplate","path":"Avram/BaseQueryTemplate.html","kind":"class","full_name":"Avram::BaseQueryTemplate","name":"BaseQueryTemplate","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/base_query_template.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/base_query_template.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,columns,associations,table_name,primary_key_name,*args,**named_args)-macro","html_id":"setup(type,columns,associations,table_name,primary_key_name,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"primary_key_name","doc":null,"default_value":"","external_name":"primary_key_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, columns, associations, table_name, primary_key_name, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/base_query_template.cr#L2","def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"primary_key_name","doc":null,"default_value":"","external_name":"primary_key_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":5,"block_arg":null,"visibility":"Public","body":"    class ::\n{{ type }}\n::BaseQuery < Avram::Query\n      include Avram::Queryable(\n{{ type }}\n)\n\n      def database : Avram::Database.class\n        \n{{ type }}\n.database\n      \nend\n\n      def query_class\n\n      \nend\n\n      @@table_name = :\n{{ table_name }}\n\n      @@schema_class = \n{{ type }}\n\n\n      \n# If not using default 'id' primary key\n\n      \n{% if primary_key_name.id != \"id\".id %}\n        # Then point 'id' to the primary key\n        def id(*args, **named_args)\n          {{ primary_key_name.id }}(*args, **named_args)\n        end\n      {% end %}\n\n\n      def primary_key_name\n        :\n{{ primary_key_name.id }}\n\n      \nend\n\n      macro generate_criteria_method(query_class, name, type)\n        def \n\\{\n{ name }}\n          column_name = \"#{@@table_name}.\n\\{\n{ name }}\"\n          \n\\{\n{ type }}::Lucky::Criteria(\n\\{\n{ query_class }}, \n\\{\n{ type }}).new(self, column_name)\n        \nend\n      \nend\n\n      \n{% for column in columns %}\n        def {{ column[:name] }}(value)\n          {{ column[:name] }}.eq(value)\n        end\n\n        {% if column[:type].is_a?(Generic) %}\n          # Checking Array type\n          generate_criteria_method(BaseQuery, {{ column[:name] }}, {{ column[:type].type_vars.first }})\n\n          macro inherited\n            generate_criteria_method(\\{{ @type.name }}, {{ column[:name] }}, {{ column[:type].type_vars.first }})\n          end\n        {% else %}\n          generate_criteria_method(BaseQuery, {{ column[:name] }}, {{ column[:type] }})\n\n          macro inherited\n            generate_criteria_method(\\{{ @type.name }}, {{ column[:name] }}, {{ column[:type] }})\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for assoc in associations %}\n        def join_{{ assoc[:table_name] }}\n          inner_join_{{ assoc[:table_name] }}\n        end\n\n        {% for join_type in [\"Inner\", \"Left\", \"Right\", \"Full\"] %}\n          def {{ join_type.downcase.id }}_join_{{ assoc[:table_name] }}\n            {% if assoc[:relationship_type] == (:belongs_to) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: @@table_name,\n                  to: :{{ assoc[:table_name] }},\n                  primary_key: {{ assoc[:foreign_key] }},\n                  foreign_key: primary_key_name\n                )\n              )\n            {% else %}{% if assoc[:relationship_type] == (:has_one) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: @@table_name,\n                  to: {{ assoc[:type] }}::TABLE_NAME,\n                  foreign_key: :{{ assoc[:foreign_key] }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% else %}{% if assoc[:through] %}\n              {{ join_type.downcase.id }}_join_{{ assoc[:through].id }}\n              __yield_where_{{ assoc[:through].id }} do |join_query|\n                join_query.{{ join_type.downcase.id }}_join_{{ assoc[:table_name] }}\n              end\n            {% else %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: @@table_name,\n                  to: :{{ assoc[:table_name] }},\n                  foreign_key: {{ assoc[:foreign_key] }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% end %}{% end %}{% end %}\n          end\n        {% end %}\n\n\n        def where_{{ assoc[:table_name] }}(assoc_query : {{ assoc[:type] }}::BaseQuery, auto_inner_join : Bool = true)\n          join_{{ assoc[:table_name] }} if auto_inner_join\n          query.merge(assoc_query.query)\n          self\n        end\n\n        # :nodoc:\n        # Used internally for has_many through queries\n        def __yield_where_{{ assoc[:table_name] }}\n          assoc_query = yield {{ assoc[:type] }}::BaseQuery.new\n          query.merge(assoc_query.query)\n          self\n        end\n\n        def {{ assoc[:table_name] }}\n          \\{% raise <<-ERROR\n            The methods for querying associations have changed\n\n              * They are now prefixed with 'where_'.\n              * The query is no longer yielded. You must pass it explicitly.\n\n            Example:\n\n              where_{{ assoc[:table_name] }}({{ assoc[:type] }}Query.new.some_condition)\n            ERROR\n          %}\n          yield # This is not used. Just there so it works with blocks.\n        end\n      {% end %}\n\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","path":"Avram/BetweenCriteria.html","kind":"module","full_name":"Avram::BetweenCriteria(T, V)","name":"BetweenCriteria","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/between_criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/between_criteria.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Box","path":"Avram/Box.html","kind":"class","full_name":"Avram::Box","name":"Box","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/box.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SEQUENCES","name":"SEQUENCES","value":"{} of String => Int32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"create-class-method","html_id":"create-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L27","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.create"}},{"id":"create(&)-class-method","html_id":"create(&amp;)-class-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L31","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(yield new).create"}},{"id":"create_pair-class-method","html_id":"create_pair-class-method","name":"create_pair","doc":"Returns an array with 2 instances of the model from the Box.\n\nUsage:\n\n```crystal\ntags = TagBox.create_pair\ntypeof(tags) # => Array(Tag)\ntags.size    # => 2\n```","summary":"<p>Returns an array with 2 instances of the model from the Box.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L48","def":{"name":"create_pair","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"create_pair do |box|\n  box\nend"}},{"id":"create_pair(&)-class-method","html_id":"create_pair(&amp;)-class-method","name":"create_pair","doc":"Similar to `create_pair`, but accepts a block which yields the box instance.\n\nBoth boxes receive the same argument values.\n\nUsage:\n\n```crystal\nTagBox.create_pair do |box|\n  # set both boxes name to \"test\"\n  box.name(\"test\")\nend\n```","summary":"<p>Similar to <code><a href=\"../Avram/Box.html#create_pair-class-method\">.create_pair</a></code>, but accepts a block which yields the box instance.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L64","def":{"name":"create_pair","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"[1, 2].map do |n|\n  self.create do |box|\n    yield box\n  end\nend"}},{"id":"save-class-method","html_id":"save-class-method","name":"save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L23","def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% raise(\"'Box.save' has been renamed to 'Box.create' to match 'SaveOperation.create'\") %}"}}],"constructors":[],"instance_methods":[{"id":"create-instance-method","html_id":"create-instance-method","name":"create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L35","def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"operation.save!"}},{"id":"operation-instance-method","html_id":"operation-instance-method","name":"operation","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L2","def":{"name":"operation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operation"}},{"id":"sequence(value:String):String-instance-method","html_id":"sequence(value:String):String-instance-method","name":"sequence","doc":"Returns a value with a number to use for unique values.\n\nUsage:\n\n```crystal\nclass UserBox < Avram::Box\n  def initialize\n    username sequence(\"username\")            # => username-1, username-2, etc.\n    email \"#{sequence(\"email\")}@example.com\" # => email-1@example.com, email-2@example.com, etc.\n  end\nend\n```","summary":"<p>Returns a value with a number to use for unique values.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L82","def":{"name":"sequence","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"__temp_66 = value\n__temp_67 = SEQUENCES\n__temp_67[__temp_66]? || (__temp_67[__temp_66] = 0)\n__temp_68 = value\n__temp_69 = SEQUENCES\n__temp_69[__temp_68] = __temp_69[__temp_68] + 1\n\"#{value}-#{SEQUENCES[value]}\"\n"}}],"macros":[{"id":"setup_attribute_shortcuts(operation)-macro","html_id":"setup_attribute_shortcuts(operation)-macro","name":"setup_attribute_shortcuts","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"args_string":"(operation)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/box.cr#L14","def":{"name":"setup_attribute_shortcuts","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% for attribute in operation.resolve.constant(:COLUMN_ATTRIBUTES) %}\n      def {{ attribute[:name] }}(value : {{ attribute[:type] }}{% if attribute[:nilable] %}?{% end %})\n        operation.{{ attribute[:name] }}.value = value\n        self\n      end\n    {% end %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/CallableErrorMessage","path":"Avram/CallableErrorMessage.html","kind":"module","full_name":"Avram::CallableErrorMessage","name":"CallableErrorMessage","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/validations/callable_error_message.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations/callable_error_message.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(attribute_name,attribute_value)-instance-method","html_id":"call(attribute_name,attribute_value)-instance-method","name":"call","doc":null,"summary":null,"abstract":true,"args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":""},{"name":"attribute_value","doc":null,"default_value":"","external_name":"attribute_value","restriction":""}],"args_string":"(attribute_name, attribute_value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations/callable_error_message.cr#L2","def":{"name":"call","args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":""},{"name":"attribute_value","doc":null,"default_value":"","external_name":"attribute_value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Callbacks","path":"Avram/Callbacks.html","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/callbacks.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/callbacks.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"after_commit(method_name)-macro","html_id":"after_commit(method_name)-macro","name":"after_commit","doc":"Run the given method after save and after successful transaction commit\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_commit notify_post_author\n\n  private def notify_post_author(comment : Comment)\n    NewCommentNotificationEmail.new(comment, to: comment.author!).deliver_now\n  end\nend\n```\n","summary":"<p>Run the given method after save and after successful transaction commit</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/callbacks.cr#L97","def":{"name":"after_commit","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def after_commit(object)\n      \n{% if @type.methods.map(&.name).includes?((:after_commit).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"after_save(method_name)-macro","html_id":"after_save(method_name)-macro","name":"after_save","doc":"Run the given method after save, but before transaction is committed\n\nThis is a great place to do other database saves because if something goes\nwrong the whole transaction would be rolled back.\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_save touch_post\n\n  private def touch_post(comment : Comment)\n    SavePost.update!(comment.post!, updated_at: Time.utc)\n  end\nend\n```\n\n> This is *not* a good place to do things like send messages, enqueue\n> background jobs, or charge payments. Since the transaction could be rolled\n> back the record may not be persisted to the database.\n> Instead use `after_commit`","summary":"<p>Run the given method after save, but before transaction is committed</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/callbacks.cr#L71","def":{"name":"after_save","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def after_save(object)\n      \n{% if @type.methods.map(&.name).includes?((:after_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"id":"before_save(method_name)-macro","html_id":"before_save(method_name)-macro","name":"before_save","doc":"Run the given method before saving or creating\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\n```\nbefore_save run_validations\n\nprivate def run_validations\n  validate_required name, age\nend\n```","summary":"<p>Run the given method before saving or creating</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(method_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/callbacks.cr#L15","def":{"name":"before_save","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def before_save\n      \n{% if @type.methods.map(&.name).includes?((:before_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"id":"before_save-macro","html_id":"before_save-macro","name":"before_save","doc":"Run the given block before saving or creating\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\n```\nbefore_save do\n  validate_required name, age\nend\n```","summary":"<p>Run the given block before saving or creating</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/callbacks.cr#L38","def":{"name":"before_save","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def before_save\n      \n{% if @type.methods.map(&.name).includes?((:before_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ yield }}\n\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Connection","path":"Avram/Connection.html","kind":"class","full_name":"Avram::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/connection.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/connection.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Handles the connection to the DB.","summary":"<p>Handles the connection to the DB.</p>","class_methods":[],"constructors":[{"id":"new(connection_string:String,database_class:Avram::Database.class)-class-method","html_id":"new(connection_string:String,database_class:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_string","doc":null,"default_value":"","external_name":"connection_string","restriction":"String"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_string : String, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/connection.cr#L3","def":{"name":"new","args":[{"name":"connection_string","doc":null,"default_value":"","external_name":"connection_string","restriction":"String"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(connection_string, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"open:DB::Database-instance-method","html_id":"open:DB::Database-instance-method","name":"open","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DB::Database","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/connection.cr#L6","def":{"name":"open","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DB::Database","visibility":"Public","body":"try_connection!"}},{"id":"try_connection!-instance-method","html_id":"try_connection!-instance-method","name":"try_connection!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/connection.cr#L10","def":{"name":"try_connection!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  DB.open(@connection_string)\nrescue DB::ConnectionRefused\n  raise(ConnectionError.new(connection_uri, database_class: @database_class))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/ConnectionError","path":"Avram/ConnectionError.html","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":77,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_PG_PORT","name":"DEFAULT_PG_PORT","value":"5432","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(connection_details:URI,database_class:Avram::Database.class)-class-method","html_id":"new(connection_details:URI,database_class:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"connection_details","doc":null,"default_value":"","external_name":"connection_details","restriction":"URI"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_details : URI, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L80","def":{"name":"new","args":[{"name":"connection_details","doc":null,"default_value":"","external_name":"connection_details","restriction":"URI"},{"name":"database_class","doc":null,"default_value":"","external_name":"database_class","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(connection_details, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","path":"Avram/Criteria.html","kind":"class","full_name":"Avram::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Bool/Lucky/Criteria","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/JSON/Any/Lucky/Criteria","kind":"class","full_name":"JSON::Any::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/String/Lucky/Criteria","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/UUID/Lucky/Criteria","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"asc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","html_id":"asc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"asc_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = <span class=\"n\">:default</span>) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L14","def":{"name":"asc_order","args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"rows.query.order_by(Avram::OrderBy.new(column, :asc, null_sorting))\nrows\n"}},{"id":"column-instance-method","html_id":"column-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L2","def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column"}},{"id":"column=(column)-instance-method","html_id":"column=(column)-instance-method","name":"column=","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(column)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L2","def":{"name":"column=","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column = column"}},{"id":"desc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","html_id":"desc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"desc_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = <span class=\"n\">:default</span>) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L9","def":{"name":"desc_order","args":[{"name":"null_sorting","doc":null,"default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"rows.query.order_by(Avram::OrderBy.new(column, :desc, null_sorting))\nrows\n"}},{"id":"eq(value):T-instance-method","html_id":"eq(value):T-instance-method","name":"eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L19","def":{"name":"eq","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\ncheck_nilable!(value)\nperform_eq(value)\n"}},{"id":"gt(value):T-instance-method","html_id":"gt(value):T-instance-method","name":"gt","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L87","def":{"name":"gt","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThan.new(column, V::Lucky.to_db!(value)))"}},{"id":"gte(value):T-instance-method","html_id":"gte(value):T-instance-method","name":"gte","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L91","def":{"name":"gte","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(column, V::Lucky.to_db!(value)))"}},{"id":"in(values):T-instance-method","html_id":"in(values):T-instance-method","name":"in","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(values) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L127","def":{"name":"in","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"values = values.map do |value|\n  V::Lucky.to_db!(value)\nend\nadd_clause(Avram::Where::In.new(column, values))\n"}},{"id":"is_nil:T-instance-method","html_id":"is_nil:T-instance-method","name":"is_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L73","def":{"name":"is_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Null.new(column))"}},{"id":"is_not_nil:T-instance-method","html_id":"is_not_nil:T-instance-method","name":"is_not_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L77","def":{"name":"is_not_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"not()\nis_nil\n"}},{"id":"lt(value):T-instance-method","html_id":"lt(value):T-instance-method","name":"lt","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L95","def":{"name":"lt","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThan.new(column, V::Lucky.to_db!(value)))"}},{"id":"lte(value):T-instance-method","html_id":"lte(value):T-instance-method","name":"lte","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L99","def":{"name":"lte","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThanOrEqualTo.new(column, V::Lucky.to_db!(value)))"}},{"id":"nilable_eq(value):T-instance-method","html_id":"nilable_eq(value):T-instance-method","name":"nilable_eq","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L63","def":{"name":"nilable_eq","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\nif value.nil?\n  is_nil\nelse\n  perform_eq(value)\nend\n"}},{"id":"not:Avram::Criteria-instance-method","html_id":"not:Avram::Criteria-instance-method","name":"not","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Criteria","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L82","def":{"name":"not","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Avram::Criteria","visibility":"Public","body":"@negate_next_criteria = true\nself\n"}},{"id":"rows-instance-method","html_id":"rows-instance-method","name":"rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L2","def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows"}},{"id":"rows=(rows)-instance-method","html_id":"rows=(rows)-instance-method","name":"rows=","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"args_string":"(rows)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L2","def":{"name":"rows=","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows = rows"}},{"id":"select_average:Float64?-instance-method","html_id":"select_average:Float64?-instance-method","name":"select_average","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L113","def":{"name":"select_average","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"rows.query.select_average(column)\n(rows.exec_scalar.as(PG::Numeric | Nil)).try(&.to_f64)\n"}},{"id":"select_average!:Float64-instance-method","html_id":"select_average!:Float64-instance-method","name":"select_average!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L118","def":{"name":"select_average!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"select_average || 0_f64"}},{"id":"select_max:V?-instance-method","html_id":"select_max:V?-instance-method","name":"select_max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L108","def":{"name":"select_max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V | Nil","visibility":"Public","body":"rows.query.select_max(column)\nrows.exec_scalar.as(V | Nil)\n"}},{"id":"select_min:V?-instance-method","html_id":"select_min:V?-instance-method","name":"select_min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L103","def":{"name":"select_min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V | Nil","visibility":"Public","body":"rows.query.select_min(column)\nrows.exec_scalar.as(V | Nil)\n"}},{"id":"select_sum-instance-method","html_id":"select_sum-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L122","def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows.query.select_sum(column)\nrows.exec_scalar\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Database","path":"Avram/Database.html","kind":"class","full_name":"Avram::Database","name":"Database","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/database.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"rollback-class-method","html_id":"rollback-class-method","name":"rollback","doc":"Rollback the current transaction","summary":"<p>Rollback the current transaction</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L27","def":{"name":"rollback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.rollback"}},{"id":"run(&)-class-method","html_id":"run(&amp;)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L50","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.run do |*yield_args|\n  yield *yield_args\nend"}},{"id":"transaction(&)-class-method","html_id":"transaction(&amp;)-class-method","name":"transaction","doc":"Wrap the block in a database transaction\n\n```\nAppDatabase.transaction do\n  # Create, read, update\n  # Force a rollback with AppDatabase.rollback\nend\n```","summary":"<p>Wrap the block in a database transaction</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L44","def":{"name":"transaction","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"new.transaction do |*yield_args|\n  yield *yield_args\nend"}},{"id":"transactions-class-method","html_id":"transactions-class-method","name":"transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L5","def":{"name":"transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@transactions"}},{"id":"truncate-class-method","html_id":"truncate-class-method","name":"truncate","doc":"Run a SQL `TRUNCATE` on all tables in the database","summary":"<p>Run a SQL <code>TRUNCATE</code> on all tables in the database</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L32","def":{"name":"truncate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.truncate"}},{"id":"url-class-method","html_id":"url-class-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L56","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.url"}}],"constructors":[],"instance_methods":[{"id":"select_rows(statement)-instance-method","html_id":"select_rows(statement)-instance-method","name":"select_rows","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":""}],"args_string":"(statement)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L126","def":{"name":"select_rows","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rows = [] of String\nrun do |db|\n  db.query(statement) do |rs|\n    rs.each do\n      rows << (rs.read(String))\n    end\n  end\nend\nrows\n"}},{"id":"table_columns(table_name)-instance-method","html_id":"table_columns(table_name)-instance-method","name":"table_columns","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L140","def":{"name":"table_columns","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"statement = \"SELECT column_name as name, is_nullable::boolean as nilable\\nFROM information_schema.columns\\nWHERE table_schema = 'public'\\n  AND table_name = '#{table_name}'\"\nrun do |db|\n  db.query_all(statement, as: TableColumn)\nend\n"}},{"id":"table_names-instance-method","html_id":"table_names-instance-method","name":"table_names","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L112","def":{"name":"table_names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tables_with_schema(excluding: \"migrations\")"}},{"id":"tables_with_schema(excluding:String)-instance-method","html_id":"tables_with_schema(excluding:String)-instance-method","name":"tables_with_schema","doc":null,"summary":null,"abstract":false,"args":[{"name":"excluding","doc":null,"default_value":"","external_name":"excluding","restriction":"String"}],"args_string":"(excluding : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L116","def":{"name":"tables_with_schema","args":[{"name":"excluding","doc":null,"default_value":"","external_name":"excluding","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"select_rows(\"SELECT table_name\\nFROM information_schema.tables\\nWHERE table_schema='public'\\nAND table_type='BASE TABLE'\\nAND table_name != '#{excluding}';\")"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Database/DatabaseCleaner","path":"Avram/Database/DatabaseCleaner.html","kind":"class","full_name":"Avram::Database::DatabaseCleaner","name":"DatabaseCleaner","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/database.cr","line_number":158,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(database:Avram::Database)-class-method","html_id":"new(database:Avram::Database)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database"}],"args_string":"(database : Avram::Database)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L161","def":{"name":"new","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"truncate-instance-method","html_id":"truncate-instance-method","name":"truncate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L164","def":{"name":"truncate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"table_names = database.table_names\nif table_names.empty?\n  return\nend\nstatement = (\"TRUNCATE TABLE #{table_names.map do |name|\n  name\nend.join(\", \")} RESTART IDENTITY CASCADE;\")\ndatabase.run do |db|\n  db.exec(statement)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Database/FiberId","path":"Avram/Database/FiberId.html","kind":"alias","full_name":"Avram::Database::FiberId","name":"FiberId","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/database.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Database/TableColumn","path":"Avram/Database/TableColumn.html","kind":"class","full_name":"Avram::Database::TableColumn","name":"TableColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/database.cr","line_number":151,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"doc":null,"summary":null,"class_methods":[{"id":"from_rs(__temp_72:DB::ResultSet)-class-method","html_id":"from_rs(__temp_72:DB::ResultSet)-class-method","name":"from_rs","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_72","doc":null,"default_value":"","external_name":"__temp_72","restriction":"::DB::ResultSet"}],"args_string":"(__temp_72 : DB::ResultSet)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"from_rs","args":[{"name":"__temp_72","doc":null,"default_value":"","external_name":"__temp_72","restriction":"::DB::ResultSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  __temp_73 = Array(self).new\n  __temp_72.each do\n    __temp_73 << (self.new(__temp_72))\n  end\n  __temp_73\nensure\n  __temp_72.close\nend"}}],"constructors":[{"id":"new(__temp_72:DB::ResultSet)-class-method","html_id":"new(__temp_72:DB::ResultSet)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"__temp_72","doc":null,"default_value":"","external_name":"__temp_72","restriction":"::DB::ResultSet"}],"args_string":"(__temp_72 : DB::ResultSet)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"new","args":[{"name":"__temp_72","doc":null,"default_value":"","external_name":"__temp_72","restriction":"::DB::ResultSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__temp_72)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"name=(_name:String)-instance-method","html_id":"name=(_name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"args_string":"(_name : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"name=","args":[{"name":"_name","doc":null,"default_value":"","external_name":"_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = _name"}},{"id":"nilable:Bool-instance-method","html_id":"nilable:Bool-instance-method","name":"nilable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"nilable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nilable"}},{"id":"nilable=(_nilable:Bool)-instance-method","html_id":"nilable=(_nilable:Bool)-instance-method","name":"nilable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nilable","doc":null,"default_value":"","external_name":"_nilable","restriction":"Bool"}],"args_string":"(_nilable : Bool)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database.cr#L152","def":{"name":"nilable=","args":[{"name":"_nilable","doc":null,"default_value":"","external_name":"_nilable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nilable = _nilable"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/DatabaseValidations","path":"Avram/DatabaseValidations.html","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/database_validations.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/database_validations.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/DefineAttribute","path":"Avram/DefineAttribute.html","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/define_attribute.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L35","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[] of Avram::PermittedAttribute(Nil)"}}],"macros":[{"id":"allow_virtual(*args,**named_args)-macro","html_id":"allow_virtual(*args,**named_args)-macro","name":"allow_virtual","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L37","def":{"name":"allow_virtual","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"'allow_virtual' has been renamed to 'attribute'\") %}\n\n  \n"}},{"id":"attribute(type_declaration)-macro","html_id":"attribute(type_declaration)-macro","name":"attribute","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L45","def":{"name":"attribute","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% raise(\"attribute must use just one type\") %}\n    {% end %}\n\n\n    \n{% ATTRIBUTES << type_declaration %}\n\n\n    \n{% type = type_declaration.type %}\n\n    \n{% name = type_declaration.var %}\n\n    \n{% default_value = if type_declaration.value.is_a?(Nop)\n  nil\nelse\n  type_declaration.value\nend %}\n\n    @_\n{{ name }}\n : Avram::Attribute(\n{{ type }}\n?)?\n\n    \nensure_base_attributes_method_is_present\n\n    def attributes\n      ([\n{{ name }}\n] + previous_def + super).uniq\n    \nend\n\n    def \n{{ name }}\n\n      _\n{{ name }}\n.permitted\n    \nend\n\n    private def _\n{{ name }}\n\n      @_\n{{ name }}\n ||= Avram::Attribute(\n{{ type }}\n?).new(\n        name: :\n{{ name }}\n,\n        param: \n{{ name }}\n_param,\n        value: \n{{ default_value }}\n,\n        param_key: self.class.param_key\n      ).tap do |attribute|\n        if \n{{ name }}\n_param_given?\n          set_\n{{ name }}\n_from_param(attribute)\n        \nend\n      \nend\n    \nend\n\n    private def \n{{ name }}\n_param\n      params.nested(self.class.param_key)[\"\n{{ name }}\n\"]?\n    \nend\n\n    private def \n{{ name }}\n_param_given?\n      params.nested(self.class.param_key).has_key?(\"\n{{ name }}\n\")\n    \nend\n\n    def set_\n{{ name }}\n_from_param(attribute : Avram::Attribute)\n      parse_result = \n{{ type }}\n::Lucky.parse(\n{{ name }}\n_param)\n      if parse_result.is_a? Avram::Type::SuccessfulCast\n        attribute.value = parse_result.value\n      \nelse\n        attribute.add_error \"is invalid\"\n      \nend\n    \nend\n  \n"}},{"id":"ensure_base_attributes_method_is_present-macro","html_id":"ensure_base_attributes_method_is_present-macro","name":"ensure_base_attributes_method_is_present","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L2","def":{"name":"ensure_base_attributes_method_is_present","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !(@type.methods.map(&.name).includes?((:attributes).id)) %}\n      def attributes\n        [] of Avram::PermittedAttribute(Nil)\n      end\n    {% end %}\n\n  \n"}},{"id":"inherit_attributes-macro","html_id":"inherit_attributes-macro","name":"inherit_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L18","def":{"name":"inherit_attributes","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:ATTRIBUTES) %}\n      ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :ATTRIBUTES %}\n        \n\\{% \nATTRIBUTES << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_attributes\n    \nend\n  \n"}},{"id":"virtual(*args,**named_args)-macro","html_id":"virtual(*args,**named_args)-macro","name":"virtual","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/define_attribute.cr#L41","def":{"name":"virtual","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"'virtual' has been renamed to 'attribute'\") %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/ImpossibleValidation","path":"Avram/ImpossibleValidation.html","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when a validation is expecting an impossible constraint","summary":"<p>Raised when a validation is expecting an impossible constraint</p>","class_methods":[],"constructors":[{"id":"new(attribute:Symbol,message=&quot;animpossiblevalidation&quot;)-class-method","html_id":"new(attribute:Symbol,message=&amp;quot;animpossiblevalidation&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"\"an impossible validation\"","external_name":"message","restriction":""}],"args_string":"(attribute : Symbol, message = <span class=\"s\">&quot;an impossible validation&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L37","def":{"name":"new","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Symbol"},{"name":"message","doc":null,"default_value":"\"an impossible validation\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attribute, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/InheritColumnAttributes","path":"Avram/InheritColumnAttributes.html","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/inherit_column_attributes.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/inherit_column_attributes.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"inherit_column_attributes-macro","html_id":"inherit_column_attributes-macro","name":"inherit_column_attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/inherit_column_attributes.cr#L8","def":{"name":"inherit_column_attributes","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:COLUMN_ATTRIBUTES) %}\n      COLUMN_ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :COLUMN_ATTRIBUTES %}\n        \n\\{% \nCOLUMN_ATTRIBUTES << attribute %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_column_attributes\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Insert","path":"Avram/Insert.html","kind":"class","full_name":"Avram::Insert","name":"Insert","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/insert.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/insert.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table:Symbol,params:Params,column_names:Array(Symbol)=[]ofSymbol)-class-method","html_id":"new(table:Symbol,params:Params,column_names:Array(Symbol)=[]ofSymbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Params"},{"name":"column_names","doc":null,"default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"args_string":"(table : Symbol, params : Params, column_names : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/insert.cr#L4","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Params"},{"name":"column_names","doc":null,"default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, params, column_names)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args-instance-method","html_id":"args-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/insert.cr#L21","def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params.values"}},{"id":"statement-instance-method","html_id":"statement-instance-method","name":"statement","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/insert.cr#L7","def":{"name":"statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"insert into #{@table}(#{fields}) values(#{values_placeholders}) returning #{returning}\""}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Insert/Params","path":"Avram/Insert/Params.html","kind":"alias","full_name":"Avram::Insert::Params","name":"Params","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/insert.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/insert.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"(Hash(Symbol, Nil) | Hash(Symbol, String | Nil) | Hash(Symbol, String))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Insert","kind":"class","full_name":"Avram::Insert","name":"Insert"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/InvalidOperationError","path":"Avram/InvalidOperationError.html","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":43,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when using the create! or update! methods on an operation when it does not have the proper attributes","summary":"<p>Raised when using the create! or update! methods on an operation when it does not have the proper attributes</p>","class_methods":[],"constructors":[{"id":"new(operation)-class-method","html_id":"new(operation)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"args_string":"(operation)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L46","def":{"name":"new","args":[{"name":"operation","doc":null,"default_value":"","external_name":"operation","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"errors:Hash(Symbol,Array(String))-instance-method","html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L44","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@errors"}},{"id":"save_operation_errors-instance-method","html_id":"save_operation_errors-instance-method","name":"save_operation_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L59","def":{"name":"save_operation_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% raise(\"Avram::InvalidSaveOperationError#save_operation_errors has been renamed to 'errors'\") %}"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/InvalidSaveOperationError","path":"Avram/InvalidSaveOperationError.html","kind":"class","full_name":"Avram::InvalidSaveOperationError","name":"InvalidSaveOperationError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(*args,**named_args)-class-method","html_id":"new(*args,**named_args)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L65","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(*args, **named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Join","path":"Avram/Join.html","kind":"module","full_name":"Avram::Join","name":"Join","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/join.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Join/Full","path":"Avram/Join/Full.html","kind":"class","full_name":"Avram::Join::Full","name":"Full","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/join.cr","line_number":58,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L59","def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"FULL\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Join/Inner","path":"Avram/Join/Inner.html","kind":"class","full_name":"Avram::Join::Inner","name":"Inner","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/join.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L41","def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"INNER\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Join/Left","path":"Avram/Join/Left.html","kind":"class","full_name":"Avram::Join::Left","name":"Left","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/join.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L47","def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"LEFT\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Join/Right","path":"Avram/Join/Right.html","kind":"class","full_name":"Avram::Join::Right","name":"Right","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/join.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L53","def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"RIGHT\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Join/SqlClause","path":"Avram/Join/SqlClause.html","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/join.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Join/Full","kind":"class","full_name":"Avram::Join::Full","name":"Full"},{"html_id":"github.com/luckyframework/avram/Avram/Join/Inner","kind":"class","full_name":"Avram::Join::Inner","name":"Inner"},{"html_id":"github.com/luckyframework/avram/Avram/Join/Left","kind":"class","full_name":"Avram::Join::Left","name":"Left"},{"html_id":"github.com/luckyframework/avram/Avram/Join/Right","kind":"class","full_name":"Avram::Join::Right","name":"Right"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from:Symbol,to:Symbol,primary_key:Symbol?=nil,foreign_key:Symbol?=nil,comparison:String?=&quot;=&quot;,using:Array(Symbol)=[]ofSymbol)-class-method","html_id":"new(from:Symbol,to:Symbol,primary_key:Symbol?=nil,foreign_key:Symbol?=nil,comparison:String?=&amp;quot;=&amp;quot;,using:Array(Symbol)=[]ofSymbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","doc":null,"default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","doc":null,"default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"}],"args_string":"(from : Symbol, to : Symbol, primary_key : Symbol? = <span class=\"n\">nil</span>, foreign_key : Symbol? = <span class=\"n\">nil</span>, comparison : String? = <span class=\"s\">&quot;=&quot;</span>, using : Array(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L7","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"primary_key","doc":null,"default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","doc":null,"default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","doc":null,"default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, primary_key, foreign_key, comparison, using)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_foreign_key-instance-method","html_id":"default_foreign_key-instance-method","name":"default_foreign_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L35","def":{"name":"default_foreign_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Wordsmith::Inflector.singularize(@from)) + \"_id\""}},{"id":"from:Symbol-instance-method","html_id":"from:Symbol-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L5","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from"}},{"id":"from_column-instance-method","html_id":"from_column-instance-method","name":"from_column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L27","def":{"name":"from_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@from}.#{@primary_key || \"id\"}\""}},{"id":"join_type:String-instance-method","html_id":"join_type:String-instance-method","name":"join_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L17","def":{"name":"join_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"to:Symbol-instance-method","html_id":"to:Symbol-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L5","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to"}},{"id":"to_column-instance-method","html_id":"to_column-instance-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L31","def":{"name":"to_column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{@to}.#{@foreign_key || default_foreign_key}\""}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/join.cr#L19","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @using.any?\n  \"#{join_type} JOIN #{@to} USING (#{@using.join(\", \")})\"\nelse\n  \"#{join_type} JOIN #{@to} ON #{from_column} #{@comparison} #{to_column}\"\nend"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/LazyLoadError","path":"Avram/LazyLoadError.html","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when trying to access a record that was not preloaded and lazy load\nis disabled.","summary":"<p>Raised when trying to access a record that was not preloaded and lazy load is disabled.</p>","class_methods":[],"constructors":[{"id":"new(model:String,association:String)-class-method","html_id":"new(model:String,association:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"String"},{"name":"association","doc":null,"default_value":"","external_name":"association","restriction":"String"}],"args_string":"(model : String, association : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L19","def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"String"},{"name":"association","doc":null,"default_value":"","external_name":"association","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, association)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/MarkAsFailed","path":"Avram/MarkAsFailed.html","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/mark_as_failed.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/mark_as_failed.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"mark_as_failed-instance-method","html_id":"mark_as_failed-instance-method","name":"mark_as_failed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/mark_as_failed.cr#L2","def":{"name":"mark_as_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.save_status = Avram::SaveOperation::SaveStatus::SaveFailed"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator","path":"Avram/Migrator.html","kind":"module","full_name":"Avram::Migrator","name":"Migrator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/index_statement_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/index_statement_helpers.cr"},{"filename":"avram/migrator/migrator.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migrator.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"run(&)-class-method","html_id":"run(&amp;)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migrator.cr#L2","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  yield\nrescue e : PQ::PQError\n  raise((e.message.colorize(:red)).to_s)\nrescue e : Exception\n  raise(e.message.to_s)\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/AlterTableStatement","path":"Avram/Migrator/AlterTableStatement.html","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/alter_table_statement.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L13","def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_change_type_statement(column:Avram::Migrator::Columns::Base)-instance-method","html_id":"add_change_type_statement(column:Avram::Migrator::Columns::Base)-instance-method","name":"add_change_type_statement","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"args_string":"(column : Avram::Migrator::Columns::Base)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L29","def":{"name":"add_change_type_statement","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"change_type_statements << (column.build_change_type_statement(@table_name))"}},{"id":"add_fill_existing_with_statements(column:Symbol|String,type,value)-instance-method","html_id":"add_fill_existing_with_statements(column:Symbol|String,type,value)-instance-method","name":"add_fill_existing_with_statements","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(column : Symbol | String, type, value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L161","def":{"name":"add_fill_existing_with_statements","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fill_existing_with_statements = @fill_existing_with_statements + [\"UPDATE #{@table_name} SET #{column} = #{value.to_s};\", \"ALTER TABLE #{@table_name} ALTER COLUMN #{column} SET NOT NULL;\"]"}},{"id":"alter_statements:Array(String)-instance-method","html_id":"alter_statements:Array(String)-instance-method","name":"alter_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L62","def":{"name":"alter_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"if (rows + dropped_rows).empty?\n  [] of String\nelse\n  statement = String.build do |statement|\n    statement << \"ALTER TABLE #{@table_name}\"\n    statement << \"\\n\"\n    statement << ((rows + dropped_rows).join(\",\\n\"))\n  end\n  [statement]\nend"}},{"id":"build(&)-instance-method","html_id":"build(&amp;)-instance-method","name":"build","doc":"Accepts a block to alter a table using the `add` method. The generated sql\nstatements are aggregated in the `statements` getter.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::AlterTableStatement.new(:users).build do\n  add name : String\n  add age : Int32\n  remove old_field\nend\n\nbuilt.statements\n# => [\n\"ALTER TABLE users\n  ADD name text NOT NULL,\n  ADD age int NOT NULL,\n  DROP old_field\"\n]\n```","summary":"<p>Accepts a block to alter a table using the <code><a href=\"../../Avram/Migrator/AlterTableStatement.html#add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro\">add</a></code> method.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L53","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"with self yield\nself\n"}},{"id":"change_type_statements:Array(String)-instance-method","html_id":"change_type_statements:Array(String)-instance-method","name":"change_type_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L11","def":{"name":"change_type_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@change_type_statements"}},{"id":"dropped_rows:Array(String)-instance-method","html_id":"dropped_rows:Array(String)-instance-method","name":"dropped_rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L9","def":{"name":"dropped_rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@dropped_rows"}},{"id":"fill_existing_with_statements:Array(String)-instance-method","html_id":"fill_existing_with_statements:Array(String)-instance-method","name":"fill_existing_with_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L10","def":{"name":"fill_existing_with_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fill_existing_with_statements"}},{"id":"remove(name:Symbol)-instance-method","html_id":"remove(name:Symbol)-instance-method","name":"remove","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L168","def":{"name":"remove","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dropped_rows << \"  DROP #{name.to_s}\""}},{"id":"rows:Array(String)-instance-method","html_id":"rows:Array(String)-instance-method","name":"rows","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L8","def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rows"}},{"id":"statements-instance-method","html_id":"statements-instance-method","name":"statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L58","def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((alter_statements + change_type_statements) + index_statements) + fill_existing_with_statements"}}],"macros":[{"id":"add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro","html_id":"add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""}],"args_string":"(type_declaration, index = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>, default = <span class=\"n\">nil</span>, fill_existing_with = <span class=\"n\">nil</span>, **type_options)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L102","def":{"name":"add","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","doc":null,"default_value":"nil","external_name":"fill_existing_with","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% type = type_declaration.type.types.first %}\n      {% nilable = true %}\n      {% array = false %}\n    {% else %}{% if type_declaration.type.is_a?(Generic) %}\n      {% type = type_declaration.type.type_vars.first %}\n      {% nilable = false %}\n      {% array = true %}\n    {% else %}\n      {% type = type_declaration.type %}\n      {% nilable = false %}\n      {% array = false %}\n    {% end %}{% end %}\n\n\n    \n{% if ((!nilable) && (default == nil)) && (fill_existing_with == nil) %}\n      {% raise(\"\\nYou must provide a default value or use fill_existing_with when adding a required column to an existing table.\\n\\nTry one of these...\\n\\n  â–¸ add #{type_declaration.var} : #{type}, default: \\\"Something\\\"\\n  â–¸ add #{type_declaration.var} : #{type}, fill_existing_with: \\\"Something\\\"\\n  â–¸ add #{type_declaration.var} : #{type}, fill_existing_with: :nothing\") %}\n    {% end %}\n\n\n    \n{% if default && fill_existing_with %}\n      {% type_declaration.raise(\"Cannot use both 'default' and 'fill_existing_with' arguments\") %}\n    {% end %}\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({% end %}\n{{ type }}\n{% if array %}){% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable }}\n,\n      default: \n{{ default }}\n,\n      \n{{ **type_options }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_alter\n\n    \n{% if fill_existing_with && (fill_existing_with != (:nothing)) %}\n      add_fill_existing_with_statements(\n        column: {{ type_declaration.var.stringify }},\n        type: {{ type }},\n        value: Avram::Migrator::Columns::{{ type }}Column.prepare_value_for_database({{ fill_existing_with }})\n      )\n    {% end %}\n\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64)-macro","html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""}],"args_string":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L76","def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first.stringify.underscore %}\n    {% else %}\n      {% underscored_class = type_declaration.type.stringify.underscore %}\n    {% end %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << ::Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_alter\n\n    add_index :\n{{ foreign_key_name }}\n\n  \n"}},{"id":"change_type(type_declaration,**type_options)-macro","html_id":"change_type(type_declaration,**type_options)-macro","name":"change_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration, **type_options)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L16","def":{"name":"change_type","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !type_declaration.is_a?(TypeDeclaration) %}\n      {% type_declaration.raise(\"Must pass a type declaration to 'change_type'. Example: change_type age : Int32\") %}\n    {% end %}\n\n    \n%column\n = ::Avram::Migrator::Columns::\n{{ type_declaration.type }}\nColumn(\n{{ type_declaration.type }}\n).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: false,\n      default: nil,\n      \n{{ **type_options }}\n\n    )\n    add_change_type_statement \n%column\n\n  \n"}},{"id":"remove_belongs_to(association_name)-macro","html_id":"remove_belongs_to(association_name)-macro","name":"remove_belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"association_name","doc":null,"default_value":"","external_name":"association_name","restriction":""}],"args_string":"(association_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/alter_table_statement.cr#L172","def":{"name":"remove_belongs_to","args":[{"name":"association_name","doc":null,"default_value":"","external_name":"association_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if association_name.is_a?(SymbolLiteral) %}{% else %}\n      {% raise(\"remove_belongs_to expected a symbol like ':user', instead got: '#{association_name}'\") %}\n    {% end %}\n\n    remove \n{{ association_name }}\n_id\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/BuildReferenceFragment","path":"Avram/Migrator/BuildReferenceFragment.html","kind":"class","full_name":"Avram::Migrator::BuildReferenceFragment","name":"BuildReferenceFragment","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/build_reference_fragment.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/build_reference_fragment.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(references,on_delete)-class-method","html_id":"new(references,on_delete)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"args_string":"(references, on_delete)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/build_reference_fragment.cr#L7","def":{"name":"new","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(references, on_delete)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/build_reference_fragment.cr#L10","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if on_delete == (:do_nothing)\n  \" REFERENCES #{references}\"\nelse\n  (\" REFERENCES #{references}\" + \" ON DELETE \") + on_delete_sql\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/ChangeNullStatement","path":"Avram/Migrator/ChangeNullStatement.html","kind":"class","full_name":"Avram::Migrator::ChangeNullStatement","name":"ChangeNullStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/change_null_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/change_null_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for changing a columns NOT NULL status.\n\n### Usage\n\n```\nChangeNullStatement.new(:users, :email, make: :optional).build\n# => \"ALTER TABLE users ALTER COLUMN email DROP NOT NULL;\"\n```","summary":"<p>Builds an SQL statement for changing a columns NOT NULL status.</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,column:Symbol,required:Bool)-class-method","html_id":"new(table:Symbol,column:Symbol,required:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"Bool"}],"args_string":"(table : Symbol, column : Symbol, required : Bool)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/change_null_statement.cr#L10","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"required","doc":null,"default_value":"","external_name":"required","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, column, required)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/change_null_statement.cr#L13","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @required\n  change = \"SET\"\nelse\n  change = \"DROP\"\nend\nString.build do |index|\n  index << \"ALTER TABLE #{@table}\"\n  index << \" ALTER COLUMN #{@column}\"\n  index << \" #{change} NOT NULL;\"\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","path":"Avram/Migrator/Columns.html","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/columns/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr"},{"filename":"avram/migrator/columns/bool_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/bool_column.cr"},{"filename":"avram/migrator/columns/float_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr"},{"filename":"avram/migrator/columns/int16_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int16_column.cr"},{"filename":"avram/migrator/columns/int32_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int32_column.cr"},{"filename":"avram/migrator/columns/int64_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int64_column.cr"},{"filename":"avram/migrator/columns/string_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/string_column.cr"},{"filename":"avram/migrator/columns/time_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/time_column.cr"},{"filename":"avram/migrator/columns/uuid_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/uuid_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","path":"Avram/Migrator/Columns/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/BoolColumn","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int16Column","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int32Column","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int64Column","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/JSON/AnyColumn","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/StringColumn","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/TimeColumn","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/UUIDColumn","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[{"id":"escape_literal(value)-class-method","html_id":"escape_literal(value)-class-method","name":"escape_literal","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L74","def":{"name":"escape_literal","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PG::EscapeHelper.escape_literal(value)"}},{"id":"prepare_value_for_database(value:Array)-class-method","html_id":"prepare_value_for_database(value:Array)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array"}],"args_string":"(value : Array)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L70","def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(PQ::Param.encode_array(value))"}},{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L66","def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(value.to_s)"}}],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L13","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"array!-instance-method","html_id":"array!-instance-method","name":"array!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L28","def":{"name":"array!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array = true\nself\n"}},{"id":"as_array_type:String-instance-method","html_id":"as_array_type:String-instance-method","name":"as_array_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L45","def":{"name":"as_array_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@array ? \"[]\" : \"\""}},{"id":"build_add_statement_for_alter:String-instance-method","html_id":"build_add_statement_for_alter:String-instance-method","name":"build_add_statement_for_alter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L37","def":{"name":"build_add_statement_for_alter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  ADD \" + build_add_statement"}},{"id":"build_add_statement_for_create:String-instance-method","html_id":"build_add_statement_for_create:String-instance-method","name":"build_add_statement_for_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L41","def":{"name":"build_add_statement_for_create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  \" + build_add_statement"}},{"id":"build_change_type_statement(table_name:Symbol):String-instance-method","html_id":"build_change_type_statement(table_name:Symbol):String-instance-method","name":"build_change_type_statement","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol) : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L33","def":{"name":"build_change_type_statement","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"ALTER TABLE #{table_name} ALTER COLUMN #{name} SET DATA TYPE #{column_type};\""}},{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L60","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"set_references(references:String,on_delete:Symbol)-instance-method","html_id":"set_references(references:String,on_delete:Symbol)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"String"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"}],"args_string":"(references : String, on_delete : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L16","def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"String"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"}},{"id":"set_references(references:Nil,on_delete:Nil)-instance-method","html_id":"set_references(references:Nil,on_delete:Nil)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Nil"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Nil"}],"args_string":"(references : Nil, on_delete : Nil)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L20","def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":"Nil"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"}},{"id":"set_references(references,on_delete)-instance-method","html_id":"set_references(references,on_delete)-instance-method","name":"set_references","doc":null,"summary":null,"abstract":false,"args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"args_string":"(references, on_delete)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/base.cr#L24","def":{"name":"set_references","args":[{"name":"references","doc":null,"default_value":"","external_name":"references","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@references = references\n@on_delete = on_delete\n{% raise(\"When setting a reference you must set the reference table and the 'on_delete' option.\") %}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/BoolColumn","path":"Avram/Migrator/Columns/BoolColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/bool_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/bool_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/bool_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BoolColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/bool_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"boolean\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Float32Column","path":"Avram/Migrator/Columns/Float32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/float_column.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L11","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L14","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Float64Column","path":"Avram/Migrator/Columns/Float64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/float_column.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L11","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L14","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/FloatColumn","path":"Avram/Migrator/Columns/FloatColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/float_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Float32Column","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Float64Column","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default,precision,scale)-class-method","html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L11","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""},{"name":"precision","doc":null,"default_value":"","external_name":"precision","restriction":""},{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L14","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/float_column.cr#L17","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if precision && scale\n  \"decimal(#{precision},#{scale})\"\nelse\n  \"decimal\"\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int16Column","path":"Avram/Migrator/Columns/Int16Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/int16_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int16_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int16_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int16Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int16_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"smallint\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int32Column","path":"Avram/Migrator/Columns/Int32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/int32_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int32_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int32_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int32_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"int\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Int64Column","path":"Avram/Migrator/Columns/Int64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/int64_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int64_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int64_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Int64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/int64_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"bigint\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/JSON","path":"Avram/Migrator/Columns/JSON.html","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/columns/json_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/json_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/JSON/AnyColumn","path":"Avram/Migrator/Columns/JSON/AnyColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/json_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/json_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/JSON","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON"},"doc":null,"summary":null,"class_methods":[{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/json_column.cr#L14","def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"escape_literal(value.to_json)"}}],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/json_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/json_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"jsonb\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","path":"Avram/Migrator/Columns/PrimaryKeys.html","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/columns/primary_keys/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/base.cr"},{"filename":"avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int16_primary_key.cr"},{"filename":"avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int32_primary_key.cr"},{"filename":"avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int64_primary_key.cr"},{"filename":"avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","path":"Avram/Migrator/Columns/PrimaryKeys/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/primary_keys/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/base.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"build:String-instance-method","html_id":"build:String-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/base.cr#L8","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"  #{name} #{column_type} PRIMARY KEY\""}},{"id":"column_type-instance-method","html_id":"column_type-instance-method","name":"column_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/base.cr#L6","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int16_primary_key.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L8","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"smallserial\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int32_primary_key.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L8","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"serial\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int64_primary_key.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L8","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"bigserial\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L5","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L8","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"uuid\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/StringColumn","path":"Avram/Migrator/Columns/StringColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/string_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/string_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/string_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = StringColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/string_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"text\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/TimeColumn","path":"Avram/Migrator/Columns/TimeColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/time_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/time_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[{"id":"prepare_value_for_database(value)-class-method","html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/time_column.cr#L14","def":{"name":"prepare_value_for_database","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value == (:now)\n  \"NOW()\"\nelse\n  if value.is_a?(Time)\n    escape_literal(value.to_utc.to_s)\n  else\n    raise(\"Unrecognized value :#{value} for a timestamptz. Please use a Time object or :now for current timestamp.\")\n  end\nend"}}],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/time_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = TimeColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/time_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"timestamptz\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/UUIDColumn","path":"Avram/Migrator/Columns/UUIDColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/columns/uuid_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/uuid_column.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,nilable,default)-class-method","html_id":"new(name,nilable,default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/uuid_column.cr#L7","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"nilable","doc":null,"default_value":"","external_name":"nilable","restriction":""},{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UUIDColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column_type:String-instance-method","html_id":"column_type:String-instance-method","name":"column_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/columns/uuid_column.cr#L10","def":{"name":"column_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"uuid\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateForeignKeyStatement","path":"Avram/Migrator/CreateForeignKeyStatement.html","kind":"class","full_name":"Avram::Migrator::CreateForeignKeyStatement","name":"CreateForeignKeyStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/create_foreign_key_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_foreign_key_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Generates an ALTER TABLE statement for adding a foreign key constraint on a table.\n\n### Usage\n\n```\nCreateForeignKeyStatement.new(from: :comments, to: :users, column: :author_id, primary_key: :uid, on_delete: :cascade).build\n# => \"ALTER TABLE comments ADD CONSTRAINT comments_author_id_fk FOREIGN KEY (author_id) REFERENCES users (uid) ON DELETE CASCADE;\"\n```","summary":"<p>Generates an ALTER TABLE statement for adding a foreign key constraint on a table.</p>","class_methods":[],"constructors":[{"id":"new(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?=nil,primary_key=:id)-class-method","html_id":"new(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?=nil,primary_key=:id)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"args_string":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol? = <span class=\"n\">nil</span>, primary_key = <span class=\"n\">:id</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_foreign_key_statement.cr#L10","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, on_delete, column, primary_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_foreign_key_statement.cr#L13","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"foreign_key = @column || ((Wordsmith::Inflector.singularize(@to.to_s)) + \"_id\")\nString.build do |index|\n  index << \"ALTER TABLE\"\n  index << \" #{@from}\"\n  index << \" ADD CONSTRAINT #{@from}_#{foreign_key}_fk\"\n  index << \" FOREIGN KEY (#{foreign_key})\"\n  index << (BuildReferenceFragment.new(\"#{@to} (#{@primary_key})\", @on_delete)).build\n  index << \";\"\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateIndexStatement","path":"Avram/Migrator/CreateIndexStatement.html","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/create_index_statement.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_index_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ALLOWED_INDEX_TYPES","name":"ALLOWED_INDEX_TYPES","value":"[\"btree\"] of ::String","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for creating an index using table name, column\nname(s), index type and unique flag.\n\n### Usage\n\nFor a single column:\n\n```\nCreateIndexStatement.new(:users, columns: :email, using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n```\n\nFor multiple columns:\n\n```\nCreateIndexStatement.new(:users, columns: [:email, :username], using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_username_index ON users USING btree (email, username);\"\n```","summary":"<p>Builds an SQL statement for creating an index using table name, column name(s), index type and unique flag.</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,columns:Columns,using:Symbol=:btree,unique=false)-class-method","html_id":"new(table:Symbol,columns:Columns,using:Symbol=:btree,unique=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"args_string":"(table : Symbol, columns : Columns, using : Symbol = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_index_statement.cr#L26","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, using, unique)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_index_statement.cr#L30","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |index|\n  index << \"CREATE\"\n  if @unique\n    index << \" UNIQUE\"\n  end\n  index << \" INDEX #{@table}_#{columns.join(\"_\")}_index\"\n  index << \" ON #{@table}\"\n  index << \" USING #{@using}\"\n  index << \" (#{columns.join(\", \")});\"\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateTableStatement","path":"Avram/Migrator/CreateTableStatement.html","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/create_table_statement.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L10","def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(&):CreateTableStatement-instance-method","html_id":"build(&amp;):CreateTableStatement-instance-method","name":"build","doc":"Accepts a block to build a table and indices using `add` and `add_index` methods.\n\nThe generated sql statements are aggregated in the `statements` method.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users).build do\n  add_belongs_to Account, on_delete: :cascade\n  add :email : String, unique: true\nend\n\nbuilt.statements\n# => [\n  \"CREATE TABLE users (\n    id serial PRIMARY KEY,\n    created_at timestamptz NOT NULL,\n    updated_at timestamptz NOT NULL,\n    account_id bigint NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,\n    email text NOT NULL);\",\n  \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n]\n```\n\nAn optional second argument can toggle between the usage of a numeric or uuid\nbased id column.\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users, PrimaryKeyType::UUID).build do\n  add :email : String, unique: true\nend\n```","summary":"<p>Accepts a block to build a table and indices using <code><a href=\"../../Avram/Migrator/CreateTableStatement.html#add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro\">add</a></code> and <code>add_index</code> methods.</p>","abstract":false,"args":[],"args_string":"(&) : CreateTableStatement","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L45","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"CreateTableStatement","visibility":"Public","body":"with self yield\nself\n"}},{"id":"statements-instance-method","html_id":"statements-instance-method","name":"statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L50","def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[table_statement] + index_statements"}}],"macros":[{"id":"add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro","html_id":"add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"args_string":"(type_declaration, default = <span class=\"n\">nil</span>, index = <span class=\"n\">false</span>, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, **type_options)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L79","def":{"name":"add","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""},{"name":"index","doc":null,"default_value":"false","external_name":"index","restriction":""},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"double_splat":{"name":"type_options","doc":null,"default_value":"","external_name":"type_options","restriction":""},"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% type = type_declaration.type.types.first %}\n      {% nilable = true %}\n      {% array = false %}\n    {% else %}{% if type_declaration.type.is_a?(Generic) %}\n      {% type = type_declaration.type.type_vars.first %}\n      {% nilable = false %}\n      {% array = true %}\n    {% else %}\n      {% type = type_declaration.type %}\n      {% nilable = false %}\n      {% array = false %}\n    {% end %}{% end %}\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({% end %}\n{{ type }}\n{% if array %}){% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable }}\n,\n      default: \n{{ default }}\n,\n      \n{{ **type_options }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_create\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64)-macro","html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""}],"args_string":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L113","def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","doc":null,"default_value":"Int64","external_name":"foreign_key_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first.stringify.underscore %}\n    {% else %}\n      {% underscored_class = type_declaration.type.stringify.underscore %}\n    {% end %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil,\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_create\n\n    add_index :\n{{ foreign_key_name }}\n\n  \n"}},{"id":"add_timestamps-macro","html_id":"add_timestamps-macro","name":"add_timestamps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L74","def":{"name":"add_timestamps","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    add created_at : Time\n    add updated_at : Time\n  "}},{"id":"primary_key(type_declaration)-macro","html_id":"primary_key(type_declaration)-macro","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/create_table_statement.cr#L68","def":{"name":"primary_key","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    rows << Avram::Migrator::Columns::PrimaryKeys::\n{{ type_declaration.type }}\nPrimaryKey\n      .new(name: \n{{ type_declaration.var.stringify }}\n)\n      .build\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/DropIndexStatement","path":"Avram/Migrator/DropIndexStatement.html","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/drop_index_statement.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_index_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ALLOWED_ON_DELETE_STRATEGIES","name":"ALLOWED_ON_DELETE_STRATEGIES","value":"[:cascade, :restrict] of ::Symbol","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).\n\n### Usage\n\nFor a single column index:\n\n```\nDropIndexStatement.new(:users, :email, if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_index CASCADE;\"\n```\n\nFor multiple column index:\n\n```\nDropIndexStatement.new(:users, [:email, :username] if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_username_index CASCADE;\"\n```","summary":"<p>Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).</p>","class_methods":[],"constructors":[{"id":"new(table:Symbol,columns:Columns,if_exists=false,on_delete=:do_nothing)-class-method","html_id":"new(table:Symbol,columns:Columns,if_exists=false,on_delete=:do_nothing)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"args_string":"(table : Symbol, columns : Columns, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_index_statement.cr#L25","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, if_exists, on_delete)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_index_statement.cr#L28","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |index|\n  index << \"DROP INDEX\"\n  if @if_exists\n    index << \" IF EXISTS\"\n  end\n  index << \" #{@table}_#{columns.join(\"_\")}_index\"\n  index << (on_delete_strategy(@on_delete))\nend"}},{"id":"on_delete_strategy(on_delete=:do_nothing)-instance-method","html_id":"on_delete_strategy(on_delete=:do_nothing)-instance-method","name":"on_delete_strategy","doc":null,"summary":null,"abstract":false,"args":[{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"args_string":"(on_delete = <span class=\"n\">:do_nothing</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_index_statement.cr#L37","def":{"name":"on_delete_strategy","args":[{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if on_delete == (:do_nothing)\n  \";\"\nelse\n  if ALLOWED_ON_DELETE_STRATEGIES.includes?(on_delete)\n    \" #{on_delete};\".upcase\n  else\n    raise(\"on_delete: :#{on_delete} is not supported. Please use :do_nothing, :cascade or :restrict\")\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/DropTableStatement","path":"Avram/Migrator/DropTableStatement.html","kind":"class","full_name":"Avram::Migrator::DropTableStatement","name":"DropTableStatement","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/drop_table_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_table_statement.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table_name:Symbol)-class-method","html_id":"new(table_name:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"args_string":"(table_name : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_table_statement.cr#L2","def":{"name":"new","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/drop_table_statement.cr#L5","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"DROP TABLE #{@table_name}\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","path":"Avram/Migrator/IndexStatementHelpers.html","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/index_statement_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/index_statement_helpers.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateIndexStatement","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/DropIndexStatement","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_index(column:Symbol,unique=false,using:Symbol=:btree)-instance-method","html_id":"add_index(column:Symbol,unique=false,using:Symbol=:btree)-instance-method","name":"add_index","doc":"Generates raw sql for adding an index to a table column. Accepts 'unique' and 'using' options.","summary":"<p>Generates raw sql for adding an index to a table column.</p>","abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"}],"args_string":"(column : Symbol, unique = <span class=\"n\">false</span>, using : Symbol = <span class=\"n\">:btree</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/index_statement_helpers.cr#L7","def":{"name":"add_index","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = (CreateIndexStatement.new(@table_name, column, using, unique)).build\nif index_added?(index, column)\nelse\n  index_statements << index\nend\n"}},{"id":"index_added?(index:String,column:Symbol)-instance-method","html_id":"index_added?(index:String,column:Symbol)-instance-method","name":"index_added?","doc":"Returns false unless matching index exists. Ignores UNIQUE","summary":"<p>Returns false unless matching index exists.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(index : String, column : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/index_statement_helpers.cr#L13","def":{"name":"index_added?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"String"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (index_statements.includes?(index)) || (index_statements.includes?(index.gsub(\" UNIQUE\", \"\")))\nelse\n  return false\nend\nraise(\"index on #{@table_name}.#{column} already exists\")\n"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers/Columns","path":"Avram/Migrator/IndexStatementHelpers/Columns.html","kind":"alias","full_name":"Avram::Migrator::IndexStatementHelpers::Columns","name":"Columns","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/index_statement_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/index_statement_helpers.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"(Array(Symbol) | Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Migration","path":"Avram/Migrator/Migration.html","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/migration.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Migration/V1","path":"Avram/Migrator/Migration/V1.html","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"},{"html_id":"github.com/luckyframework/avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/migration.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Migration","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"down(quiet=false)-instance-method","html_id":"down(quiet=false)-instance-method","name":"down","doc":"Same as #up except calls rollback method in migration.","summary":"<p>Same as #up except calls rollback method in migration.</p>","abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L44","def":{"name":"down","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if pending?\n  puts(\"Already rolled back #{self.class.name.colorize(:cyan)}\")\nelse\n  reset_prepared_statements\n  rollback\n  execute_in_transaction(@prepared_statements) do |tx|\n    untrack_migration(tx)\n    if quiet\n    else\n      puts(\"Rolled back #{self.class.name.colorize(:green)}\")\n    end\n  end\nend"}},{"id":"migrate-instance-method","html_id":"migrate-instance-method","name":"migrate","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L19","def":{"name":"migrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"migrated?-instance-method","html_id":"migrated?-instance-method","name":"migrated?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L63","def":{"name":"migrated?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DB.open(Avram::Migrator::Runner.database_url) do |db|\n  db.query_one?(\"SELECT id FROM migrations WHERE version = $1\", version, as: Int32)\nend"}},{"id":"pending?-instance-method","html_id":"pending?-instance-method","name":"pending?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L59","def":{"name":"pending?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!migrated?"}},{"id":"prepared_statements:Array(String)-instance-method","html_id":"prepared_statements:Array(String)-instance-method","name":"prepared_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L22","def":{"name":"prepared_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@prepared_statements"}},{"id":"reset_prepared_statements-instance-method","html_id":"reset_prepared_statements-instance-method","name":"reset_prepared_statements","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L111","def":{"name":"reset_prepared_statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@prepared_statements = [] of String"}},{"id":"up(quiet=false)-instance-method","html_id":"up(quiet=false)-instance-method","name":"up","doc":"Unless already migrated, calls migrate which in turn calls statement\nhelpers to generate and collect SQL statements in the\n@prepared_statements array. Each statement is then executed in  a\ntransaction and tracked upon completion.","summary":"<p>Unless already migrated, calls migrate which in turn calls statement helpers to generate and collect SQL statements in the @prepared_statements array.</p>","abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L28","def":{"name":"up","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if migrated?\n  puts(\"Already migrated #{self.class.name.colorize(:cyan)}\")\nelse\n  reset_prepared_statements\n  migrate\n  execute_in_transaction(@prepared_statements) do |tx|\n    track_migration(tx)\n    if quiet\n    else\n      puts(\"Migrated #{self.class.name.colorize(:green)}\")\n    end\n  end\nend"}},{"id":"version-instance-method","html_id":"version-instance-method","name":"version","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/migration.cr#L20","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MigrationGenerator","path":"Avram/Migrator/MigrationGenerator.html","kind":"class","full_name":"Avram::Migrator::MigrationGenerator","name":"MigrationGenerator","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/gen/migration.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name,migrate_contents:String,rollback_contents:String)-class-method","html_id":"new(name,migrate_contents:String,rollback_contents:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"migrate_contents","doc":null,"default_value":"","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","doc":null,"default_value":"","external_name":"rollback_contents","restriction":"String"}],"args_string":"(name, migrate_contents : String, rollback_contents : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L19","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"migrate_contents","doc":null,"default_value":"","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","doc":null,"default_value":"","external_name":"rollback_contents","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, migrate_contents, rollback_contents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L16","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"formatted_migrate_contents:String?-instance-method","html_id":"formatted_migrate_contents:String?-instance-method","name":"formatted_migrate_contents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L33","def":{"name":"formatted_migrate_contents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@migrate_contents.try do |contents|\n  pad_contents(contents)\nend"}},{"id":"formatted_rollback_contents:String?-instance-method","html_id":"formatted_rollback_contents:String?-instance-method","name":"formatted_rollback_contents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L39","def":{"name":"formatted_rollback_contents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@rollback_contents.try do |contents|\n  pad_contents(contents)\nend"}},{"id":"generate(_version=@_version)-instance-method","html_id":"generate(_version=@_version)-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"_version","doc":null,"default_value":"@_version","external_name":"_version","restriction":""}],"args_string":"(_version = @_version)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L22","def":{"name":"generate","args":[{"name":"_version","doc":null,"default_value":"@_version","external_name":"_version","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_version = _version\nensure_camelcase_name\nmake_migrations_folder_if_missing\nFile.write(file_path, contents)\nio.puts(\"Created #{migration_class_name.colorize(:green)} in .#{relative_file_path.colorize(:green)}\")\n"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"to_s(__io__:IO):Nil-instance-method","html_id":"to_s(__io__:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"__io__","doc":null,"default_value":"","external_name":"__io__","restriction":"IO"}],"args_string":"(__io__ : IO) : Nil","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L14","def":{"name":"to_s","args":[{"name":"__io__","doc":null,"default_value":"","external_name":"__io__","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ECR.embed(\"/data/src/avram/tasks/gen/migration.ecr\", \"__io__\")"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","path":"Avram/Migrator/MissingOnDeleteWithBelongsToError.html","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/migrator/missing_on_delete_with_belongs_to_error.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/missing_on_delete_with_belongs_to_error.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"add_belongs_to(type_declaration,references=nil)-macro","html_id":"add_belongs_to(type_declaration,references=nil)-macro","name":"add_belongs_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""}],"args_string":"(type_declaration, references = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/missing_on_delete_with_belongs_to_error.cr#L2","def":{"name":"add_belongs_to","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"references","doc":null,"default_value":"nil","external_name":"references","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"Must use 'on_delete' with 'add_belongs_to'\\n\\nTry this...\\n\\n  â–¸ add_belongs_to #{type_declaration}, on_delete: :cascade\\n\\nYou can also use :restrict, :nullify, or :do_nothing\\n\\nRead more at: https://luckyframework.org/guides/database/migrations#associations\\n\\n\") %}\n\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Runner","path":"Avram/Migrator/Runner.html","kind":"class","full_name":"Avram::Migrator::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/migrator/runner.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MIGRATIONS_TABLE_NAME","name":"MIGRATIONS_TABLE_NAME","value":"\"migrations\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/luckyframework/avram/LuckyCli/TextHelpers","kind":"module","full_name":"LuckyCli::TextHelpers","name":"TextHelpers"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[{"id":"cmd_args-class-method","html_id":"cmd_args-class-method","name":"cmd_args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L43","def":{"name":"cmd_args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"args = \"\"\nif self.db_user\n  args = args + \"-U #{self.db_user} \"\nend\nargs = args + \"-h #{self.db_host} -p #{self.db_port} #{self.db_name}\"\n"}},{"id":"create_db(quiet?:Bool=false)-class-method","html_id":"create_db(quiet?:Bool=false)-class-method","name":"create_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet?","doc":null,"default_value":"false","external_name":"quiet?","restriction":"Bool"}],"args_string":"(quiet? : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L59","def":{"name":"create_db","args":[{"name":"quiet?","doc":null,"default_value":"false","external_name":"quiet?","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  run(\"createdb #{self.cmd_args}\")\n  if quiet?\n  else\n    puts(\"Done creating #{Avram::Migrator::Runner.db_name.colorize(:green)}\")\n  end\nrescue e : Exception\n  if (message = e.message) && (message.includes?(\"\\\"#{self.db_name}\\\" already exists\"))\n    if quiet?\n    else\n      puts(\"Already created #{self.db_name.colorize(:green)}\")\n    end\n  else\n    if (message = e.message) && ((message.includes?(\"createdb: not found\")) || (message.includes?(\"No command 'createdb' found\")))\n      raise(\"#{message}\\n\\nTry this...\\n\\n  â–¸ If you are on macOS  you can install postgres tools from #{macos_postgres_tools_link}\\n  â–¸ If you are on linux you can try running #{linux_postgres_installation_instructions}\\n  â–¸ If you are on CI or some servers, there may already be a database created so you don't need this command\\\"\\n\")\n    else\n      if (message = e.message) && (message.includes?(\"could not connect to database template\"))\n        raise(\"Creating the database failed. It looks like Postgres is not running.\\n\\nMessage from Postgres:\\n\\n  #{message}\\n\\nTry this...\\n\\n  â–¸ Make sure Postgres is running\\n\")\n      else\n        raise(e)\n      end\n    end\n  end\nend"}},{"id":"database_url-class-method","html_id":"database_url-class-method","name":"database_url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L39","def":{"name":"database_url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram.settings.database_to_migrate.url"}},{"id":"db_host-class-method","html_id":"db_host-class-method","name":"db_host","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L19","def":{"name":"db_host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(URI.parse(database_url)).host || \"localhost\""}},{"id":"db_name-class-method","html_id":"db_name-class-method","name":"db_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L15","def":{"name":"db_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((URI.parse(database_url)).path || \"\")[1..-1]"}},{"id":"db_password-class-method","html_id":"db_password-class-method","name":"db_password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L31","def":{"name":"db_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(URI.parse(database_url)).password"}},{"id":"db_port-class-method","html_id":"db_port-class-method","name":"db_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L23","def":{"name":"db_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(URI.parse(database_url)).port || \"5432\""}},{"id":"db_user-class-method","html_id":"db_user-class-method","name":"db_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L27","def":{"name":"db_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(URI.parse(database_url)).user"}},{"id":"drop_db-class-method","html_id":"drop_db-class-method","name":"drop_db","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L49","def":{"name":"drop_db","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  run(\"dropdb #{self.cmd_args}\")\nrescue e : Exception\n  if (message = e.message) && (message.includes?(\"\\\"#{self.db_name}\\\" does not exist\"))\n    puts(\"Already dropped #{self.db_name.colorize(:green)}\")\n  else\n    raise(e)\n  end\nend"}},{"id":"dump_db(dump_to:String=&quot;db/structure.sql&quot;,quiet:Bool=false)-class-method","html_id":"dump_db(dump_to:String=&amp;quot;db/structure.sql&amp;quot;,quiet:Bool=false)-class-method","name":"dump_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"dump_to","doc":null,"default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(dump_to : String = <span class=\"s\">&quot;db/structure.sql&quot;</span>, quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L109","def":{"name":"dump_db","args":[{"name":"dump_to","doc":null,"default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::VerifyConnection.new(quiet: true).call\nrun(\"pg_dump -U #{db_user} -h #{db_host} -p #{db_port} -s #{db_name} > #{dump_to}\")\nif quiet\nelse\n  puts(\"Done dumping #{db_name.colorize(:green)}\")\nend\n"}},{"id":"migrations-class-method","html_id":"migrations-class-method","name":"migrations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L35","def":{"name":"migrations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@migrations"}},{"id":"restore_db(restore_file:String,quiet:Bool=false)-class-method","html_id":"restore_db(restore_file:String,quiet:Bool=false)-class-method","name":"restore_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"restore_file","doc":null,"default_value":"","external_name":"restore_file","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(restore_file : String, quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L98","def":{"name":"restore_db","args":[{"name":"restore_file","doc":null,"default_value":"","external_name":"restore_file","restriction":"String"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if File.exists?(restore_file)\n  run(\"psql -q #{cmd_args} -v ON_ERROR_STOP=1 < #{restore_file}\")\n  if quiet\n  else\n    puts(\"Done restoring #{db_name.colorize(:green)}\")\n  end\nelse\n  raise(\"Unable to locate the restore file: #{restore_file}\")\nend"}},{"id":"run(command:String)-class-method","html_id":"run(command:String)-class-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"args_string":"(command : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L140","def":{"name":"run","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"error_messages = IO::Memory.new\nif self.db_password\n  ENV[\"PGPASSWORD\"] = self.db_password\nend\nresult = Process.run(command, shell: true, output: STDOUT, error: error_messages)\nif self.db_password\n  ENV.delete(\"PGPASSWORD\")\nend\nif result.success?\nelse\n  raise(error_messages.to_s)\nend\n"}},{"id":"setup_migration_tracking_tables-class-method","html_id":"setup_migration_tracking_tables-class-method","name":"setup_migration_tracking_tables","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L117","def":{"name":"setup_migration_tracking_tables","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DB.open(database_url) do |db|\n  db.exec(create_table_for_tracking_migrations)\nend"}}],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L12","def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ensure_migrated!-instance-method","html_id":"ensure_migrated!-instance-method","name":"ensure_migrated!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L188","def":{"name":"ensure_migrated!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if pending_migrations.any?\n  raise(\"There are pending migrations. Please run lucky db.migrate\")\nend"}},{"id":"rollback_all-instance-method","html_id":"rollback_all-instance-method","name":"rollback_all","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L165","def":{"name":"rollback_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nmigrated_migrations.reverse.each do |__arg1|\n  __arg1.new.down\nend\n"}},{"id":"rollback_one-instance-method","html_id":"rollback_one-instance-method","name":"rollback_one","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L170","def":{"name":"rollback_one","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nif migrated_migrations.empty?\n  puts(\"Did not roll anything back because the database has no migrations.\".colorize(:green))\nelse\n  migrated_migrations.last.new.down\nend\n"}},{"id":"rollback_to(last_version:Int64)-instance-method","html_id":"rollback_to(last_version:Int64)-instance-method","name":"rollback_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"last_version","doc":null,"default_value":"","external_name":"last_version","restriction":"Int64"}],"args_string":"(last_version : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L179","def":{"name":"rollback_to","args":[{"name":"last_version","doc":null,"default_value":"","external_name":"last_version","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nsubset = migrated_migrations.select do |mm|\n  mm.new.version.to_i64 > last_version\nend\nsubset.reverse.each do |__arg2|\n  __arg2.new.down\nend\nputs(\"Done rolling back to #{last_version}\".colorize(:green))\n"}},{"id":"run_next_migration-instance-method","html_id":"run_next_migration-instance-method","name":"run_next_migration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L159","def":{"name":"run_next_migration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.first.new.up\nend"}},{"id":"run_pending_migrations-instance-method","html_id":"run_pending_migrations-instance-method","name":"run_pending_migrations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/runner.cr#L153","def":{"name":"run_pending_migrations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.each do |__arg0|\n    __arg0.new.up(@quiet)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/StatementHelpers","path":"Avram/Migrator/StatementHelpers.html","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"locations":[{"filename":"avram/migrator/statement_helpers.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"github.com/luckyframework/avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/Migration/V1","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"create_foreign_key(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?,primary_key=:id)-instance-method","html_id":"create_foreign_key(from:Symbol,to:Symbol,on_delete:Symbol,column:Symbol?,primary_key=:id)-instance-method","name":"create_foreign_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"args_string":"(from : Symbol, to : Symbol, on_delete : Symbol, column : Symbol?, primary_key = <span class=\"n\">:id</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L31","def":{"name":"create_foreign_key","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Symbol"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Symbol"},{"name":"on_delete","doc":null,"default_value":"","external_name":"on_delete","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","doc":null,"default_value":":id","external_name":"primary_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (CreateForeignKeyStatement.new(from, to, on_delete, column, primary_key)).build"}},{"id":"create_index(table_name:Symbol,columns:Columns,unique=false,using=:btree)-instance-method","html_id":"create_index(table_name:Symbol,columns:Columns,unique=false,using=:btree)-instance-method","name":"create_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"args_string":"(table_name : Symbol, columns : Columns, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L35","def":{"name":"create_index","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"unique","doc":null,"default_value":"false","external_name":"unique","restriction":""},{"name":"using","doc":null,"default_value":":btree","external_name":"using","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (CreateIndexStatement.new(table_name, columns, using, unique)).build"}},{"id":"drop(table_name)-instance-method","html_id":"drop(table_name)-instance-method","name":"drop","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L17","def":{"name":"drop","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropTableStatement.new(table_name)).build"}},{"id":"drop_index(table_name:Symbol,columns:Columns,if_exists=false,on_delete=:do_nothing)-instance-method","html_id":"drop_index(table_name:Symbol,columns:Columns,if_exists=false,on_delete=:do_nothing)-instance-method","name":"drop_index","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"args_string":"(table_name : Symbol, columns : Columns, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L39","def":{"name":"drop_index","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Columns"},{"name":"if_exists","doc":null,"default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","doc":null,"default_value":":do_nothing","external_name":"on_delete","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropIndexStatement.new(table_name, columns, if_exists, on_delete)).build"}},{"id":"make_optional(table:Symbol,column:Symbol)-instance-method","html_id":"make_optional(table:Symbol,column:Symbol)-instance-method","name":"make_optional","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(table : Symbol, column : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L47","def":{"name":"make_optional","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: false)).build"}},{"id":"make_required(table:Symbol,column:Symbol)-instance-method","html_id":"make_required(table:Symbol,column:Symbol)-instance-method","name":"make_required","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"args_string":"(table : Symbol, column : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L43","def":{"name":"make_required","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: true)).build"}}],"macros":[{"id":"alter(table_name)-macro","html_id":"alter(table_name)-macro","name":"alter","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L21","def":{"name":"alter","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    statements = Avram::Migrator::AlterTableStatement.new(\n{{ table_name }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements <<  statement\n    \nend\n  \n"}},{"id":"create(table_name)-macro","html_id":"create(table_name)-macro","name":"create","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/migrator/statement_helpers.cr#L7","def":{"name":"create","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    statements = Avram::Migrator::CreateTableStatement.new(\n{{ table_name }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements << statement\n    \nend\n  \n"}}],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Model","path":"Avram/Model.html","kind":"class","full_name":"Avram::Model","name":"Model","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},{"html_id":"github.com/luckyframework/avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"github.com/luckyframework/avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/model.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MACRO_CHECKS","name":"MACRO_CHECKS","value":"{setup_complete: false}","doc":"This setting is used to show better errors","summary":"<p>This setting is used to show better errors</p>"},{"id":"SETUP_STEPS","name":"SETUP_STEPS","value":"[Avram::Model.setup_table_name, Avram::Model.setup_initialize, Avram::Model.setup_db_mapping, Avram::Model.setup_getters, Avram::Model.setup_column_names_method, Avram::BaseQueryTemplate.setup, Avram::SaveOperationTemplate.setup, Avram::SchemaEnforcer.setup] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"github.com/luckyframework/avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"table_name-class-method","html_id":"table_name-class-method","name":"table_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L15","def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@table_name"}}],"constructors":[],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L41","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if id == other.id\nelse\n  return false\nend\nif model_name == other.model_name\nelse\n  return false\nend\ntrue\n"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L178","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.database.run do |db|\n  db.exec(\"DELETE FROM #{@@table_name} WHERE #{primary_key_name} = #{escape_primary_key(id)}\")\nend"}},{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L17","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"model_name-instance-method","html_id":"model_name-instance-method","name":"model_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L43","def":{"name":"model_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.name"}},{"id":"reload:self-instance-method","html_id":"reload:self-instance-method","name":"reload","doc":"Reload the model with the latest information from the database\n\nThis method will return a new model instance with the\nlatest data from the database. Note that this does\n**note** change the original instance, so you may need to\nassign the result to a variable or work directly with the return value.\n\nExample:\n\n```crystal\nuser = SaveUser.create!(name: \"Original\")\nSaveUser.update!(user, name: \"Updated\")\n\n# Will be \"Original\"\nuser.name\n# Will return \"Updated\"\nuser.reload.name # Will be \"Updated\"\nWill still be \"Original\" since the 'user' is the same model instance.\nuser.name\n\nInstead re-assign the variable. Now 'name' will return \"Updated\" since\n'user' references the reloaded model.\nuser = user.reload\nuser.name\n```","summary":"<p>Reload the model with the latest information from the database</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L76","def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"base_query_class.find(id)"}},{"id":"reload(&):self-instance-method","html_id":"reload(&amp;):self-instance-method","name":"reload","doc":"Same as `reload` but allows passing a block to customize the query.\n\nThis is almost always used to preload additional relationships.\n\nExample:\n\n```crystal\nuser = SaveUser.create(params)\n\n# We want to display the list of articles the user has commented on, so let's #\n# preload them to avoid N+1 performance issues\nuser = user.reload(&.preload_comments(CommentQuery.new.preload_article))\n\n# Now we can safely get all the comment authors\nuser.comments.map(&.article)\n```\n\nNote that the yielded query is the `BaseQuery` so it will not have any\nmethods defined on your customized query. This is usually fine since\ntypically reload only uses preloads.\n\nIf you do need to do something more custom you can manually reload:\n\n```crystal\nuser = SaveUser.create!(name: \"Helen\")\nUserQuery.new.some_custom_preload_method.find(user.id)\n```","summary":"<p>Same as <code><a href=\"../Avram/Model.html#reload:self-instance-method\">#reload</a></code> but allows passing a block to customize the query.</p>","abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L107","def":{"name":"reload","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"query = yield base_query_class.new\nquery.find(id)\n"}},{"id":"to_param-instance-method","html_id":"to_param-instance-method","name":"to_param","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L47","def":{"name":"to_param","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"id.to_s"}}],"macros":[{"id":"association(table_name,type,relationship_type,foreign_key=nil,through=nil)-macro","html_id":"association(table_name,type,relationship_type,foreign_key=nil,through=nil)-macro","name":"association","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"relationship_type","doc":null,"default_value":"","external_name":"relationship_type","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""}],"args_string":"(table_name, type, relationship_type, foreign_key = <span class=\"n\">nil</span>, through = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L277","def":{"name":"association","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"relationship_type","doc":null,"default_value":"","external_name":"relationship_type","restriction":""},{"name":"foreign_key","doc":null,"default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","doc":null,"default_value":"nil","external_name":"through","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% ASSOCIATIONS << {type: type, table_name: table_name.id, foreign_key: foreign_key, relationship_type: relationship_type, through: through} %}\n\n  \n"}},{"id":"column(type_declaration,autogenerated=false)-macro","html_id":"column(type_declaration,autogenerated=false)-macro","name":"column","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"autogenerated","doc":null,"default_value":"false","external_name":"autogenerated","restriction":""}],"args_string":"(type_declaration, autogenerated = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L256","def":{"name":"column","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"autogenerated","doc":null,"default_value":"false","external_name":"autogenerated","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% data_type = \"#{type_declaration.type.types.first}\".id %}\n      {% nilable = true %}\n    {% else %}\n      {% data_type = \"#{type_declaration.type}\".id %}\n      {% nilable = false %}\n    {% end %}\n\n    \n{% COLUMNS << {name: type_declaration.var, type: data_type, nilable: nilable.id, autogenerated: autogenerated} %}\n\n  \n"}},{"id":"default_columns-macro","html_id":"default_columns-macro","name":"default_columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L148","def":{"name":"default_columns","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    primary_key id : Int64\n    timestamps\n  "}},{"id":"primary_key(type_declaration)-macro","html_id":"primary_key(type_declaration)-macro","name":"primary_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L125","def":{"name":"primary_key","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    PRIMARY_KEY_TYPE = \n{{ type_declaration.type }}\n\n    PRIMARY_KEY_NAME = \n{{ type_declaration.var }}\n\n    column \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n, autogenerated: true\n    alias PrimaryKeyType = \n{{ type_declaration.type }}\n\n\n    def self.primary_key_name : Symbol\n      :\n{{ type_declaration.var.stringify }}\n\n    \nend\n\n    def primary_key_name : Symbol\n      self.class.primary_key_name\n    \nend\n\n    \n# If not using default 'id' primary key\n\n    \n{% if type_declaration.var.id != \"id\".id %}\n      # Then point 'id' to the primary key\n      def id\n        {{ type_declaration.var.id }}\n      end\n    {% end %}\n\n  \n"}},{"id":"register_setup_step(call)-macro","html_id":"register_setup_step(call)-macro","name":"register_setup_step","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L19","def":{"name":"register_setup_step","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if MACRO_CHECKS[:setup_complete] %}\n      {% call.raise(\"Models have already been set up. Make sure to register set up steps before models are required.\") %}\n    {% else %}\n      {% SETUP_STEPS << call %}\n    {% end %}\n\n  \n"}},{"id":"setup(table_name)-macro","html_id":"setup(table_name)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"args_string":"(table_name)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L163","def":{"name":"setup","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% table_name = table_name.id %}\n\n\n    \n{% for step in SETUP_STEPS %}\n      {{ step.id }}(\n        type: {{ @type }},\n        table_name: {{ table_name }},\n        primary_key_type: {{ PRIMARY_KEY_TYPE }},\n        primary_key_name: {{ PRIMARY_KEY_NAME }},\n        columns: {{ COLUMNS }},\n        associations: {{ ASSOCIATIONS }}\n      )\n    {% end %}\n\n  \n"}},{"id":"setup_column_names_method(columns,*args,**named_args)-macro","html_id":"setup_column_names_method(columns,*args,**named_args)-macro","name":"setup_column_names_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L267","def":{"name":"setup_column_names_method","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    def self.column_names : Array(Symbol)\n      [\n        \n{% for column in columns %}\n          :{{ column[:name] }},\n        {% end %}\n\n      ]\n    \nend\n  \n"}},{"id":"setup_db_mapping(columns,*args,**named_args)-macro","html_id":"setup_db_mapping(columns,*args,**named_args)-macro","name":"setup_db_mapping","doc":"Setup [database mapping](http://crystal-lang.github.io/crystal-db/api/0.5.0/DB.html#mapping%28properties%2Cstrict%3Dtrue%29-macro) for the model's columns.\n\nNOTE: Avram::Migrator saves `Float` columns as numeric which need to be\nconverted from [PG::Numeric](https://github.com/will/crystal-pg/blob/master/src/pg/numeric.cr) back to `Float64` using a `convertor`\nclass.","summary":"<p>Setup <a href=\"http://crystal-lang.github.io/crystal-db/api/0.5.0/DB.html#mapping%28properties%2Cstrict%3Dtrue%29-macro\" target=\"_blank\">database mapping</a> for the model's columns.</p>","abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L211","def":{"name":"setup_db_mapping","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    DB.mapping(\n{\n      \n{% for column in columns %}\n        {{ column[:name] }}: {\n          {% if column[:type].id == Float64.id %}\n            type: PG::Numeric,\n            convertor: Float64Converter,\n          {% else %}\n            {% if column[:type].is_a?(Generic) %}\n            type: {{ column[:type] }},\n            {% else %}\n            type: {{ column[:type] }}::Lucky::ColumnType,\n            {% end %}\n          {% end %}\n          nilable: {{ column[:nilable] }},\n        },\n      {% end %}\n\n    })\n  \n"}},{"id":"setup_getters(columns,*args,**named_args)-macro","html_id":"setup_getters(columns,*args,**named_args)-macro","name":"setup_getters","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L237","def":{"name":"setup_getters","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    \n{% for column in columns %}\n      {% db_type = column[:type].is_a?(Generic) ? column[:type].type_vars.first : column[:type] %}\n      def {{ column[:name] }} : {% if column[:nilable] %}::Union({{ db_type }}, ::Nil){% else %}{{ column[:type] }}{% end %}\n        %from_db = {{ db_type }}::Lucky.from_db!(@{{ column[:name] }})\n        {% if column[:nilable] %}\n          %from_db.as?({{ db_type }})\n        {% else %}\n          %from_db.as({{ column[:type] }})\n        {% end %}\n      end\n      {% if column[:type].id == Bool.id %}\n      def {{ column[:name] }}? : Bool\n        !!{{ column[:name] }}\n      end\n      {% end %}\n    {% end %}\n\n  \n"}},{"id":"setup_initialize(columns,*args,**named_args)-macro","html_id":"setup_initialize(columns,*args,**named_args)-macro","name":"setup_initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L197","def":{"name":"setup_initialize","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    def initialize(\n        \n{% for column in columns %}\n          @{{ column[:name] }},\n        {% end %}\n\n      )\n    \nend\n  \n"}},{"id":"setup_table_name(table_name,*args,**named_args)-macro","html_id":"setup_table_name(table_name,*args,**named_args)-macro","name":"setup_table_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(table_name, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L192","def":{"name":"setup_table_name","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":null,"visibility":"Public","body":"    @@table_name = :\n{{ table_name }}\n\n    TABLE_NAME = :\n{{ table_name }}\n\n  \n"}},{"id":"skip_default_columns-macro","html_id":"skip_default_columns-macro","name":"skip_default_columns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L153","def":{"name":"skip_default_columns","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro default_columns\n    \nend\n  \n"}},{"id":"table(table_name=nil)-macro","html_id":"table(table_name=nil)-macro","name":"table","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"nil","external_name":"table_name","restriction":""}],"args_string":"(table_name = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L112","def":{"name":"table","args":[{"name":"table_name","doc":null,"default_value":"nil","external_name":"table_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if table_name %}{% else %}\n      {% table_name = run(\"../run_macros/infer_table_name.cr\", @type.id) %}\n    {% end %}\n\n\n    default_columns\n\n    \n{{ yield }}\n\n\n    setup(\n{{ table_name }}\n)\n    \n{% MACRO_CHECKS[:setup_complete] = true %}\n\n  \n"}},{"id":"timestamps-macro","html_id":"timestamps-macro","name":"timestamps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L158","def":{"name":"timestamps","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    column created_at : Time, autogenerated: true\n    column updated_at : Time, autogenerated: true\n  "}}],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Model/Float64Converter","path":"Avram/Model/Float64Converter.html","kind":"module","full_name":"Avram::Model::Float64Converter","name":"Float64Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/model.cr","line_number":231,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[{"id":"from_rs(rs)-class-method","html_id":"from_rs(rs)-class-method","name":"from_rs","doc":null,"summary":null,"abstract":false,"args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":""}],"args_string":"(rs)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/model.cr#L232","def":{"name":"from_rs","args":[{"name":"rs","doc":null,"default_value":"","external_name":"rs","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(rs.read(PG::Numeric)).to_f"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/NeedyInitializerAndSaveMethods","path":"Avram/NeedyInitializerAndSaveMethods.html","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/needy_initializer_and_save_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"generate_create(with_params,with_bang)-macro","html_id":"generate_create(with_params,with_bang)-macro","name":"generate_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"args_string":"(with_params, with_bang)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L65","def":{"name":"generate_create","args":[{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def self.create\n{% if with_bang %}!{% end %}\n(\n      \n{% if with_params %}params,{% end %}\n\n      \n{% for type_declaration in (NEEDS_ON_CREATE + NEEDS_ON_INITIALIZE) %}\n        {{ type_declaration }},\n      {% end %}\n\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          {{ attribute[:name] }} : {{ attribute[:type] }} | Nothing{% if attribute[:nilable] %} | Nil{% end %} = Nothing.new,\n        {% end %}\n      {% end %}\n\n      \n{% for attribute in ATTRIBUTES %}\n        {{ attribute.var }} : {{ attribute.type }} | Nothing = Nothing.new,\n      {% end %}\n\n    )\n      operation = new(\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          {{ type_declaration.var }},\n        {% end %}\n\n      )\n      \n{% for type_declaration in NEEDS_ON_CREATE %}\n        operation.{{ type_declaration.var }} = {{ type_declaration.var }}\n      {% end %}\n\n\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Nothing\n            operation.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Nothing\n          operation.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n\n      \n{% if with_bang %}\n        operation.save!\n      {% else %}\n        if operation.save\n          yield operation, operation.record\n        else\n          operation.log_failed_save\n          yield operation, nil\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"generate_initializer-macro","html_id":"generate_initializer-macro","name":"generate_initializer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L186","def":{"name":"generate_initializer","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def initialize(\n        @params : Avram::Paramable,\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          @{{ type_declaration }},\n        {% end %}\n\n      )\n      \nextract_changes_from_params\n    \nend\n\n    def initialize(\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          @{{ type_declaration }},\n        {% end %}\n\n      )\n      @params = Avram::Params.new\n      \nextract_changes_from_params\n    \nend\n\n    def initialize(\n        @record : T,\n        @params : Avram::Paramable,\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          @{{ type_declaration }},\n        {% end %}\n\n      )\n      \nextract_changes_from_params\n    \nend\n\n    def initialize(\n        @record : T,\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          @{{ type_declaration }},\n        {% end %}\n\n      )\n      @params = Avram::Params.new\n      \nextract_changes_from_params\n    \nend\n  \n"}},{"id":"generate_save_methods-macro","html_id":"generate_save_methods-macro","name":"generate_save_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L171","def":{"name":"generate_save_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    generate_create(with_params: true, with_bang: false)\n    generate_create(with_params: true, with_bang: true)\n    generate_create(with_params: false, with_bang: true)\n    generate_create(with_params: false, with_bang: false)\n\n    generate_update(with_params: true, with_bang: false)\n    generate_update(with_params: true, with_bang: true)\n    generate_update(with_params: false, with_bang: true)\n    generate_update(with_params: false, with_bang: false)\n  "}},{"id":"generate_update(with_params,with_bang)-macro","html_id":"generate_update(with_params,with_bang)-macro","name":"generate_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"args_string":"(with_params, with_bang)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L117","def":{"name":"generate_update","args":[{"name":"with_params","doc":null,"default_value":"","external_name":"with_params","restriction":""},{"name":"with_bang","doc":null,"default_value":"","external_name":"with_bang","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def self.update\n{% if with_bang %}!{% end %}\n(\n        record : T,\n        \n{% if with_params %}with params,{% end %}\n\n        \n{% for type_declaration in (NEEDS_ON_UPDATE + NEEDS_ON_INITIALIZE) %}\n          {{ type_declaration }},\n        {% end %}\n\n        \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n          {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n            {{ attribute[:name] }} : {{ attribute[:type] }} | Nothing{% if attribute[:nilable] %} | Nil{% end %} = Nothing.new,\n          {% end %}\n        {% end %}\n\n        \n{% for attribute in ATTRIBUTES %}\n          {{ attribute.var }} : {{ attribute.type }} | Nothing = Nothing.new,\n        {% end %}\n\n      )\n      operation = new(\n        record,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in NEEDS_ON_INITIALIZE %}\n          {{ type_declaration.var }},\n        {% end %}\n\n      )\n      \n{% for type_declaration in NEEDS_ON_UPDATE %}\n        operation.{{ type_declaration.var }} = {{ type_declaration.var }}\n      {% end %}\n\n\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Nothing\n            operation.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Nothing\n          operation.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n\n      \n{% if with_bang %}\n        operation.update!\n      {% else %}\n        if operation.save\n          yield operation, operation.record.not_nil!\n        else\n          operation.log_failed_save\n          yield operation, operation.record.not_nil!\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"id":"inherit_needs-macro","html_id":"inherit_needs-macro","name":"inherit_needs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L36","def":{"name":"inherit_needs","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n\\{% if\n !@type.constant(:NEEDS_ON_CREATE) %}\n      NEEDS_ON_CREATE = [] of Nil\n      NEEDS_ON_UPDATE = [] of Nil\n      NEEDS_ON_INITIALIZE = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :NEEDS_ON_CREATE %}\n        \n\\{% \nNEEDS_ON_CREATE << type_declaration %}\n      \n\\{% end\n %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :NEEDS_ON_UPDATE %}\n        \n\\{% \nNEEDS_ON_UPDATE << type_declaration %}\n      \n\\{% end\n %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :NEEDS_ON_INITIALIZE %}\n        \n\\{% \nNEEDS_ON_INITIALIZE << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      generate_initializer\n      generate_save_methods\n    \nend\n  \n"}},{"id":"needs(type_declaration)-macro","html_id":"needs(type_declaration)-macro","name":"needs","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L14","def":{"name":"needs","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% NEEDS_ON_INITIALIZE << type_declaration %}\n\n    @\n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n    property \n{{ type_declaration.var }}\n\n  \n"}},{"id":"needs(type_declaration,on)-macro","html_id":"needs(type_declaration,on)-macro","name":"needs","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":""}],"args_string":"(type_declaration, on)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr#L20","def":{"name":"needs","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""},{"name":"on","doc":null,"default_value":"","external_name":"on","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if !([:save, :create, :update].includes?(on)) %}\n      {% raise(\"on option must be :save, :create or :update\") %}\n    {% end %}\n\n    \n{% if on == (:save) %}\n      {% NEEDS_ON_UPDATE << type_declaration %}\n      {% NEEDS_ON_CREATE << type_declaration %}\n    {% else %}{% if on == (:update) %}\n      {% NEEDS_ON_UPDATE << type_declaration %}\n    {% else %}\n      {% NEEDS_ON_CREATE << type_declaration %}\n    {% end %}{% end %}\n\n    @\n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n?\n    property \n{{ type_declaration.var }}\n\n  \n"}}],"types":[{"html_id":"github.com/luckyframework/avram/Avram/NeedyInitializerAndSaveMethods/Nothing","path":"Avram/NeedyInitializerAndSaveMethods/Nothing.html","kind":"class","full_name":"Avram::NeedyInitializerAndSaveMethods::Nothing","name":"Nothing","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/needy_initializer_and_save_methods.cr","line_number":183,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/needy_initializer_and_save_methods.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/NestedSaveOperation","path":"Avram/NestedSaveOperation.html","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/nested_save_operation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/nested_save_operation.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"mark_nested_save_operations_as_failed-instance-method","html_id":"mark_nested_save_operations_as_failed-instance-method","name":"mark_nested_save_operations_as_failed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/nested_save_operation.cr#L30","def":{"name":"mark_nested_save_operations_as_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nested_save_operations.each do |f|\n  (f.as(Avram::MarkAsFailed)).mark_as_failed\nend"}},{"id":"nested_save_operations-instance-method","html_id":"nested_save_operations-instance-method","name":"nested_save_operations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/nested_save_operation.cr#L36","def":{"name":"nested_save_operations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[] of Avram::MarkAsFailed"}}],"macros":[{"id":"has_one(type_declaration)-macro","html_id":"has_one(type_declaration)-macro","name":"has_one","doc":null,"summary":null,"abstract":false,"args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/nested_save_operation.cr#L2","def":{"name":"has_one","args":[{"name":"type_declaration","doc":null,"default_value":"","external_name":"type_declaration","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% name = type_declaration.var %}\n\n    \n{% type = type_declaration.type %}\n\n    @_\n{{ name }}\n : \n{{ type }}\n | Nil\n\n    def \n{{ name }}\n\n      @_\n{{ name }}\n ||= \n{{ type }}\n.new(params)\n    \nend\n\n    after_save save_nested_\n{{ name }}\n\n\n    def save_nested_\n{{ name }}\n(record)\n      \n{{ name }}\n.\n{{ (@type.constant(:FOREIGN_KEY)).id }}\n.value = record.id\n\n      if !\n{{ name }}\n.save\n        mark_nested_save_operations_as_failed\n        database.rollback\n      \nend\n    \nend\n\n    def nested_save_operations\n      \n{% if @type.methods.map(&.name).includes?((:nested_save_operations).id) %}\n        previous_def +\n      {% end %}\n\n      [\n{{ name }}\n]\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Operation","path":"Avram/Operation.html","kind":"class","full_name":"Avram::Operation","name":"Operation","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperationErrors","kind":"module","full_name":"Avram::SaveOperationErrors","name":"SaveOperationErrors"},{"html_id":"github.com/luckyframework/avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"github.com/luckyframework/avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/operation.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"github.com/luckyframework/avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperationErrors","kind":"module","full_name":"Avram::SaveOperationErrors","name":"SaveOperationErrors"},{"html_id":"github.com/luckyframework/avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"param_key-class-method","html_id":"param_key-class-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr#L32","def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name.underscore"}}],"constructors":[{"id":"new(params)-class-method","html_id":"new(params)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr#L21","def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr#L24","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"params:Avram::Paramable-instance-method","html_id":"params:Avram::Paramable-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::Paramable","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr#L19","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"valid?-instance-method","html_id":"valid?-instance-method","name":"valid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr#L28","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.all?(&.valid?)"}}],"macros":[{"id":"param_key(key)-macro","html_id":"param_key(key)-macro","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":null,"def":{"name":"param_key","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      def self.param_key\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/OrderBy","path":"Avram/OrderBy.html","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/order_by.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column:String|Symbol,direction:Direction,nulls:NullSorting=:default)-class-method","html_id":"new(column:String|Symbol,direction:Direction,nulls:NullSorting=:default)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | Symbol"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Direction"},{"name":"nulls","doc":null,"default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"args_string":"(column : String | Symbol, direction : Direction, nulls : NullSorting = <span class=\"n\">:default</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L22","def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String | Symbol"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Direction"},{"name":"nulls","doc":null,"default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column, direction, nulls)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column:String|Symbol-instance-method","html_id":"column:String|Symbol-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Symbol","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L18","def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column"}},{"id":"direction:Avram::OrderBy::Direction-instance-method","html_id":"direction:Avram::OrderBy::Direction-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::OrderBy::Direction","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L19","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction"}},{"id":"nulls:Avram::OrderBy::NullSorting-instance-method","html_id":"nulls:Avram::OrderBy::NullSorting-instance-method","name":"nulls","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Avram::OrderBy::NullSorting","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L20","def":{"name":"nulls","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nulls"}},{"id":"prepare-instance-method","html_id":"prepare-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L30","def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |str|\n  str << \"#{column} #{direction}\"\n  if nulls.default?\n  else\n    str << \" #{nulls}\"\n  end\nend"}},{"id":"reversed-instance-method","html_id":"reversed-instance-method","name":"reversed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L25","def":{"name":"reversed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction = @direction.asc? ? Direction::DESC : Direction::ASC\nself\n"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/OrderBy/Direction","path":"Avram/OrderBy/Direction.html","kind":"enum","full_name":"Avram::OrderBy::Direction","name":"Direction","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/order_by.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"ASC","name":"ASC","value":"0","doc":null,"summary":null},{"id":"DESC","name":"DESC","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"asc?-instance-method","html_id":"asc?-instance-method","name":"asc?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L14","def":{"name":"asc?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ASC"}},{"id":"desc?-instance-method","html_id":"desc?-instance-method","name":"desc?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L15","def":{"name":"desc?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DESC"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/OrderBy/NullSorting","path":"Avram/OrderBy/NullSorting.html","kind":"enum","full_name":"Avram::OrderBy::NullSorting","name":"NullSorting","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/order_by.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT","name":"DEFAULT","value":"0","doc":null,"summary":null},{"id":"NULLS_FIRST","name":"NULLS_FIRST","value":"1","doc":null,"summary":null},{"id":"NULLS_LAST","name":"NULLS_LAST","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L4","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DEFAULT"}},{"id":"nulls_first?-instance-method","html_id":"nulls_first?-instance-method","name":"nulls_first?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L5","def":{"name":"nulls_first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NULLS_FIRST"}},{"id":"nulls_last?-instance-method","html_id":"nulls_last?-instance-method","name":"nulls_last?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L6","def":{"name":"nulls_last?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NULLS_LAST"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/order_by.cr#L8","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super().gsub(\"_\", \" \")"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/Paramable","path":"Avram/Paramable.html","kind":"module","full_name":"Avram::Paramable","name":"Paramable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/paramable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/paramable.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Params","kind":"class","full_name":"Avram::Params","name":"Params"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"get(key:String)-instance-method","html_id":"get(key:String)-instance-method","name":"get","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/paramable.cr#L5","def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get?(key:String)-instance-method","html_id":"get?(key:String)-instance-method","name":"get?","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/paramable.cr#L4","def":{"name":"get?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"nested(key:String):Hash(String,String)-instance-method","html_id":"nested(key:String):Hash(String,String)-instance-method","name":"nested","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/paramable.cr#L3","def":{"name":"nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}},{"id":"nested?(key:String):Hash(String,String)-instance-method","html_id":"nested?(key:String):Hash(String,String)-instance-method","name":"nested?","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/paramable.cr#L2","def":{"name":"nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/ParamKeyOverride","path":"Avram/ParamKeyOverride.html","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/param_key_override.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/param_key_override.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"define_param_key_override-macro","html_id":"define_param_key_override-macro","name":"define_param_key_override","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/param_key_override.cr#L10","def":{"name":"define_param_key_override","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro param_key(key)\n      def self.param_key\n        \n\\{\n{ key.id.stringify }}\n      \nend\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Params","path":"Avram/Params.html","kind":"class","full_name":"Avram::Params","name":"Params","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/params.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(hash)-class-method","html_id":"new(hash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(hash)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L9","def":{"name":"new","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(**args)-class-method","html_id":"new(**args)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L12","def":{"name":"new","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(**args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get(key)-instance-method","html_id":"get(key)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L30","def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hash[key]"}},{"id":"get?(key)-instance-method","html_id":"get?(key)-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L26","def":{"name":"get?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hash[key]?"}},{"id":"nested(key):Hash(String,String)-instance-method","html_id":"nested(key):Hash(String,String)-instance-method","name":"nested","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L22","def":{"name":"nested","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}},{"id":"nested?(key):Hash(String,String)-instance-method","html_id":"nested?(key):Hash(String,String)-instance-method","name":"nested?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key) : Hash(String, String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/params.cr#L18","def":{"name":"nested?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@hash"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/PermittedAttribute","path":"Avram/PermittedAttribute.html","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/permitted_attribute.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/permitted_attribute.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:Symbol,param:String?,value:T,param_key:String)-class-method","html_id":"new(name:Symbol,param:String?,value:T,param_key:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"}],"args_string":"(name : Symbol, param : String?, value : T, param_key : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/attribute.cr#L8","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"},{"name":"param","doc":null,"default_value":"","external_name":"param","restriction":"String | ::Nil"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"param_key","doc":null,"default_value":"","external_name":"param_key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PermittedAttribute(T).allocate\n_.initialize(name, param, value, param_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Polymorphic","path":"Avram/Polymorphic.html","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/polymorphic.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/polymorphic.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Helpers for defining polymorphic associations","summary":"<p>Helpers for defining polymorphic associations</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"polymorphic(polymorphic_name,associations,optional=false)-macro","html_id":"polymorphic(polymorphic_name,associations,optional=false)-macro","name":"polymorphic","doc":"# Save a comment for this video\nvideo = VideoQuery.first\nComment::SaveOperation.create!(video_id: video.id)\n```","summary":"<h1><a id=\"save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\" class=\"anchor\" href=\"#save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\">\n  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>Save a comment for this video video = VideoQuery.first Comment::SaveOperation.create!(video_id: video.id) <code></code>`</h1>","abstract":false,"args":[{"name":"polymorphic_name","doc":null,"default_value":"","external_name":"polymorphic_name","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""}],"args_string":"(polymorphic_name, associations, optional = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/polymorphic.cr#L104","def":{"name":"polymorphic","args":[{"name":"polymorphic_name","doc":null,"default_value":"","external_name":"polymorphic_name","restriction":""},{"name":"associations","doc":null,"default_value":"","external_name":"associations","restriction":""},{"name":"optional","doc":null,"default_value":"false","external_name":"optional","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% polymorphic_name = polymorphic_name.id %}\n\n    def \n{{ polymorphic_name }}\n\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post || video\n\n      \n{{ (associations.map(&.id).join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    def \n{{ polymorphic_name }}\n!\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post! || video!\n\n      \n{% associations_with_a_bang = associations.map(&.id).map do |assoc|\n  \"#{assoc}!\"\nend %}\n\n      \n{{ (associations_with_a_bang.join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    private def \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable! : Nil\n      if should_check_polymorphism_at_runtime?\n        \n{% associations_to_check = associations.map(&.id).map do |assoc|\n  \"#{assoc}.as(Nil)\"\nend %}\n\n        \n{{ (associations_to_check.join(\" || \")).id }}\n \n# Ensure polymorphic associations are nilable\n\n      \nend\n    \nend\n\n    \n# This is a bit of a hack to get around Crystal's smart compiler :)\n\n    \n# In the ensure_\n{assoc}_belongs_to_are_nilable! we need to check that the\n\n    \n# compiler *can* cast to nil, but we don't want to *actually* check it at\n\n    \n# runtime. The problem is that we can't do `if false` because Crystal realizes\n\n    \n# That will never match and so doesn't even check the `as(Nil)`\n\n    \n# We have to trick it by extracting the false to a method. That way\n\n    \n# Crystal doesn't realize it is always 'false' and will still check\n\n    \n# That the types can be cast to Nil at compile, without actually casting it\n\n    \n# at runtime.\n\n    private def should_check_polymorphism_at_runtime? : Bool\n      false\n    \nend\n\n    macro finished\n      class SaveOperation\n        before_save do\n          \n{% list_of_foreign_keys = associations.map(&.id).map do |assoc|\n  \"#{assoc.id}_id\".id\nend %}\n\n\n          \n# TODO: Needs to actually get the foreign key from the ASSOCIATIONS constant\n\n          \n{% if optional %}\n            validate_at_most_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }}\n          {% else %}\n            validate_exactly_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }},\n              message: \"at least one '{{ polymorphic_name.id }}' must be filled\"\n          {% end %}\n\n        \nend\n      \nend\n\n      class BaseQuery\n        def preload_\n{{ polymorphic_name.id }}\n\n          \n{% for association in associations %}\n             preload_{{ association.id }}\n          {% end %}\n\n        \nend\n      \nend\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/PostgresURL","path":"Avram/PostgresURL.html","kind":"class","full_name":"Avram::PostgresURL","name":"PostgresURL","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/postgres_url.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"build(**args)-class-method","html_id":"build(**args)-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L13","def":{"name":"build","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(**args)).build"}}],"constructors":[{"id":"new(database:String,hostname:String,username:String=&quot;&quot;,password:String=&quot;&quot;,port:String=&quot;&quot;)-class-method","html_id":"new(database:String,hostname:String,username:String=&amp;quot;&amp;quot;,password:String=&amp;quot;&amp;quot;,port:String=&amp;quot;&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"username","doc":null,"default_value":"\"\"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"},{"name":"port","doc":null,"default_value":"\"\"","external_name":"port","restriction":"String"}],"args_string":"(database : String, hostname : String, username : String = <span class=\"s\">&quot;&quot;</span>, password : String = <span class=\"s\">&quot;&quot;</span>, port : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L4","def":{"name":"new","args":[{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"String"},{"name":"hostname","doc":null,"default_value":"","external_name":"hostname","restriction":"String"},{"name":"username","doc":null,"default_value":"\"\"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"},{"name":"port","doc":null,"default_value":"\"\"","external_name":"port","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(database, hostname, username, password, port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build-instance-method","html_id":"build-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L17","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |io|\n  set_url_protocol(io)\n  set_url_creds(io)\n  set_url_host(io)\n  set_url_port(io)\n  set_url_db(io)\nend"}},{"id":"database:String-instance-method","html_id":"database:String-instance-method","name":"database","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L2","def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@database"}},{"id":"hostname:String-instance-method","html_id":"hostname:String-instance-method","name":"hostname","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L2","def":{"name":"hostname","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hostname"}},{"id":"password:String-instance-method","html_id":"password:String-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L2","def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"port:String-instance-method","html_id":"port:String-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L2","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port"}},{"id":"username:String-instance-method","html_id":"username:String-instance-method","name":"username","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/postgres_url.cr#L2","def":{"name":"username","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@username"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/PrimaryKeyType","path":"Avram/PrimaryKeyType.html","kind":"enum","full_name":"Avram::PrimaryKeyType","name":"PrimaryKeyType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/primary_key_type.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/primary_key_type.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Serial","name":"Serial","value":"0","doc":null,"summary":null},{"id":"UUID","name":"UUID","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"serial?-instance-method","html_id":"serial?-instance-method","name":"serial?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/primary_key_type.cr#L2","def":{"name":"serial?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Serial"}},{"id":"uuid?-instance-method","html_id":"uuid?-instance-method","name":"uuid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/primary_key_type.cr#L3","def":{"name":"uuid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UUID"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Query","path":"Avram/Query.html","kind":"class","full_name":"Avram::Query","name":"Query","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/query.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"truncate-class-method","html_id":"truncate-class-method","name":"truncate","doc":"runs a SQL `TRUNCATE` on the current table","summary":"<p>runs a SQL <code>TRUNCATE</code> on the current table</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query.cr#L7","def":{"name":"truncate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new.database.run do |db|\n  db.exec(\"TRUNCATE TABLE #{@@table_name}\")\nend"}}],"constructors":[],"instance_methods":[{"id":"database:Avram::Database.class-instance-method","html_id":"database:Avram::Database.class-instance-method","name":"database","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query.cr#L4","def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Avram::Database.class","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Queryable","path":"Avram/Queryable.html","kind":"module","full_name":"Avram::Queryable(T)","name":"Queryable","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"avram/queryable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_preload(&block:Array(T)->Nil)-instance-method","html_id":"add_preload(&amp;block:Array(T)-&gt;Nil)-instance-method","name":"add_preload","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Array(T) -> Nil)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L185","def":{"name":"add_preload","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Array(T) -> Nil)"},"return_type":"","visibility":"Public","body":"@preloads << block"}},{"id":"clone:self-instance-method","html_id":"clone:self-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L47","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"original_query = query\ninstance = self.class.new\ninstance.query.clone(original_query)\npreloads.each do |preload|\n  instance.add_preload(&preload)\nend\ninstance\n"}},{"id":"delete:Int64-instance-method","html_id":"delete:Int64-instance-method","name":"delete","doc":"Delete the records using the query's where clauses,\nor all the records if no wheres are added.\n\nreturns the number of records removed as `Int64`.\n```\n# DELETE FROM users WHERE age < 21\nUserQuery.new.age.lt(21).delete\n```","summary":"<p>Delete the records using the query's where clauses, or all the records if no wheres are added.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L95","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"query.delete\ndatabase.run do |db|\n  (db.exec(query.statement, args: query.args)).rows_affected\nend\n"}},{"id":"distinct:self-instance-method","html_id":"distinct:self-instance-method","name":"distinct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L55","def":{"name":"distinct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.distinct\nself\n"}},{"id":"distinct_on(&):self-instance-method","html_id":"distinct_on(&amp;):self-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L75","def":{"name":"distinct_on","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield self\ncriteria.__distinct_on\nself\n"}},{"id":"each(&)-instance-method","html_id":"each(&amp;)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L177","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results.each do |result|\n  yield result\nend"}},{"id":"exec_scalar-instance-method","html_id":"exec_scalar-instance-method","name":"exec_scalar","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L203","def":{"name":"exec_scalar","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"database.run do |db|\n  db.scalar(query.statement, args: query.args)\nend"}},{"id":"find(id)-instance-method","html_id":"find(id)-instance-method","name":"find","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"args_string":"(id)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L150","def":{"name":"find","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((id(id)).limit(1)).first? || (raise(RecordNotFoundError.new(model: @@table_name, id: id.to_s)))"}},{"id":"first-instance-method","html_id":"first-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L159","def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"first? || (raise(RecordNotFoundError.new(model: @@table_name, query: :first)))"}},{"id":"first?-instance-method","html_id":"first?-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L154","def":{"name":"first?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ordered_query.limit(1)\nresults.first?\n"}},{"id":"group(&):self-instance-method","html_id":"group(&amp;):self-instance-method","name":"group","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L129","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield self\ncriteria.__group\nself\n"}},{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L4","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","html_id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L102","def":{"name":"join","args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.join(join_clause)\nself\n"}},{"id":"last-instance-method","html_id":"last-instance-method","name":"last","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L168","def":{"name":"last","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"last? || (raise(RecordNotFoundError.new(model: @@table_name, query: :last)))"}},{"id":"last?-instance-method","html_id":"last?-instance-method","name":"last?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L163","def":{"name":"last?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ordered_query.reverse_order.limit(1)\nresults.first?\n"}},{"id":"limit(amount):self-instance-method","html_id":"limit(amount):self-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(amount) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L140","def":{"name":"limit","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.limit(amount)\nself\n"}},{"id":"none:self-instance-method","html_id":"none:self-instance-method","name":"none","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L135","def":{"name":"none","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.where(Avram::Where::Equal.new(\"1\", \"0\"))\nself\n"}},{"id":"offset(amount):self-instance-method","html_id":"offset(amount):self-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(amount) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L145","def":{"name":"offset","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.offset(amount)\nself\n"}},{"id":"order_by(column,direction):self-instance-method","html_id":"order_by(column,direction):self-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"args_string":"(column, direction) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L121","def":{"name":"order_by","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"begin\n  direction = Avram::OrderBy::Direction.parse(direction.to_s)\n  query.order_by(Avram::OrderBy.new(column, direction))\n  self\nrescue e : ArgumentError\n  raise(\"#{e.message}. Accepted values are: :asc, :desc\")\nend"}},{"id":"preloads-instance-method","html_id":"preloads-instance-method","name":"preloads","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L183","def":{"name":"preloads","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preloads"}},{"id":"query-instance-method","html_id":"query-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L41","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query || (@query = Avram::QueryBuilder.new(table: @@table_name).select(@@schema_class.column_names))"}},{"id":"query=(query)-instance-method","html_id":"query=(query)-instance-method","name":"query=","doc":null,"summary":null,"abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""}],"args_string":"(query)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L7","def":{"name":"query=","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query = query"}},{"id":"reset_limit:self-instance-method","html_id":"reset_limit:self-instance-method","name":"reset_limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L65","def":{"name":"reset_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.limit(nil)\nself\n"}},{"id":"reset_offset:self-instance-method","html_id":"reset_offset:self-instance-method","name":"reset_offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L70","def":{"name":"reset_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.offset(nil)\nself\n"}},{"id":"reset_order:self-instance-method","html_id":"reset_order:self-instance-method","name":"reset_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L60","def":{"name":"reset_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.reset_order\nself\n"}},{"id":"reset_where(&):self-instance-method","html_id":"reset_where(&amp;):self-instance-method","name":"reset_where","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L81","def":{"name":"reset_where","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"self","visibility":"Public","body":"criteria = yield self\ncriteria.__reset_where\nself\n"}},{"id":"results:Array(T)-instance-method","html_id":"results:Array(T)-instance-method","name":"results","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L189","def":{"name":"results","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"exec_query.tap do |records|\n  preloads.each(&.call(records))\nend"}},{"id":"select_count:Int64-instance-method","html_id":"select_count:Int64-instance-method","name":"select_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L172","def":{"name":"select_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"query.select_count\nexec_scalar.as(Int64)\n"}},{"id":"to_prepared_sql-instance-method","html_id":"to_prepared_sql-instance-method","name":"to_prepared_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L221","def":{"name":"to_prepared_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.to_prepared_sql"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L217","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query.to_sql"}},{"id":"where(statement:String,*,argsbind_vars:Array):self-instance-method","html_id":"where(statement:String,*,argsbind_vars:Array):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L116","def":{"name":"where","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.raw_where(Avram::Where::Raw.new(statement, args: bind_vars))\nself\n"}},{"id":"where(statement:String,*bind_vars):self-instance-method","html_id":"where(statement:String,*bind_vars):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L112","def":{"name":"where","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"where(statement, args: bind_vars.to_a)"}},{"id":"where(column:Symbol,value):self-instance-method","html_id":"where(column:Symbol,value):self-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(column : Symbol, value) : <span class=\"k\">self</span>","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/queryable.cr#L107","def":{"name":"where","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"query.where(Avram::Where::Equal.new(column, value.to_s))\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/QueryBuilder","path":"Avram/QueryBuilder.html","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/query_builder.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(table:Symbol)-class-method","html_id":"new(table:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"}],"args_string":"(table : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L17","def":{"name":"new","args":[{"name":"table","doc":null,"default_value":"","external_name":"table","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args-instance-method","html_id":"args-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L107","def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prepared_statement_values"}},{"id":"args_for_update(params)-instance-method","html_id":"args_for_update(params)-instance-method","name":"args_for_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L78","def":{"name":"args_for_update","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(param_values(params)) + prepared_statement_values"}},{"id":"clone(query_to_merge:Avram::QueryBuilder)-instance-method","html_id":"clone(query_to_merge:Avram::QueryBuilder)-instance-method","name":"clone","doc":"Similar to `merge`, but includes ALL query parts","summary":"<p>Similar to <code><a href=\"../Avram/QueryBuilder.html#merge(query_to_merge:Avram::QueryBuilder)-instance-method\">#merge</a></code>, but includes ALL query parts</p>","abstract":false,"args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L61","def":{"name":"clone","args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"merge(query_to_merge)\nself.select(query_to_merge.selects)\nif query_to_merge.distinct?\n  distinct\nend\nif query_to_merge.has_distinct_on?\n  distinct_on(query_to_merge.distinct_on.to_s)\nend\nlimit(query_to_merge.limit)\noffset(query_to_merge.offset)\n"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L115","def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delete = true\nself\n"}},{"id":"distinct-instance-method","html_id":"distinct-instance-method","name":"distinct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L120","def":{"name":"distinct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct = true\nself\n"}},{"id":"distinct?-instance-method","html_id":"distinct?-instance-method","name":"distinct?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L130","def":{"name":"distinct?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct || has_distinct_on?"}},{"id":"distinct_on(column:ColumnName)-instance-method","html_id":"distinct_on(column:ColumnName)-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L125","def":{"name":"distinct_on","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@distinct_on = column\nself\n"}},{"id":"distinct_on:ColumnName?-instance-method","html_id":"distinct_on:ColumnName?-instance-method","name":"distinct_on","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ColumnName?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L4","def":{"name":"distinct_on","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ColumnName | Nil","visibility":"Public","body":"@distinct_on"}},{"id":"group_by(column:ColumnName)-instance-method","html_id":"group_by(column:ColumnName)-instance-method","name":"group_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L183","def":{"name":"group_by","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups << column\nself\n"}},{"id":"group_sql-instance-method","html_id":"group_sql-instance-method","name":"group_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L188","def":{"name":"group_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if grouped?\n  \"GROUP BY \" + (groups.join(\", \"))\nend"}},{"id":"grouped?-instance-method","html_id":"grouped?-instance-method","name":"grouped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L198","def":{"name":"grouped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups.any?"}},{"id":"groups:Array(String|Symbol)-instance-method","html_id":"groups:Array(String|Symbol)-instance-method","name":"groups","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L194","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups"}},{"id":"has_distinct_on?-instance-method","html_id":"has_distinct_on?-instance-method","name":"has_distinct_on?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L134","def":{"name":"has_distinct_on?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!@distinct_on)"}},{"id":"join(join_clause:Avram::Join::SqlClause)-instance-method","html_id":"join(join_clause:Avram::Join::SqlClause)-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L285","def":{"name":"join","args":[{"name":"join_clause","doc":null,"default_value":"","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joins << join_clause\nself\n"}},{"id":"joins-instance-method","html_id":"joins-instance-method","name":"joins","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L290","def":{"name":"joins","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joins.uniq(&.to_sql)"}},{"id":"limit(limit)-instance-method","html_id":"limit(limit)-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"args_string":"(limit)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L142","def":{"name":"limit","args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit = limit\nself\n"}},{"id":"limit:Int32?-instance-method","html_id":"limit:Int32?-instance-method","name":"limit","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L138","def":{"name":"limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@limit"}},{"id":"merge(query_to_merge:Avram::QueryBuilder)-instance-method","html_id":"merge(query_to_merge:Avram::QueryBuilder)-instance-method","name":"merge","doc":"Merges the wheres, raw wheres, joins, and orders from the passed in query","summary":"<p>Merges the wheres, raw wheres, joins, and orders from the passed in query</p>","abstract":false,"args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L38","def":{"name":"merge","args":[{"name":"query_to_merge","doc":null,"default_value":"","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_to_merge.wheres.each do |where|\n  where(where)\nend\nquery_to_merge.raw_wheres.each do |where|\n  raw_where(where)\nend\nquery_to_merge.joins.each do |join|\n  join(join)\nend\nquery_to_merge.orders.each do |order|\n  order_by(order)\nend\nquery_to_merge.groups.each do |group|\n  group_by(group)\nend\n"}},{"id":"offset(offset)-instance-method","html_id":"offset(offset)-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"args_string":"(offset)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L150","def":{"name":"offset","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset\nself\n"}},{"id":"offset:Int32?-instance-method","html_id":"offset:Int32?-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L146","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset"}},{"id":"order_by(order:OrderBy)-instance-method","html_id":"order_by(order:OrderBy)-instance-method","name":"order_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"OrderBy"}],"args_string":"(order : OrderBy)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L154","def":{"name":"order_by","args":[{"name":"order","doc":null,"default_value":"","external_name":"order","restriction":"OrderBy"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders << order\nself\n"}},{"id":"order_sql-instance-method","html_id":"order_sql-instance-method","name":"order_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L173","def":{"name":"order_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ordered?\n  \"ORDER BY \" + (orders.map(&.prepare).join(\", \"))\nend"}},{"id":"ordered?-instance-method","html_id":"ordered?-instance-method","name":"ordered?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L258","def":{"name":"ordered?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.any?"}},{"id":"orders-instance-method","html_id":"orders-instance-method","name":"orders","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L179","def":{"name":"orders","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.uniq!(&.column)"}},{"id":"raw_where(where_clause:Avram::Where::Raw)-instance-method","html_id":"raw_where(where_clause:Avram::Where::Raw)-instance-method","name":"raw_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Raw"}],"args_string":"(where_clause : Avram::Where::Raw)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L303","def":{"name":"raw_where","args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::Raw"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_wheres << where_clause\nself\n"}},{"id":"raw_wheres-instance-method","html_id":"raw_wheres-instance-method","name":"raw_wheres","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L333","def":{"name":"raw_wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw_wheres.uniq(&.to_sql)"}},{"id":"reset_order-instance-method","html_id":"reset_order-instance-method","name":"reset_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L164","def":{"name":"reset_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders.clear"}},{"id":"reset_where(column:ColumnName)-instance-method","html_id":"reset_where(column:ColumnName)-instance-method","name":"reset_where","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L159","def":{"name":"reset_where","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres.reject! do |clause|\n  clause.column.to_s == column.to_s\nend\nself\n"}},{"id":"reverse_order-instance-method","html_id":"reverse_order-instance-method","name":"reverse_order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L168","def":{"name":"reverse_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@orders = @orders.map(&.reversed).reverse\nself\n"}},{"id":"select(selection:Array(ColumnName))-instance-method","html_id":"select(selection:Array(ColumnName))-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(ColumnName)"}],"args_string":"(selection : Array(ColumnName))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L251","def":{"name":"select","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(ColumnName)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@selections = selection.map do |column|\n  \"#{@table}.#{column}\"\nend.join(\", \")\nself\n"}},{"id":"select_average(column:ColumnName)-instance-method","html_id":"select_average(column:ColumnName)-instance-method","name":"select_average","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L214","def":{"name":"select_average","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"AVG(#{column})\")"}},{"id":"select_count-instance-method","html_id":"select_count-instance-method","name":"select_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L202","def":{"name":"select_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"COUNT(*)\")"}},{"id":"select_max(column:ColumnName)-instance-method","html_id":"select_max(column:ColumnName)-instance-method","name":"select_max","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L210","def":{"name":"select_max","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"MAX(#{column})\")"}},{"id":"select_min(column:ColumnName)-instance-method","html_id":"select_min(column:ColumnName)-instance-method","name":"select_min","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L206","def":{"name":"select_min","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"MIN(#{column})\")"}},{"id":"select_sum(column:ColumnName)-instance-method","html_id":"select_sum(column:ColumnName)-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L218","def":{"name":"select_sum","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"ColumnName"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_aggregate(\"SUM(#{column})\")"}},{"id":"selects-instance-method","html_id":"selects-instance-method","name":"selects","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L245","def":{"name":"selects","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@selections.split(\", \")).map do |column|\n  (column.split(\".\")).last\nend"}},{"id":"statement-instance-method","html_id":"statement-instance-method","name":"statement","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L70","def":{"name":"statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"join_sql([@delete ? delete_sql : select_sql] + sql_condition_clauses)"}},{"id":"statement_for_update(params)-instance-method","html_id":"statement_for_update(params)-instance-method","name":"statement_for_update","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"args_string":"(params)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L74","def":{"name":"statement_for_update","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"join_sql(([\"UPDATE #{table}\", set_sql_clause(params)] + sql_condition_clauses) + [\"RETURNING #{@selections}\"])"}},{"id":"table:Symbol-instance-method","html_id":"table:Symbol-instance-method","name":"table","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L3","def":{"name":"table","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@table"}},{"id":"to_prepared_sql:String-instance-method","html_id":"to_prepared_sql:String-instance-method","name":"to_prepared_sql","doc":"Prepares the SQL statement by combining the `args` and `statement`\nin to a single `String`","summary":"<p>Prepares the SQL statement by combining the <code><a href=\"../Avram/QueryBuilder.html#args-instance-method\">#args</a></code> and <code><a href=\"../Avram/QueryBuilder.html#statement-instance-method\">#statement</a></code> in to a single <code><a href=\"../String.html\">String</a></code></p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L26","def":{"name":"to_prepared_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"params = args.map do |arg|\n  \"'#{String.new((PQ::Param.encode(arg)).slice)}'\"\nend\ni = 0\nsql = statement\nsql.scan(/\\$\\d+/) do |match|\n  sql = sql.sub(match[0], params[i])\n  i = i + 1\nend\nsql\n"}},{"id":"to_sql-instance-method","html_id":"to_sql-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L20","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[statement] + args"}},{"id":"where(where_clause:Avram::Where::SqlClause)-instance-method","html_id":"where(where_clause:Avram::Where::SqlClause)-instance-method","name":"where","doc":null,"summary":null,"abstract":false,"args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::SqlClause"}],"args_string":"(where_clause : Avram::Where::SqlClause)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L298","def":{"name":"where","args":[{"name":"where_clause","doc":null,"default_value":"","external_name":"where_clause","restriction":"Avram::Where::SqlClause"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres << where_clause\nself\n"}},{"id":"wheres-instance-method","html_id":"wheres-instance-method","name":"wheres","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr#L329","def":{"name":"wheres","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheres.uniq do |where|\n  where.prepare(prepared_statement_placeholder: \"unused\") + where.value.to_s\nend"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/QueryBuilder/ColumnName","path":"Avram/QueryBuilder/ColumnName.html","kind":"alias","full_name":"Avram::QueryBuilder::ColumnName","name":"ColumnName","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/query_builder.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/query_builder.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/QueryBuilder","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/RecordNotFoundError","path":"Avram/RecordNotFoundError.html","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when Lucky Record cannot find a record by given id","summary":"<p>Raised when Lucky Record cannot find a record by given id</p>","class_methods":[],"constructors":[{"id":"new(model:Symbol,id:String)-class-method","html_id":"new(model:Symbol,id:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(model : Symbol, id : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L26","def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(model:Symbol,query:Symbol)-class-method","html_id":"new(model:Symbol,query:Symbol)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Symbol"}],"args_string":"(model : Symbol, query : Symbol)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L30","def":{"name":"new","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":"Symbol"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model, query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Repo","path":"Avram/Repo.html","kind":"class","full_name":"Avram::Repo","name":"Repo","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/repo.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/repo.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"class_has_been_renamed_helpful_error-macro","html_id":"class_has_been_renamed_helpful_error-macro","name":"class_has_been_renamed_helpful_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/repo.cr#L9","def":{"name":"class_has_been_renamed_helpful_error","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% raise(\"Avram::Repo has been renamed to Avram::Database and requires a subclass now.\\n\\nTry this...\\n\\n  1. Create a database class called 'AppDatabase' that inherits from 'Avram::Database'\\n  2. Configure it with 'AppDatabase.configure'\\n  3. Set the database in 'BaseModel' (can also be specific per model). Example:\\n\\n      class BaseModel < Avram::Model\\n        def self.database\\n          AppDatabase\\n        end\\n      end\\n\") %}\n\n  \n"}},{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/repo.cr#L2","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      class_has_been_renamed.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Rollback","path":"Avram/Rollback.html","kind":"class","full_name":"Avram::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raise to rollback a transaction.","summary":"<p>Raise to rollback a transaction.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","path":"Avram/SaveOperation.html","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"github.com/luckyframework/avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"github.com/luckyframework/avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"},{"html_id":"github.com/luckyframework/avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"github.com/luckyframework/avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"github.com/luckyframework/avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"github.com/luckyframework/avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperationErrors","kind":"module","full_name":"Avram::SaveOperationErrors","name":"SaveOperationErrors"},{"html_id":"github.com/luckyframework/avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"github.com/luckyframework/avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/save_operation.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil","doc":null,"summary":null},{"id":"NEEDS_ON_CREATE","name":"NEEDS_ON_CREATE","value":"[] of Nil","doc":null,"summary":null},{"id":"NEEDS_ON_INITIALIZE","name":"NEEDS_ON_INITIALIZE","value":"[] of Nil","doc":null,"summary":null},{"id":"NEEDS_ON_UPDATE","name":"NEEDS_ON_UPDATE","value":"[] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"github.com/luckyframework/avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"github.com/luckyframework/avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"github.com/luckyframework/avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"github.com/luckyframework/avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"github.com/luckyframework/avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"param_key-class-method","html_id":"param_key-class-method","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L44","def":{"name":"param_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T.name.underscore"}}],"constructors":[{"id":"new(record:T,params:Avram::Paramable)-class-method","html_id":"new(record:T,params:Avram::Paramable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"T"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"args_string":"(record : T, params : Avram::Paramable)","source_link":null,"def":{"name":"new","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"T"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize(record, params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(params:Avram::Paramable)-class-method","html_id":"new(params:Avram::Paramable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"args_string":"(params : Avram::Paramable)","source_link":null,"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Avram::Paramable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(record:T)-class-method","html_id":"new(record:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"T"}],"args_string":"(record : T)","source_link":null,"def":{"name":"new","args":[{"name":"record","doc":null,"default_value":"","external_name":"record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize(record)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after_commit(_record:T)-instance-method","html_id":"after_commit(_record:T)-instance-method","name":"after_commit","doc":null,"summary":null,"abstract":false,"args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L324","def":{"name":"after_commit","args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"after_save(_record:T)-instance-method","html_id":"after_save(_record:T)-instance-method","name":"after_save","doc":null,"summary":null,"abstract":false,"args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L322","def":{"name":"after_save","args":[{"name":"_record","doc":null,"default_value":"","external_name":"_record","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L40","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"before_save-instance-method","html_id":"before_save-instance-method","name":"before_save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L320","def":{"name":"before_save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"changes-instance-method","html_id":"changes-instance-method","name":"changes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L240","def":{"name":"changes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_changes = {} of Symbol => String | ::Nil\ncolumn_attributes.each do |attribute|\n  if attribute.changed?\n    _changes[attribute.name] = cast_value(attribute.value)\n  end\nend\n_changes\n"}},{"id":"database-instance-method","html_id":"database-instance-method","name":"database","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L42","def":{"name":"database","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"params-instance-method","html_id":"params-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L37","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"persisted?:Bool-instance-method","html_id":"persisted?:Bool-instance-method","name":"persisted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L304","def":{"name":"persisted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!(!record_id)"}},{"id":"primary_key_name-instance-method","html_id":"primary_key_name-instance-method","name":"primary_key_name","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L41","def":{"name":"primary_key_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"record-instance-method","html_id":"record-instance-method","name":"record","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L37","def":{"name":"record","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@record"}},{"id":"save:Bool-instance-method","html_id":"save:Bool-instance-method","name":"save","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L265","def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if valid? && ((!persisted?) || changes.any?)\n  transaction_committed = database.transaction do\n    insert_or_update\n    saved_record = record.not_nil!\n    after_save(saved_record)\n    true\n  end\n  if transaction_committed\n    saved_record = record.not_nil!\n    after_commit(saved_record)\n    self.save_status = SaveStatus::Saved\n    true\n  else\n    mark_as_failed\n    false\n  end\nelse\n  if valid? && changes.empty?\n    self.save_status = SaveStatus::Saved\n    true\n  else\n    mark_as_failed\n    false\n  end\nend"}},{"id":"save!:T-instance-method","html_id":"save!:T-instance-method","name":"save!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L292","def":{"name":"save!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if save\n  record.not_nil!\nelse\n  raise(Avram::InvalidOperationError.new(operation: self))\nend"}},{"id":"save_failed?-instance-method","html_id":"save_failed?-instance-method","name":"save_failed?","doc":"Return true if the operation has run and the record failed to save","summary":"<p>Return true if the operation has run and the record failed to save</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L184","def":{"name":"save_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"save_status == SaveStatus::SaveFailed"}},{"id":"save_status-instance-method","html_id":"save_status-instance-method","name":"save_status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L33","def":{"name":"save_status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@save_status"}},{"id":"save_status=(save_status)-instance-method","html_id":"save_status=(save_status)-instance-method","name":"save_status=","doc":null,"summary":null,"abstract":false,"args":[{"name":"save_status","doc":null,"default_value":"","external_name":"save_status","restriction":""}],"args_string":"(save_status)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L33","def":{"name":"save_status=","args":[{"name":"save_status","doc":null,"default_value":"","external_name":"save_status","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@save_status = save_status"}},{"id":"saved?-instance-method","html_id":"saved?-instance-method","name":"saved?","doc":"Returns true if the operation has run and saved the record successfully","summary":"<p>Returns true if the operation has run and saved the record successfully</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L179","def":{"name":"saved?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"save_status == SaveStatus::Saved"}},{"id":"table_name-instance-method","html_id":"table_name-instance-method","name":"table_name","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L39","def":{"name":"table_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"update!:T-instance-method","html_id":"update!:T-instance-method","name":"update!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L300","def":{"name":"update!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"save!"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Runs `before_save` steps,\nrequired validation, then returns `true` if all attributes are valid.","summary":"<p>Runs <code><a href=\"../Avram/SaveOperation.html#before_save-instance-method\">#before_save</a></code> steps, required validation, then returns <code>true</code> if all attributes are valid.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L168","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"before_save\nvalidate_required(*required_attributes)\nattributes.all?(&.valid?)\n"}}],"macros":[{"id":"add_cast_value_methods(columns)-macro","html_id":"add_cast_value_methods(columns)-macro","name":"add_cast_value_methods","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"args_string":"(columns)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L250","def":{"name":"add_cast_value_methods","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    private def cast_value(value : Nil)\n      nil\n    \nend\n\n    \n{% for column in columns %}\n    # pass `value` to it's `Lucky.to_db` for parsing.\n    # In most cases, that's just calling `to_s`, but in the case of an Array,\n    # `value` is passed to `PQ::Param` to properly encode `[true]` to `{t}`, etc...\n    private def cast_value(value : {{ column[:type] }})\n      value.not_nil!.class.adapter.to_db(value.as({{ column[:type] }}))\n    end\n    {% end %}\n\n  \n"}},{"id":"param_key(key)-macro","html_id":"param_key(key)-macro","name":"param_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(key)","source_link":null,"def":{"name":"param_key","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      def self.param_key\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}},{"id":"permit_columns(*attribute_names)-macro","html_id":"permit_columns(*attribute_names)-macro","name":"permit_columns","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_names","doc":null,"default_value":"","external_name":"attribute_names","restriction":""}],"args_string":"(*attribute_names)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L193","def":{"name":"permit_columns","args":[{"name":"attribute_names","doc":null,"default_value":"","external_name":"attribute_names","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    \n{% for attribute_name in attribute_names %}\n      {% if attribute_name.is_a?(TypeDeclaration) %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  â–¸ permit_columns #{attribute_name.var}\\n\") %}\n      {% end %}\n      {% if attribute_name.is_a?(SymbolLiteral) || attribute_name.is_a?(Call) %}{% else %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  â–¸ Use a bare word (recommended): 'permit_columns name'\\n  â–¸ Use a Symbol: 'permit_columns :name'\\n\") %}\n      {% end %}\n      {% if COLUMN_ATTRIBUTES.any? do |attribute|\n  attribute[:name].id == attribute_name.id\nend %}\n        def {{ attribute_name.id }}\n          _{{ attribute_name.id }}.permitted\n        end\n\n        @@permitted_param_keys << \"{{ attribute_name.id }}\"\n      {% else %}\n        {% raise(\"Can't permit '#{attribute_name}' because the column has not been defined on the model.\\n\\nTry this...\\n\\n  â–¸ Make sure you spelled the column correctly.\\n  â–¸ Add the column to the model if it doesn't exist.\\n  â–¸ Use 'attribute' if you want an attribute that is not saved to the database.\\n\") %}\n      {% end %}\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation/SaveStatus","path":"Avram/SaveOperation/SaveStatus.html","kind":"enum","full_name":"Avram::SaveOperation::SaveStatus","name":"SaveStatus","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/save_operation.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Saved","name":"Saved","value":"0","doc":null,"summary":null},{"id":"SaveFailed","name":"SaveFailed","value":"1","doc":null,"summary":null},{"id":"Unperformed","name":"Unperformed","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"save_failed?-instance-method","html_id":"save_failed?-instance-method","name":"save_failed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L21","def":{"name":"save_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SaveFailed"}},{"id":"saved?-instance-method","html_id":"saved?-instance-method","name":"saved?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L20","def":{"name":"saved?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Saved"}},{"id":"unperformed?-instance-method","html_id":"unperformed?-instance-method","name":"unperformed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation.cr#L22","def":{"name":"unperformed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Unperformed"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperationErrors","path":"Avram/SaveOperationErrors.html","kind":"module","full_name":"Avram::SaveOperationErrors","name":"SaveOperationErrors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/save_operation_errors.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation_errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"errors:Hash(Symbol,Array(String))-instance-method","html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Symbol, Array(String))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation_errors.cr#L2","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"attributes.reduce({} of Symbol => Array(String)) do |errors_hash, attribute|\n  if attribute.errors.empty?\n    errors_hash\n  else\n    errors_hash[attribute.name] = attribute.errors\n    errors_hash\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/SaveOperationTemplate","path":"Avram/SaveOperationTemplate.html","kind":"class","full_name":"Avram::SaveOperationTemplate","name":"SaveOperationTemplate","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/save_operation_template.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation_template.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(type,columns,table_name,primary_key_type,primary_key_name,*args,**named_args)-macro","html_id":"setup(type,columns,table_name,primary_key_type,primary_key_name,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"primary_key_type","doc":null,"default_value":"","external_name":"primary_key_type","restriction":""},{"name":"primary_key_name","doc":null,"default_value":"","external_name":"primary_key_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(type, columns, table_name, primary_key_type, primary_key_name, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/save_operation_template.cr#L2","def":{"name":"setup","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"primary_key_type","doc":null,"default_value":"","external_name":"primary_key_type","restriction":""},{"name":"primary_key_name","doc":null,"default_value":"","external_name":"primary_key_name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":5,"block_arg":null,"visibility":"Public","body":"    class ::\n{{ type }}\n::BaseForm\n      macro inherited\n        \n\\{% \nraise \"BaseForm has been renamed to SaveOperation. Please inherit from \n{{ type }}\n::SaveOperation.\" %}\n      \nend\n    \nend\n\n    \n# This makes it easy for plugins and extensions to use the base SaveOperation\n\n    def base_query_class : ::\n{{ type }}\n::BaseQuery.class\n      ::\n{{ type }}\n::BaseQuery\n    \nend\n\n    class ::\n{{ type }}\n::SaveOperation < Avram::SaveOperation(\n{{ type }}\n)\n      \n{% if primary_key_type.id == UUID.id %}\n        before_save set_uuid\n\n        def set_uuid\n          id.value ||= UUID.random()\n        end\n      {% end %}\n\n\n      def database\n        \n{{ type }}\n.database\n      \nend\n\n      macro inherited\n        FOREIGN_KEY = \"\n{{ type.stringify.underscore.id }}\n_id\"\n      \nend\n\n      def table_name\n        :\n{{ table_name }}\n\n      \nend\n\n      def primary_key_name\n        :\n{{ primary_key_name.id }}\n\n      \nend\n\n      add_column_attributes(\n{{ primary_key_type }}\n, \n{{ columns }}\n)\n      add_cast_value_methods(\n{{ columns }}\n)\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer","path":"Avram/SchemaEnforcer.html","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/schema_enforcer.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ALL_MODELS","name":"ALL_MODELS","value":"[] of Avram::Model.class","doc":null,"summary":null},{"id":"MODELS_TO_SKIP","name":"MODELS_TO_SKIP","value":"[] of String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"ensure_correct_column_mappings!-class-method","html_id":"ensure_correct_column_mappings!-class-method","name":"ensure_correct_column_mappings!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L32","def":{"name":"ensure_correct_column_mappings!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if !ALL_MODELS.empty? %}\n      ALL_MODELS.each do |model|\n        model.ensure_correct_column_mappings!\n      end\n    {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"setup(table_name,columns,type,*args,**named_args)-macro","html_id":"setup(table_name,columns,type,*args,**named_args)-macro","name":"setup","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(table_name, columns, type, *args, **named_args)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L5","def":{"name":"setup","args":[{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":""},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":3,"block_arg":null,"visibility":"Public","body":"    def self.ensure_correct_column_mappings!\n      return if Avram::SchemaEnforcer::MODELS_TO_SKIP.includes?(self.name)\n\n      attributes = [\n        \n{% for attribute in columns %}\n          { name: :{{ attribute[:name] }}, nilable: {{ attribute[:nilable] }}, type: {{ attribute[:type] }} },\n        {% end %}\n\n      ]\n\n      EnsureExistingTable.new(\n        model_class: \n{{ type }}\n,\n        table_name: :\n{{ table_name }}\n,\n        database: \n{{ type }}\n.database\n      ).ensure_exists!\n      EnsureMatchingColumns.new(\n        model_class: \n{{ type }}\n,\n        table_name: :\n{{ table_name }}\n,\n        database: \n{{ type }}\n.database\n      ).ensure_matches! attributes\n    \nend\n\n    \n{% if !type.resolve.abstract? %}\n      {% Avram::SchemaEnforcer::ALL_MODELS << type %}\n    {% end %}\n\n  \n"}},{"id":"skip_schema_enforcer-macro","html_id":"skip_schema_enforcer-macro","name":"skip_schema_enforcer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L40","def":{"name":"skip_schema_enforcer","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% Avram::SchemaEnforcer::MODELS_TO_SKIP << @type.stringify %}\n\n  \n"}}],"types":[{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer/EnsureExistingTable","path":"Avram/SchemaEnforcer/EnsureExistingTable.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureExistingTable","name":"EnsureExistingTable","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/schema_enforcer.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model_class:Avram::Model.class,table_name:Symbol,database:Avram::Database.class)-class-method","html_id":"new(model_class:Avram::Model.class,table_name:Symbol,database:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":"Avram::Model.class"},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"args_string":"(model_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, table_name : Symbol, database : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L48","def":{"name":"new","args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":"Avram::Model.class"},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model_class, table_name, database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ensure_exists!-instance-method","html_id":"ensure_exists!-instance-method","name":"ensure_exists!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L54","def":{"name":"ensure_exists!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if table_missing?\n  best_match = Levenshtein::Finder.find(@table_name.to_s, @table_names, tolerance: 2)\n  message = String.build do |message|\n    message << \"#{@model_class.to_s.colorize.bold} wants to use the '#{table_name.colorize.bold}' table but it is missing.\\n\"\n    if best_match\n      message << \"\\nIf you meant for #{model_class.to_s.colorize.bold} to use the '#{best_match.colorize.yellow.bold}' table, try this...\\n\\n  â–¸ Change the table name in #{model_class.to_s.colorize.bold}:\\n\\n      table :#{best_match.colorize.bold} do\\n        # ..columns\\n      end\\n\"\n    end\n    message << \"\\nIf you need to create the '#{table_name}' table...\\n\\n  â–¸ Generate a migration:\\n\\n      lucky gen.migration Create#{Wordsmith::Inflector.pluralize(model_class.name.to_s)}\\n\\n  â–¸ Create the table in the migration:\\n\\n      create table_for(#{model_class.name}) do/end\\n\"\n    message << \"\\nOr, you can skip schema checks for this model:\\n\\n    class #{model_class.to_s} < BaseModel\\n      # Great for models used in migrations, or for legacy schemas\\n      skip_schema_enforcer\\n    end\\n\\n\"\n  end\n  raise(Avram::SchemaMismatchError.new(message))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer/EnsureMatchingColumns","path":"Avram/SchemaEnforcer/EnsureMatchingColumns.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureMatchingColumns","name":"EnsureMatchingColumns","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/schema_enforcer.cr","line_number":110,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(model_class:Avram::Model.class,table_name:Symbol,database:Avram::Database.class)-class-method","html_id":"new(model_class:Avram::Model.class,table_name:Symbol,database:Avram::Database.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":"Avram::Model.class"},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"args_string":"(model_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, table_name : Symbol, database : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L117","def":{"name":"new","args":[{"name":"model_class","doc":null,"default_value":"","external_name":"model_class","restriction":"Avram::Model.class"},{"name":"table_name","doc":null,"default_value":"","external_name":"table_name","restriction":"Symbol"},{"name":"database","doc":null,"default_value":"","external_name":"database","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(model_class, table_name, database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ensure_matches!(attributes)-instance-method","html_id":"ensure_matches!(attributes)-instance-method","name":"ensure_matches!","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""}],"args_string":"(attributes)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/schema_enforcer.cr#L126","def":{"name":"ensure_matches!","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.each do |attribute|\n  check_column_matches(attribute)\nend\nif matching_error?\n  message = (@missing_columns + @optional_attribute_errors) + @required_attribute_errors\n  raise(Avram::SchemaMismatchError.new(message.join(\"\\n\\n\")))\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/SchemaMismatchError","path":"Avram/SchemaMismatchError.html","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised by Avram::SchemaEnforcer when columns or tables don't match the database.","summary":"<p>Raised by Avram::SchemaEnforcer when columns or tables don't match the database.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Settings","path":"Avram/Settings.html","kind":"class","full_name":"Avram::Settings","name":"Settings","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[{"id":"database_to_migrate-class-method","html_id":"database_to_migrate-class-method","name":"database_to_migrate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"database_to_migrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate.not_nil!"}},{"id":"database_to_migrate=(value:Avram::Database.class)-class-method","html_id":"database_to_migrate=(value:Avram::Database.class)-class-method","name":"database_to_migrate=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Database.class"}],"args_string":"(value : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","source_link":null,"def":{"name":"database_to_migrate=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Avram::Database.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate = value"}},{"id":"database_to_migrate?-class-method","html_id":"database_to_migrate?-class-method","name":"database_to_migrate?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"database_to_migrate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@database_to_migrate"}},{"id":"lazy_load_enabled-class-method","html_id":"lazy_load_enabled-class-method","name":"lazy_load_enabled","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"lazy_load_enabled","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled.not_nil!"}},{"id":"lazy_load_enabled=(value:Bool)-class-method","html_id":"lazy_load_enabled=(value:Bool)-class-method","name":"lazy_load_enabled=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","source_link":null,"def":{"name":"lazy_load_enabled=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled = value"}},{"id":"lazy_load_enabled?-class-method","html_id":"lazy_load_enabled?-class-method","name":"lazy_load_enabled?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"lazy_load_enabled?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@lazy_load_enabled"}},{"id":"logger-class-method","html_id":"logger-class-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logger.not_nil!"}},{"id":"logger=(value:Dexter::Logger)-class-method","html_id":"logger=(value:Dexter::Logger)-class-method","name":"logger=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Dexter::Logger"}],"args_string":"(value : Dexter::Logger)","source_link":null,"def":{"name":"logger=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Dexter::Logger"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logger = value"}},{"id":"logger?-class-method","html_id":"logger?-class-method","name":"logger?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"logger?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@logger"}},{"id":"query_log_level-class-method","html_id":"query_log_level-class-method","name":"query_log_level","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"query_log_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@query_log_level"}},{"id":"query_log_level=(value:Logger::Severity?)-class-method","html_id":"query_log_level=(value:Logger::Severity?)-class-method","name":"query_log_level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"::Logger::Severity | ::Nil"}],"args_string":"(value : Logger::Severity?)","source_link":null,"def":{"name":"query_log_level=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"::Logger::Severity | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@query_log_level = value"}},{"id":"query_log_level?-class-method","html_id":"query_log_level?-class-method","name":"query_log_level?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"query_log_level?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@query_log_level"}},{"id":"save_failed_log_level-class-method","html_id":"save_failed_log_level-class-method","name":"save_failed_log_level","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"save_failed_log_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@save_failed_log_level"}},{"id":"save_failed_log_level=(value:Logger::Severity?)-class-method","html_id":"save_failed_log_level=(value:Logger::Severity?)-class-method","name":"save_failed_log_level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"::Logger::Severity | ::Nil"}],"args_string":"(value : Logger::Severity?)","source_link":null,"def":{"name":"save_failed_log_level=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"::Logger::Severity | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@save_failed_log_level = value"}},{"id":"save_failed_log_level?-class-method","html_id":"save_failed_log_level?-class-method","name":"save_failed_log_level?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"save_failed_log_level?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@save_failed_log_level"}},{"id":"time_formats-class-method","html_id":"time_formats-class-method","name":"time_formats","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"time_formats","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats.not_nil!"}},{"id":"time_formats=(value:Array(String))-class-method","html_id":"time_formats=(value:Array(String))-class-method","name":"time_formats=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(String)"}],"args_string":"(value : Array(String))","source_link":null,"def":{"name":"time_formats=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats = value"}},{"id":"time_formats?-class-method","html_id":"time_formats?-class-method","name":"time_formats?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"time_formats?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@time_formats"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/TableFor","path":"Avram/TableFor.html","kind":"module","full_name":"Avram::TableFor","name":"TableFor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/table_for.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/table_for.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"table_for(model)-macro","html_id":"table_for(model)-macro","name":"table_for","doc":"Returns a `Symbol` representing the table name\nof the `model` passed in.\ne.g. `User` => `:users`","summary":"<p>Returns a <code>Symbol</code> representing the table name of the <code>model</code> passed in.</p>","abstract":false,"args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":""}],"args_string":"(model)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/table_for.cr#L5","def":{"name":"table_for","args":[{"name":"model","doc":null,"default_value":"","external_name":"model","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    :\n{{ run(\"../run_macros/infer_table_name.cr\", model.id) }}\n\n  \n"}}],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Type","path":"Avram/Type.html","kind":"module","full_name":"Avram::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/type.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/JSON/Any/Lucky","kind":"module","full_name":"JSON::Any::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},{"html_id":"github.com/luckyframework/avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value)-instance-method","html_id":"from_db!(value)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L6","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse!(value)"}},{"id":"parse(value:Nil)-instance-method","html_id":"parse(value:Nil)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L10","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Nil).new(nil)"}},{"id":"parse(values:Array(String))-instance-method","html_id":"parse(values:Array(String))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L14","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"casts = values.map do |value|\n  parse(value)\nend\nif casts.all? do |__arg0|\n  __arg0.is_a?(SuccessfulCast)\nend\n  values = casts.map do |c|\n    (c.as(SuccessfulCast)).value\n  end\n  parse(values)\nelse\n  FailedCast.new\nend\n"}},{"id":"parse!(value)-instance-method","html_id":"parse!(value)-instance-method","name":"parse!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L24","def":{"name":"parse!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((parse(value)).as(SuccessfulCast)).value"}},{"id":"to_db(value:Nil)-instance-method","html_id":"to_db(value:Nil)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L28","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_db!(value)-instance-method","html_id":"to_db!(value)-instance-method","name":"to_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L32","def":{"name":"to_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parsed_value = parse!(value)\nto_db(parsed_value)\n"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Type/FailedCast","path":"Avram/Type/FailedCast.html","kind":"class","full_name":"Avram::Type::FailedCast","name":"FailedCast","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/type.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L45","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Type/SuccessfulCast","path":"Avram/Type/SuccessfulCast.html","kind":"class","full_name":"Avram::Type::SuccessfulCast(T)","name":"SuccessfulCast","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/type.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:T)-class-method","html_id":"new(value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L40","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SuccessfulCast(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/type.cr#L38","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Avram/UnsupportedQueryError","path":"Avram/UnsupportedQueryError.html","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"github.com/luckyframework/avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/errors.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when an unimplemented or deprecated query is made.","summary":"<p>Raised when an unimplemented or deprecated query is made.</p>","class_methods":[],"constructors":[{"id":"new(message:String)-class-method","html_id":"new(message:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/errors.cr#L72","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Validations","path":"Avram/Validations.html","kind":"module","full_name":"Avram::Validations","name":"Validations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/validations.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"subclasses":[],"including_types":[{"html_id":"github.com/luckyframework/avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"A number of methods for validating Avram::Attributes\n\nThis module is included in `Avram::Operation` and `Avram::SaveOperation`","summary":"<p>A number of methods for validating Avram::Attributes</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validate_acceptance_of(attribute:Avram::Attribute(Bool?),message:Avram::Attribute::ErrorMessage=&quot;mustbeaccepted&quot;)-instance-method","html_id":"validate_acceptance_of(attribute:Avram::Attribute(Bool?),message:Avram::Attribute::ErrorMessage=&amp;quot;mustbeaccepted&amp;quot;)-instance-method","name":"validate_acceptance_of","doc":"Validate whether an attribute was accepted (`true`)\n\nThis validation is only for Boolean Attributes. The attribute will be marked\nas invalid for any value other than `true`.","summary":"<p>Validate whether an attribute was accepted (<code>true</code>)</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Bool | ::Nil)"},{"name":"message","doc":null,"default_value":"\"must be accepted\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(Bool?), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must be accepted&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L61","def":{"name":"validate_acceptance_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(Bool | ::Nil)"},{"name":"message","doc":null,"default_value":"\"must be accepted\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value != true\n  attribute.add_error(message)\nend"}},{"id":"validate_at_most_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;mustbeblank&quot;)-instance-method","html_id":"validate_at_most_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&amp;quot;mustbeblank&amp;quot;)-instance-method","name":"validate_at_most_one_filled","doc":"Validates that at most one attribute is filled\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.","summary":"<p>Validates that at most one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"must be blank\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must be blank&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L13","def":{"name":"validate_at_most_one_filled","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"must be blank\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"present_attributes = attributes.reject do |__arg0|\n  __arg0.value.blank?\nend\nif present_attributes.size > 1\n  (present_attributes.skip(1)).each(&.add_error(message))\nend\n"}},{"id":"validate_confirmation_of(attribute:Avram::Attribute(T),withconfirmation_attribute:Avram::Attribute(T),message:Avram::Attribute::ErrorMessage=&quot;mustmatch&quot;)forallT-instance-method","html_id":"validate_confirmation_of(attribute:Avram::Attribute(T),withconfirmation_attribute:Avram::Attribute(T),message:Avram::Attribute::ErrorMessage=&amp;quot;mustmatch&amp;quot;)forallT-instance-method","name":"validate_confirmation_of","doc":"Validates that the values of two attributes are the same\n\nTakes two attributes and if the values are different the second attribute\n(`with`/`confirmation_attribute`) will be marked as invalid\n\nExample:\n\n```\nvalidate_confirmation_of password, with: password_confirmation\n```\n\nIf `password_confirmation` does not match, it will be marked invalid.","summary":"<p>Validates that the values of two attributes are the same</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","doc":null,"default_value":"","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","doc":null,"default_value":"\"must match\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(T), with confirmation_attribute : Avram::Attribute(T), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;must match&quot;</span>) forall T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L79","def":{"name":"validate_confirmation_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","doc":null,"default_value":"","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","doc":null,"default_value":"\"must match\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value != confirmation_attribute.value\n  confirmation_attribute.add_error(message)\nend"}},{"id":"validate_exactly_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&quot;atleastonemustbefilled&quot;)-instance-method","html_id":"validate_exactly_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=&amp;quot;atleastonemustbefilled&amp;quot;)-instance-method","name":"validate_exactly_one_filled","doc":"Validates that at exactly one attribute is filled\n\nThis validation is used by `Avram::Polymorphic.polymorphic` to ensure\nthat a required polymorphic association is set.\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.\n\nIf no field is filled, the first field will be marked as invalid.","summary":"<p>Validates that at exactly one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"at least one must be filled\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;at least one must be filled&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L30","def":{"name":"validate_exactly_one_filled","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"at least one must be filled\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"validate_at_most_one_filled(*attributes)\npresent_attributes = attributes.reject do |__arg2|\n  __arg2.value.blank?\nend\nif present_attributes.size.zero?\n  attributes.first.add_error(message)\nend\n"}},{"id":"validate_inclusion_of(attribute:Avram::Attribute(T),inallowed_values:Enumerable(T),message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)forallT-instance-method","html_id":"validate_inclusion_of(attribute:Avram::Attribute(T),inallowed_values:Enumerable(T),message:Avram::Attribute::ErrorMessage=&amp;quot;isinvalid&amp;quot;,allow_nil:Bool=false)forallT-instance-method","name":"validate_inclusion_of","doc":"Validates that the attribute value is in a list of allowed values\n\n```\nvalidate_inclusion_of state, in: [\"NY\", \"MA\"]\n```\n\nThis will mark `state` as invalid unless the value is `\"NY\"`, or `\"MA\"`.","summary":"<p>Validates that the attribute value is in a list of allowed values</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","doc":null,"default_value":"","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(T), in allowed_values : Enumerable(T), message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : Bool = <span class=\"n\">false</span>) forall T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L96","def":{"name":"validate_inclusion_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","doc":null,"default_value":"","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if allowed_values.includes?(attribute.value)\nelse\n  if allow_nil && attribute.value.nil?\n  else\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_required(*attributes,message:Avram::Attribute::ErrorMessage=&quot;isrequired&quot;)-instance-method","html_id":"validate_required(*attributes,message:Avram::Attribute::ErrorMessage=&amp;quot;isrequired&amp;quot;)-instance-method","name":"validate_required","doc":"Validates that the passed in attributes have values\n\nYou can pass in one or more attributes at a time. The attribute will be\nmarked as invalid if the value is `nil`, or \"blank\" (empty strings or strings with just whitespace)\n\n`false` is not considered invalid.\n\n```\nvalidate_required name, age, email\n```","summary":"<p>Validates that the passed in attributes have values</p>","abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"is required\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is required&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L49","def":{"name":"validate_required","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":""},{"name":"message","doc":null,"default_value":"\"is required\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attributes.each do |attribute|\n  if attribute.value.blank? && (attribute.value != false)\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_size_of(attribute:Avram::Attribute,min=nil,max=nil,allow_nil:Bool=false)-instance-method","html_id":"validate_size_of(attribute:Avram::Attribute,min=nil,max=nil,allow_nil:Bool=false)-instance-method","name":"validate_size_of","doc":"Validate the size of the attribute is within a `min` and/or `max`\n\n```\nvalidate_size_of age, min: 18, max: 100\nvalidate_size_of account_balance, min: 500\n```","summary":"<p>Validate the size of the attribute is within a <code>min</code> and/or <code>max</code></p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"min","doc":null,"default_value":"nil","external_name":"min","restriction":""},{"name":"max","doc":null,"default_value":"nil","external_name":"max","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute, min = <span class=\"n\">nil</span>, max = <span class=\"n\">nil</span>, allow_nil : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L130","def":{"name":"validate_size_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"min","doc":null,"default_value":"nil","external_name":"min","restriction":""},{"name":"max","doc":null,"default_value":"nil","external_name":"max","restriction":""},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((!min.nil?) && (!max.nil?)) && min > max\n  raise(ImpossibleValidation.new(attribute: attribute.name, message: \"size greater than #{min} but less than #{max}\"))\nend\nif allow_nil && attribute.value.nil?\nelse\n  size = attribute.value.to_s.size\n  if (!min.nil?) && size < min\n    attribute.add_error(\"is too short\")\n  end\n  if (!max.nil?) && size > max\n    attribute.add_error(\"is too long\")\n  end\nend\n"}},{"id":"validate_size_of(attribute:Avram::Attribute,*,isexact_size,message:Avram::Attribute::ErrorMessage=&quot;isinvalid&quot;,allow_nil:Bool=false)-instance-method","html_id":"validate_size_of(attribute:Avram::Attribute,*,isexact_size,message:Avram::Attribute::ErrorMessage=&amp;quot;isinvalid&amp;quot;,allow_nil:Bool=false)-instance-method","name":"validate_size_of","doc":"Validate the size of a `String` is exactly a certain size\n\n```\nvalidate_size_of api_key, is: 32\n```","summary":"<p>Validate the size of a <code><a href=\"../String.html\">String</a></code> is exactly a certain size</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"exact_size","doc":null,"default_value":"","external_name":"is","restriction":""},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute, *, is exact_size, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is invalid&quot;</span>, allow_nil : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L112","def":{"name":"validate_size_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"exact_size","doc":null,"default_value":"","external_name":"is","restriction":""},{"name":"message","doc":null,"default_value":"\"is invalid\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attribute.value.to_s.size != exact_size\n  if allow_nil && attribute.value.nil?\n  else\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_uniqueness_of(attribute:Avram::Attribute,query:Avram::Criteria,message:String=&quot;isalreadytaken&quot;)-instance-method","html_id":"validate_uniqueness_of(attribute:Avram::Attribute,query:Avram::Criteria,message:String=&amp;quot;isalreadytaken&amp;quot;)-instance-method","name":"validate_uniqueness_of","doc":"Validates that the given attribute is unique in the database\n\n> This will only work with attributes that correspond to a database column.\n\n```\nvalidate_uniqueness_of email\n```\n\nIf there is another email address with the same value, the attribute will be\nmarked as invalid.\n\nNote that you should also add a unique index when creating the table so that\nthere are no race conditions and you are guaranteed that the value is unique.\n\nThis validation is still useful as it will check for uniqueness along with\nall other validations. If you just have the uniqueness constraint in the\ndatabase you will not know if there is a collision until all other validations\npass and Avram tries to save the record.","summary":"<p>Validates that the given attribute is unique in the database</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Avram::Criteria"},{"name":"message","doc":null,"default_value":"\"is already taken\"","external_name":"message","restriction":"String"}],"args_string":"(attribute : Avram::Attribute, query : Avram::Criteria, message : String = <span class=\"s\">&quot;is already taken&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L173","def":{"name":"validate_uniqueness_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"Avram::Criteria"},{"name":"message","doc":null,"default_value":"\"is already taken\"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attribute.value.try do |value|\n  if (query.eq(value)).first?\n    attribute.add_error(message)\n  end\nend"}},{"id":"validate_uniqueness_of(attribute:Avram::Attribute,message:Avram::Attribute::ErrorMessage=&quot;isalreadytaken&quot;)-instance-method","html_id":"validate_uniqueness_of(attribute:Avram::Attribute,message:Avram::Attribute::ErrorMessage=&amp;quot;isalreadytaken&amp;quot;)-instance-method","name":"validate_uniqueness_of","doc":"Validates that the given attribute is unique in the database with a custom query\n\nThe principle is the same as the other `validate_uniqueness_of` method, but\nthis one allows customizing the query.\n\nThis is especially helpful when you want to scope the uniqueness to a subset\nof records.\n\nFor example, if you want to check that a username is unique within a company:\n\n```\nvalidate_uniqueness_of username, query: UserQuery.new.company_id(123)\n```\n\nSo if there is the same username in other companies, this validation will\nstill pass.\n\nNote that you should also add a unique validation constraint in the database\nThis can be done using Avram migrations. For example:\n\n```\nadd_index [:username, :company_id], unique: true\n```","summary":"<p>Validates that the given attribute is unique in the database with a custom query</p>","abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"message","doc":null,"default_value":"\"is already taken\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute, message : Avram::Attribute::ErrorMessage = <span class=\"s\">&quot;is already taken&quot;</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/validations.cr#L208","def":{"name":"validate_uniqueness_of","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Avram::Attribute"},{"name":"message","doc":null,"default_value":"\"is already taken\"","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attribute.value.try do |value|\n  if (build_validation_query(attribute.name, attribute.value)).first?\n    attribute.add_error(message)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/VirtualForm","path":"Avram/VirtualForm.html","kind":"class","full_name":"Avram::VirtualForm","name":"VirtualForm","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/operation.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/operation.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where","path":"Avram/Where.html","kind":"module","full_name":"Avram::Where","name":"Where","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/where.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Avram/Where/Equal","path":"Avram/Where/Equal.html","kind":"class","full_name":"Avram::Where::Equal","name":"Equal","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotEqual-instance-method","html_id":"negated:NotEqual-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotEqual","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L53","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotEqual","visibility":"Public","body":"NotEqual.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L49","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"=\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/GreaterThan","path":"Avram/Where/GreaterThan.html","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":68,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:LessThanOrEqualTo-instance-method","html_id":"negated:LessThanOrEqualTo-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LessThanOrEqualTo","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L73","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LessThanOrEqualTo","visibility":"Public","body":"LessThanOrEqualTo.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L69","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\">\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/GreaterThanOrEqualTo","path":"Avram/Where/GreaterThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:LessThan-instance-method","html_id":"negated:LessThan-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LessThan","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L83","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LessThan","visibility":"Public","body":"LessThan.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L79","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\">=\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/Ilike","path":"Avram/Where/Ilike.html","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":118,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotIlike-instance-method","html_id":"negated:NotIlike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotIlike","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L123","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotIlike","visibility":"Public","body":"NotIlike.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L119","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"ILIKE\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/In","path":"Avram/Where/In.html","kind":"class","full_name":"Avram::Where::In","name":"In","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":148,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotIn-instance-method","html_id":"negated:NotIn-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotIn","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L153","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotIn","visibility":"Public","body":"NotIn.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L149","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"= ANY\""}},{"id":"prepare(prepared_statement_placeholder:String)-instance-method","html_id":"prepare(prepared_statement_placeholder:String)-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"args_string":"(prepared_statement_placeholder : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L157","def":{"name":"prepare","args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{column} #{operator} (#{prepared_statement_placeholder})\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/LessThan","path":"Avram/Where/LessThan.html","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":88,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:GreaterThanOrEqualTo-instance-method","html_id":"negated:GreaterThanOrEqualTo-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GreaterThanOrEqualTo","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L93","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GreaterThanOrEqualTo","visibility":"Public","body":"GreaterThanOrEqualTo.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L89","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"<\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/LessThanOrEqualTo","path":"Avram/Where/LessThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":98,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:GreaterThan-instance-method","html_id":"negated:GreaterThan-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GreaterThan","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L103","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GreaterThan","visibility":"Public","body":"GreaterThan.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L99","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"<=\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/Like","path":"Avram/Where/Like.html","kind":"class","full_name":"Avram::Where::Like","name":"Like","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":108,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotLike-instance-method","html_id":"negated:NotLike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotLike","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L113","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotLike","visibility":"Public","body":"NotLike.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L109","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"LIKE\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotEqual","path":"Avram/Where/NotEqual.html","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":58,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Equal-instance-method","html_id":"negated:Equal-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Equal","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L63","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Equal","visibility":"Public","body":"Equal.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L59","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"!=\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotIlike","path":"Avram/Where/NotIlike.html","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":138,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Ilike-instance-method","html_id":"negated:Ilike-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Ilike","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L143","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ilike","visibility":"Public","body":"Ilike.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L139","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"NOT ILIKE\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotIn","path":"Avram/Where/NotIn.html","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":162,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:In-instance-method","html_id":"negated:In-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : In","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L167","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"In","visibility":"Public","body":"In.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L163","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"!= ALL\""}},{"id":"prepare(prepared_statement_placeholder:String)-instance-method","html_id":"prepare(prepared_statement_placeholder:String)-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"args_string":"(prepared_statement_placeholder : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L171","def":{"name":"prepare","args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{column} #{operator} (#{prepared_statement_placeholder})\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotLike","path":"Avram/Where/NotLike.html","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":128,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Like-instance-method","html_id":"negated:Like-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Like","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L133","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Like","visibility":"Public","body":"Like.new(@column, @value)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L129","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"NOT LIKE\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotNull","path":"Avram/Where/NotNull.html","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:Null-instance-method","html_id":"negated:Null-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Null","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L43","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Null","visibility":"Public","body":"Null.new(@column)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L39","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"IS NOT\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/Null","path":"Avram/Where/Null.html","kind":"class","full_name":"Avram::Where::Null","name":"Null","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"negated:NotNull-instance-method","html_id":"negated:NotNull-instance-method","name":"negated","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NotNull","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L33","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NotNull","visibility":"Public","body":"NotNull.new(@column)"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L29","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"IS\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","path":"Avram/Where/NullSqlClause.html","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Where/NotNull","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull"},{"html_id":"github.com/luckyframework/avram/Avram/Where/Null","kind":"class","full_name":"Avram::Where::Null","name":"Null"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column:Symbol|String)-class-method","html_id":"new(column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L20","def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"prepare-instance-method","html_id":"prepare-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L23","def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{column} #{operator} #{@value}\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/Raw","path":"Avram/Where/Raw.html","kind":"class","full_name":"Avram::Where::Raw","name":"Raw","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":176,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(statement:String,*bind_vars)-class-method","html_id":"new(statement:String,*bind_vars)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L179","def":{"name":"new","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"bind_vars","doc":null,"default_value":"","external_name":"bind_vars","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(statement, args: bind_vars.to_a)"}},{"id":"new(statement:String,*,argsbind_vars:Array)-class-method","html_id":"new(statement:String,*,argsbind_vars:Array)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L183","def":{"name":"new","args":[{"name":"statement","doc":null,"default_value":"","external_name":"statement","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"bind_vars","doc":null,"default_value":"","external_name":"args","restriction":"Array"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(statement, args: bind_vars)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_sql:String-instance-method","html_id":"to_sql:String-instance-method","name":"to_sql","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L188","def":{"name":"to_sql","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@clause"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Avram/Where/SqlClause","path":"Avram/Where/SqlClause.html","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/where.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/luckyframework/avram/Avram/Where/Equal","kind":"class","full_name":"Avram::Where::Equal","name":"Equal"},{"html_id":"github.com/luckyframework/avram/Avram/Where/GreaterThan","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan"},{"html_id":"github.com/luckyframework/avram/Avram/Where/GreaterThanOrEqualTo","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo"},{"html_id":"github.com/luckyframework/avram/Avram/Where/Ilike","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike"},{"html_id":"github.com/luckyframework/avram/Avram/Where/In","kind":"class","full_name":"Avram::Where::In","name":"In"},{"html_id":"github.com/luckyframework/avram/Avram/Where/LessThan","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan"},{"html_id":"github.com/luckyframework/avram/Avram/Where/LessThanOrEqualTo","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo"},{"html_id":"github.com/luckyframework/avram/Avram/Where/Like","kind":"class","full_name":"Avram::Where::Like","name":"Like"},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotEqual","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual"},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotIlike","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike"},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotIn","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn"},{"html_id":"github.com/luckyframework/avram/Avram/Where/NotLike","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike"},{"html_id":"github.com/luckyframework/avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"}],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(column:Symbol|String,value:String|Array(String)|Array(Int32))-class-method","html_id":"new(column:Symbol|String,value:String|Array(String)|Array(Int32))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Array(String) | Array(Int32)"}],"args_string":"(column : Symbol | String, value : String | Array(String) | Array(Int32))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L6","def":{"name":"new","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Array(String) | Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(column, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column:String|Symbol-instance-method","html_id":"column:String|Symbol-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Symbol","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L3","def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@column"}},{"id":"negated:SqlClause-instance-method","html_id":"negated:SqlClause-instance-method","name":"negated","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : SqlClause","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L10","def":{"name":"negated","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SqlClause","visibility":"Public","body":""}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L9","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"prepare(prepared_statement_placeholder:String)-instance-method","html_id":"prepare(prepared_statement_placeholder:String)-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"args_string":"(prepared_statement_placeholder : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L12","def":{"name":"prepare","args":[{"name":"prepared_statement_placeholder","doc":null,"default_value":"","external_name":"prepared_statement_placeholder","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{column} #{operator} #{prepared_statement_placeholder}\""}},{"id":"value:Array(Int32)|Array(String)|String-instance-method","html_id":"value:Array(Int32)|Array(String)|String-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32) | Array(String) | String","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/where.cr#L4","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/bool_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L2","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Bool/Lucky","path":"Bool/Lucky.html","kind":"module","full_name":"Bool::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/bool_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Bool","kind":"struct","full_name":"Bool","name":"Bool"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L10","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ([\"true\", \"1\"] of ::String).includes?(value)\n  SuccessfulCast(Bool).new(true)\nelse\n  if ([\"false\", \"0\"] of ::String).includes?(value)\n    SuccessfulCast(Bool).new(false)\n  else\n    FailedCast.new\n  end\nend"}},{"id":"parse(value:Bool)-instance-method","html_id":"parse(value:Bool)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L20","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Bool).new(value)"}},{"id":"parse(values:Array(Bool))-instance-method","html_id":"parse(values:Array(Bool))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L24","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Bool)).new(values)"}},{"id":"to_db(value:Bool)-instance-method","html_id":"to_db(value:Bool)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L28","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Bool))-instance-method","html_id":"to_db(values:Array(Bool))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr#L32","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Bool/Lucky/ColumnType","path":"Bool/Lucky/ColumnType.html","kind":"alias","full_name":"Bool::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/bool_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Bool","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Bool/Lucky/Criteria","path":"Bool/Lucky/Criteria.html","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/bool_extensions.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/bool_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/DB","path":"DB.html","kind":"module","full_name":"DB","name":"DB","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/db/src/db.cr","line_number":77,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db.cr"},{"filename":"lib/db/src/db/pool.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/pool.cr"},{"filename":"lib/db/src/db/string_key_cache.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/string_key_cache.cr"},{"filename":"lib/db/src/db/enumerable_concat.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/enumerable_concat.cr"},{"filename":"lib/db/src/db/query_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/query_methods.cr"},{"filename":"lib/db/src/db/session_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/session_methods.cr"},{"filename":"lib/db/src/db/disposable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/disposable.cr"},{"filename":"lib/db/src/db/driver.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/driver.cr"},{"filename":"lib/db/src/db/statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/statement.cr"},{"filename":"lib/db/src/db/begin_transaction.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/begin_transaction.cr"},{"filename":"lib/db/src/db/connection_context.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/connection_context.cr"},{"filename":"lib/db/src/db/connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/connection.cr"},{"filename":"lib/db/src/db/transaction.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/transaction.cr"},{"filename":"lib/db/src/db/pool_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/pool_statement.cr"},{"filename":"lib/db/src/db/database.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/database.cr"},{"filename":"lib/db/src/db/pool_prepared_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/pool_prepared_statement.cr"},{"filename":"lib/db/src/db/pool_unprepared_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/pool_unprepared_statement.cr"},{"filename":"lib/db/src/db/result_set.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/result_set.cr"},{"filename":"lib/db/src/db/error.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/error.cr"},{"filename":"lib/db/src/db/mapping.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/mapping.cr"},{"filename":"lib/db/src/db/serializable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/serializable.cr"},{"filename":"avram/pool_statement_logging.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The DB module is a unified interface for database access.\nIndividual database systems are supported by specific database driver shards.\n\nAvailable drivers include:\n* [crystal-lang/crystal-sqlite3](https://github.com/crystal-lang/crystal-sqlite3) for SQLite\n* [crystal-lang/crystal-mysql](https://github.com/crystal-lang/crystal-mysql) for MySQL and MariaDB\n* [will/crystal-pg](https://github.com/will/crystal-pg) for PostgreSQL\n* [kaukas/crystal-cassandra](https://github.com/kaukas/crystal-cassandra) for Cassandra\n\nFor basic instructions on implementing a new database driver, check `Driver` and the existing drivers.\n\nDB manages a connection pool. The connection pool can be configured by query parameters to the\nconnection `URI` as described in `Database`.\n\n### Usage\n\nAssuming `crystal-sqlite3` is included a SQLite3 database can be opened with `#open`.\n\n```\ndb = DB.open \"sqlite3:./path/to/db/file.db\"\ndb.close\n```\n\nIf a block is given to `#open` the database is closed automatically\n\n```\nDB.open \"sqlite3:./file.db\" do |db|\n  # work with db\nend # db is closed\n```\n\nIn the code above `db` is a `Database`. Methods available for querying it are described in `QueryMethods`.\n\nThree kind of statements can be performed:\n1. `Database#exec` waits no response from the database.\n2. `Database#scalar` reads a single value of the response.\n3. `Database#query` returns a ResultSet that allows iteration over the rows in the response and column information.\n\nAll of the above methods allows parametrised query. Either positional or named arguments.\n\nCheck a full working version:\n\nThe following example uses SQLite where `?` indicates the arguments. If PostgreSQL is used `$1`, `$2`, etc. should be used. `crystal-db` does not interpret the statements.\n\n```\nrequire \"db\"\nrequire \"sqlite3\"\n\nDB.open \"sqlite3:./file.db\" do |db|\n  # When using the pg driver, use $1, $2, etc. instead of ?\n  db.exec \"create table contacts (name text, age integer)\"\n  db.exec \"insert into contacts values (?, ?)\", \"John Doe\", 30\n\n  args = [] of DB::Any\n  args << \"Sarah\"\n  args << 33\n  db.exec \"insert into contacts values (?, ?)\", args\n\n  puts \"max age:\"\n  puts db.scalar \"select max(age) from contacts\" # => 33\n\n  puts \"contacts:\"\n  db.query \"select name, age from contacts order by age desc\" do |rs|\n    puts \"#{rs.column_name(0)} (#{rs.column_name(1)})\"\n    # => name (age)\n    rs.each do\n      puts \"#{rs.read(String)} (#{rs.read(Int32)})\"\n      # => Sarah (33)\n      # => John Doe (30)\n    end\n  end\nend\n```\n","summary":"<p>The DB module is a unified interface for database access.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/DB/PoolStatement","path":"DB/PoolStatement.html","kind":"class","full_name":"DB::PoolStatement","name":"PoolStatement","abstract":true,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/DB/StatementMethods","kind":"module","full_name":"DB::StatementMethods","name":"StatementMethods"},{"html_id":"github.com/luckyframework/avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/pool_statement.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/lib/db/src/db/pool_statement.cr"},{"filename":"avram/pool_statement_logging.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/DB/StatementMethods","kind":"module","full_name":"DB::StatementMethods","name":"StatementMethods"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/DB","kind":"module","full_name":"DB","name":"DB"},"doc":"When a statement is to be executed in a DB that has a connection pool\na statement from the DB needs to be able to represent a statement in any\nof the connections of the pool. Otherwise the user will need to deal with\nactual connections in some point.","summary":"<p>When a statement is to be executed in a DB that has a connection pool a statement from the DB needs to be able to represent a statement in any of the connections of the pool.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"exec:ExecResult-instance-method","html_id":"exec:ExecResult-instance-method","name":"exec","doc":"See `QueryMethods#exec`","summary":"<p>See <code>QueryMethods#exec</code></p>","abstract":false,"args":[],"args_string":" : ExecResult","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr#L3","def":{"name":"exec","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ExecResult","visibility":"Public","body":"log_query\nstatement_with_retry(&.exec)\n"}},{"id":"exec(*args_,args:Array?=nil):ExecResult-instance-method","html_id":"exec(*args_,args:Array?=nil):ExecResult-instance-method","name":"exec","doc":"See `QueryMethods#exec`","summary":"<p>See <code>QueryMethods#exec</code></p>","abstract":false,"args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"args_string":"(*args_, args : Array? = <span class=\"n\">nil</span>) : ExecResult","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr#L8","def":{"name":"exec","args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"ExecResult","visibility":"Public","body":"log_query(*args_, args: args)\nstatement_with_retry(&.exec(*args_, args: args))\n"}},{"id":"query:ResultSet-instance-method","html_id":"query:ResultSet-instance-method","name":"query","doc":"See `QueryMethods#query`","summary":"<p>See <code>QueryMethods#query</code></p>","abstract":false,"args":[],"args_string":" : ResultSet","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr#L13","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ResultSet","visibility":"Public","body":"log_query\nstatement_with_retry(&.query)\n"}},{"id":"query(*args_,args:Array?=nil):ResultSet-instance-method","html_id":"query(*args_,args:Array?=nil):ResultSet-instance-method","name":"query","doc":"See `QueryMethods#query`","summary":"<p>See <code>QueryMethods#query</code></p>","abstract":false,"args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"args_string":"(*args_, args : Array? = <span class=\"n\">nil</span>) : ResultSet","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr#L18","def":{"name":"query","args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"ResultSet","visibility":"Public","body":"log_query(*args_, args: args)\nstatement_with_retry(&.query(*args_, args: args))\n"}},{"id":"scalar(*args_,args:Array?=nil)-instance-method","html_id":"scalar(*args_,args:Array?=nil)-instance-method","name":"scalar","doc":"See `QueryMethods#scalar`","summary":"<p>See <code>QueryMethods#scalar</code></p>","abstract":false,"args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"args_string":"(*args_, args : Array? = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/pool_statement_logging.cr#L23","def":{"name":"scalar","args":[{"name":"args_","doc":null,"default_value":"","external_name":"args_","restriction":""},{"name":"args","doc":null,"default_value":"nil","external_name":"args","restriction":"Array | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"log_query(*args_, args: args)\nstatement_with_retry(&.scalar(*args_, args: args))\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Db","path":"Db.html","kind":"module","full_name":"Db","name":"Db","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/tasks/db/create.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Db/Create","path":"Db/Create.html","kind":"class","full_name":"Db::Create","name":"Create","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/create.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L4","def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L21","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::Runner.create_db(@quiet)\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L7","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.create\\n  LUCKY_ENV=test lucky db.create # Create the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L1","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.create\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L1","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/create.cr#L2","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Create the database\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Drop","path":"Db/Drop.html","kind":"class","full_name":"Db::Drop","name":"Drop","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/drop.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr#L6","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::Runner.drop_db\n  puts(\"Done dropping #{Avram::Migrator::Runner.db_name.colorize(:green)}\")\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr#L13","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.drop\\n  LUCKY_ENV=test lucky db.drop # Drop the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.drop\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/drop.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Drop the database\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Migrate","path":"Db/Migrate.html","kind":"class","full_name":"Db::Migrate","name":"Migrate","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/migrate.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L6","def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L21","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  (Avram::Migrator::Runner.new(@quiet)).run_pending_migrations\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L9","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExamples:\\n\\n  lucky db.migrate\\n  LUCKY_ENV=test lucky db.migrate # Runs migrations on the test database\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrate\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Run any pending migrations\""}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Db/Migrate/One","path":"Db/Migrate/One.html","kind":"class","full_name":"Db::Migrate::One","name":"One","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/migrate_one.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db/Migrate","kind":"class","full_name":"Db::Migrate","name":"Migrate"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr#L17","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::Runner.new.run_next_migration\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.migrate.one\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrate.one\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrate_one.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Run just the next pending migration\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Db/Migrations","path":"Db/Migrations.html","kind":"module","full_name":"Db::Migrations","name":"Migrations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Db/Migrations/Status","path":"Db/Migrations/Status.html","kind":"class","full_name":"Db::Migrations::Status","name":"Status","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db/Migrations","kind":"module","full_name":"Db::Migrations","name":"Migrations"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr#L6","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if migrations.none?\n  puts(\"There are no migrations.\".colorize(:green))\nelse\n  ensure_migration_tracking_tables_exist\n  print_migration_statuses\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr#L15","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Shows which migrations are pending and which have been run.\\n\\nExamples:\\n\\n  lucky db.migration.status\\n  LUCKY_ENV=test lucky db.migration.status # Show migration status for test db\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.migrations.status\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/migrations_status.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Print the current status of migrations\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Db/Redo","path":"Db/Redo.html","kind":"class","full_name":"Db::Redo","name":"Redo","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/redo.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr#L17","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::Rollback.new.call\nDb::Migrate.new.call\n"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.redo\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.redo\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/redo.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback and run just the last migration\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Reset","path":"Db/Reset.html","kind":"class","full_name":"Db::Reset","name":"Reset","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/reset.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr#L21","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Db::Drop.new.call\nDb::Create.new.call\nDb::Migrate.new.call\n"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.reset\\n\\nTo drop the test database:\\n\\n   LUCKY_ENV=test lucky db.reset\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.reset\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/reset.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Drop, recreate, and run migrations.\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Rollback","path":"Db/Rollback.html","kind":"class","full_name":"Db::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/rollback.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr#L17","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::Runner.new.rollback_one\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nExample:\\n\\n  lucky db.rollback\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback the last migration\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/RollbackAll","path":"Db/RollbackAll.html","kind":"class","full_name":"Db::RollbackAll","name":"RollbackAll","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/rollback_all.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr#L19","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::Runner.new.rollback_all\n  puts(\"Done rolling back all migrations\".colorize(:green))\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou may also want to look at 'lucky db.drop'.\\n\\nExample:\\n\\n  lucky db.rollback_all\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback_all\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_all.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback all migrations\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/RollbackTo","path":"Db/RollbackTo.html","kind":"class","full_name":"Db::RollbackTo","name":"RollbackTo","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/rollback_to.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr#L19","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  version = ARGV.first?\n  if version && version.to_i64?\n    Avram::Migrator::Runner.new.rollback_to(version.to_i64)\n  else\n    raise((\"Migration version is required. Example: lucky db.rollback_to 20180802180356\".colorize(:red)).to_s)\n  end\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr#L6","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou can get the migration version from the filename or by running 'lucky db.migration.status'\\n\\nExample:\\n\\n  lucky db.rollback_to 20180802180356\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr#L3","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.rollback_to\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr#L3","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/rollback_to.cr#L4","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Rollback to a specific migration\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Schema","path":"Db/Schema.html","kind":"module","full_name":"Db::Schema","name":"Schema","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Db/Schema/Dump","path":"Db/Schema/Dump.html","kind":"class","full_name":"Db::Schema::Dump","name":"Dump","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(dump_to:String?=nil,quiet:Bool=false)-class-method","html_id":"new(dump_to:String?=nil,quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"dump_to","doc":null,"default_value":"nil","external_name":"dump_to","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(dump_to : String? = <span class=\"n\">nil</span>, quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L4","def":{"name":"new","args":[{"name":"dump_to","doc":null,"default_value":"nil","external_name":"dump_to","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(dump_to, quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L21","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dump_to = (@dump_to || ARGV.first?) || (raise(\"Must pass a file path to dump the db structure to\"))\nAvram::Migrator.run do\n  Avram::Migrator::Runner.dump_db(dump_to, @quiet)\nend\n"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L7","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou must specify the path that you want Avram to dump the sql to. Note\\nthat this dumps the schema but does not dump any data.\\n\\nExample:\\n\\n  lucky db.schema.dump structure.sql\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L1","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.schema.dump\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L1","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_dump.cr#L2","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Export database schema to a sql file\""}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Db/Schema/Restore","path":"Db/Schema/Restore.html","kind":"class","full_name":"Db::Schema::Restore","name":"Restore","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/schema_restore.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(import_file_path:String?=nil,quiet:Bool=false)-class-method","html_id":"new(import_file_path:String?=nil,quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"import_file_path","doc":null,"default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(import_file_path : String? = <span class=\"n\">nil</span>, quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L4","def":{"name":"new","args":[{"name":"import_file_path","doc":null,"default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(import_file_path, quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L20","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"import_file_path = (@import_file_path || ARGV.first?) || (raise(\"A path to the import SQL file must be provided\"))\nAvram::Migrator.run do\n  Avram::Migrator::Runner.restore_db(import_file_path.as(String), @quiet)\nend\n"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L7","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nYou must specify the path to the sql that you want Avram to restore from.\\n\\nExample:\\n\\n  lucky db.schema.restore structure.sql\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L1","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.schema.restore\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L1","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/schema_restore.cr#L2","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Restore database from a sql dump file\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Db/VerifyConnection","path":"Db/VerifyConnection.html","kind":"class","full_name":"Db::VerifyConnection","name":"VerifyConnection","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/db/verify_connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Db","kind":"module","full_name":"Db","name":"Db"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(quiet:Bool=false)-class-method","html_id":"new(quiet:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L5","def":{"name":"new","args":[{"name":"quiet","doc":null,"default_value":"false","external_name":"quiet","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call-instance-method","html_id":"call-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L22","def":{"name":"call","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  DB.open(Avram::Migrator::Runner.database_url) do |db|\n  end\n  if quiet?\n  else\n    puts(\"âœ” Connection verified\")\n  end\nrescue PQ::ConnectionError | DB::ConnectionRefused\n  raise(\"Unable to connect to Postgres for database '#{Avram.settings.database_to_migrate}'.\\n\\nThis is what we tried to connect to:\\n\\n  * host: #{Avram::Migrator::Runner.db_host}\\n  * port: #{Avram::Migrator::Runner.db_port}\\n  * database: #{Avram::Migrator::Runner.db_name}\\n  * username: #{Avram::Migrator::Runner.db_user}\\n  * password: check config/database.cr\\n\\nTo fix, try this...\\n\\n  â–¸ Make sure Postgres is running.\\n  â–¸ Check connection settings in config/database.cr.\\n  â–¸ If the database has not been created yet, run 'lucky db.create'\\n  â–¸ Then run 'lucky db.verify_connection' to make sure it can connect.\\n\")\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L8","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{summary}\\n\\nThe connection settings are typically defined in config/database.cr\\n\\nExamples:\\n\\n  lucky db.verify_connection\\n  LUCKY_ENV=test lucky db.verify_connection # Verify test db connection\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L1","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"db.verify_connection\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L1","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"quiet?:Bool-instance-method","html_id":"quiet?:Bool-instance-method","name":"quiet?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L3","def":{"name":"quiet?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@quiet"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/db/verify_connection.cr#L2","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Verify connection to postgres\""}}],"macros":[],"types":[]}]},{"html_id":"github.com/luckyframework/avram/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"github.com/luckyframework/avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/float64_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L32","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Float64/Lucky","path":"Float64/Lucky.html","kind":"module","full_name":"Float64::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/float64_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Float64","kind":"struct","full_name":"Float64","name":"Float64"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value:Float64)-instance-method","html_id":"from_db!(value:Float64)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L10","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"from_db!(value:PG::Numeric)-instance-method","html_id":"from_db!(value:PG::Numeric)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L14","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_f"}},{"id":"parse(value:Float64)-instance-method","html_id":"parse(value:Float64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L18","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value)"}},{"id":"parse(values:Array(Float64))-instance-method","html_id":"parse(values:Array(Float64))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L22","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Float64)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L30","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Float64).new(value.to_f64)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L36","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L40","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"}},{"id":"parse(value:PG::Numeric)-instance-method","html_id":"parse(value:PG::Numeric)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L26","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"PG::Numeric"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f)"}},{"id":"to_db(value:Float64)-instance-method","html_id":"to_db(value:Float64)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L44","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Float64))-instance-method","html_id":"to_db(values:Array(Float64))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L48","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Float64/Lucky/ColumnType","path":"Float64/Lucky/ColumnType.html","kind":"alias","full_name":"Float64::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/float64_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Float64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Float64/Lucky/Criteria","path":"Float64/Lucky/Criteria.html","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/float64_extensions.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L53","def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(@column, V::Lucky.to_db!(low_value)))\nadd_clause(Avram::Where::LessThanOrEqualTo.new(@column, V::Lucky.to_db!(high_value)))\n"}},{"id":"select_sum:Float64?-instance-method","html_id":"select_sum:Float64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L55","def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"if sum = super()\n  (sum.as(PG::Numeric)).to_f\nend"}},{"id":"select_sum!:Float64-instance-method","html_id":"select_sum!:Float64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/float64_extensions.cr#L61","def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"select_sum || 0_f64"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Gen","path":"Gen.html","kind":"module","full_name":"Gen","name":"Gen","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/tasks/gen/migration.cr","line_number":94,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Gen/Migration","path":"Gen/Migration.html","kind":"class","full_name":"Gen::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"github.com/luckyframework/avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"github.com/luckyframework/avram/LuckyCli/Task","kind":"class","full_name":"LuckyCli::Task","name":"Task"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/gen/migration.cr","line_number":94,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: io : IO = STDOUT, example: nil}] of Nil","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"github.com/luckyframework/avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"doc":null,"summary":null,"class_methods":[{"id":"configure(&)-class-method","html_id":"configure(&amp;)-class-method","name":"configure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L97","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield settings"}},{"id":"settings-class-method","html_id":"settings-class-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L97","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Settings"}},{"id":"silence_output(&)-class-method","html_id":"silence_output(&amp;)-class-method","name":"silence_output","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L116","def":{"name":"silence_output","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"temp_config(io: IO::Memory.new) do\n  yield\nend"}}],"constructors":[],"instance_methods":[{"id":"call(name:String?=nil)-instance-method","html_id":"call(name:String?=nil)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L122","def":{"name":"call","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram::Migrator.run do\n  name = name || ARGV.first?\n  if name\n    Avram::Migrator::MigrationGenerator.new(name: name).generate\n  else\n    raise((\"Migration name is required. Example: lucky gen.migration CreateUsers\".colorize(:red)).to_s)\n  end\nend"}},{"id":"help_message-instance-method","html_id":"help_message-instance-method","name":"help_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L101","def":{"name":"help_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Generate a new migration using the passed in migration name.\\n\\nThe migration name must be CamelCase. No other options are available.\\n\\nExamples:\\n\\n  lucky gen.migration CreateUsers\\n  lucky gen.migration AddAgeToUsers\\n  lucky gen.migration MakeUserNameOptional\\n\""}},{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L94","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"gen.migration\""}},{"id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","html_id":"print_help_or_call(args:Array(String),io:IO=STDERR)-instance-method","name":"print_help_or_call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"args_string":"(args : Array(String), io : IO = <span class=\"t\">STDERR</span>)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L94","def":{"name":"print_help_or_call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(String)"},{"name":"io","doc":null,"default_value":"STDERR","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if wants_help_message?(args)\n  io.puts(help_message)\nelse\n  call\nend"}},{"id":"settings-instance-method","html_id":"settings-instance-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L97","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Settings"}},{"id":"summary-instance-method","html_id":"summary-instance-method","name":"summary","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr#L95","def":{"name":"summary","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"Generate a new migration\""}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Gen/Migration/Settings","path":"Gen/Migration/Settings.html","kind":"class","full_name":"Gen::Migration::Settings","name":"Settings","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/tasks/gen/migration.cr","line_number":97,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/tasks/gen/migration.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Gen/Migration","kind":"class","full_name":"Gen::Migration","name":"Migration"},"doc":null,"summary":null,"class_methods":[{"id":"io-class-method","html_id":"io-class-method","name":"io","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"io","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io.not_nil!"}},{"id":"io=(value:IO)-class-method","html_id":"io=(value:IO)-class-method","name":"io=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"IO"}],"args_string":"(value : IO)","source_link":null,"def":{"name":"io=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io = value"}},{"id":"io?-class-method","html_id":"io?-class-method","name":"io?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"io?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@io"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/luckyframework/avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int16_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L14","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int16/Lucky","path":"Int16/Lucky.html","kind":"module","full_name":"Int16::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/int16_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int16","kind":"struct","full_name":"Int16","name":"Int16"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int16)-instance-method","html_id":"from_db!(value:Int16)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L10","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:Int16)-instance-method","html_id":"parse(value:Int16)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L14","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int16).new(value)"}},{"id":"parse(values:Array(Int16))-instance-method","html_id":"parse(values:Array(Int16))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L18","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int16)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L22","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L28","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue OverflowError\n  FailedCast.new\nend"}},{"id":"to_db(value:Int16)-instance-method","html_id":"to_db(value:Int16)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L34","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int16))-instance-method","html_id":"to_db(values:Array(Int16))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L38","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int16/Lucky/ColumnType","path":"Int16/Lucky/ColumnType.html","kind":"alias","full_name":"Int16::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/int16_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Int16","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Int16/Lucky/Criteria","path":"Int16/Lucky/Criteria.html","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int16_extensions.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L43","def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(@column, V::Lucky.to_db!(low_value)))\nadd_clause(Avram::Where::LessThanOrEqualTo.new(@column, V::Lucky.to_db!(high_value)))\n"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L45","def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"super().as(Int64 | ::Nil)"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int16_extensions.cr#L49","def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/luckyframework/avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int32_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L20","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int32/Lucky","path":"Int32/Lucky.html","kind":"module","full_name":"Int32::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/int32_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int32","kind":"struct","full_name":"Int32","name":"Int32"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int32)-instance-method","html_id":"from_db!(value:Int32)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L10","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L14","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L20","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int32).new(value)"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L24","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i32)\nrescue OverflowError\n  FailedCast.new\nend"}},{"id":"parse(values:Array(Int32))-instance-method","html_id":"parse(values:Array(Int32))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L30","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int32)).new(values)"}},{"id":"to_db(value:Int32)-instance-method","html_id":"to_db(value:Int32)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L34","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int32))-instance-method","html_id":"to_db(values:Array(Int32))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L38","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int32/Lucky/ColumnType","path":"Int32/Lucky/ColumnType.html","kind":"alias","full_name":"Int32::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/int32_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Int32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Int32/Lucky/Criteria","path":"Int32/Lucky/Criteria.html","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int32_extensions.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L43","def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(@column, V::Lucky.to_db!(low_value)))\nadd_clause(Avram::Where::LessThanOrEqualTo.new(@column, V::Lucky.to_db!(high_value)))\n"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L45","def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"super().as(Int64 | ::Nil)"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int32_extensions.cr#L49","def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/luckyframework/avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int64_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L26","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int64/Lucky","path":"Int64/Lucky.html","kind":"module","full_name":"Int64::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/int64_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int64","kind":"struct","full_name":"Int64","name":"Int64"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"from_db!(value:Int64)-instance-method","html_id":"from_db!(value:Int64)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L10","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:Int64)-instance-method","html_id":"parse(value:Int64)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L14","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int64).new(value)"}},{"id":"parse(values:Array(Int64))-instance-method","html_id":"parse(values:Array(Int64))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L18","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Int64)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L22","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(Int64).new(value.to_i64)\nrescue ArgumentError\n  FailedCast.new\nend"}},{"id":"parse(value:Int32)-instance-method","html_id":"parse(value:Int32)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L28","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Int64).new(value.to_i64)"}},{"id":"to_db(value:Int64)-instance-method","html_id":"to_db(value:Int64)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L32","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}},{"id":"to_db(values:Array(Int64))-instance-method","html_id":"to_db(values:Array(Int64))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L36","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Int64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Int64/Lucky/ColumnType","path":"Int64/Lucky/ColumnType.html","kind":"alias","full_name":"Int64::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/int64_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Int64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Int64/Lucky/Criteria","path":"Int64/Lucky/Criteria.html","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/int64_extensions.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L41","def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(@column, V::Lucky.to_db!(low_value)))\nadd_clause(Avram::Where::LessThanOrEqualTo.new(@column, V::Lucky.to_db!(high_value)))\n"}},{"id":"select_sum:Int64?-instance-method","html_id":"select_sum:Int64?-instance-method","name":"select_sum","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64?","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L43","def":{"name":"select_sum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"if sum = super()\n  (sum.as(PG::Numeric)).to_f.to_i64\nend"}},{"id":"select_sum!:Int64-instance-method","html_id":"select_sum!:Int64-instance-method","name":"select_sum!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/int64_extensions.cr#L49","def":{"name":"select_sum!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/blank_extensions.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L38","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/string_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['ï¿½', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/String/Lucky","path":"String/Lucky.html","kind":"module","full_name":"String::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/string_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/String","kind":"class","full_name":"String","name":"String"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L10","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(String).new(value)"}},{"id":"parse(values:Array(String))-instance-method","html_id":"parse(values:Array(String))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L14","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(String)).new(values)"}},{"id":"to_db(value:String)-instance-method","html_id":"to_db(value:String)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L18","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"to_db(values:Array(String))-instance-method","html_id":"to_db(values:Array(String))-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L22","def":{"name":"to_db","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PQ::Param.encode_array(values)"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/String/Lucky/ColumnType","path":"String/Lucky/ColumnType.html","kind":"alias","full_name":"String::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/string_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/String/Lucky/Criteria","path":"String/Lucky/Criteria.html","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/string_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"column-instance-method","html_id":"column-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L48","def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @upper\n  \"UPPER(#{@column})\"\nelse\n  if @lower\n    \"LOWER(#{@column})\"\n  else\n    @column\n  end\nend"}},{"id":"ilike(value:String):T-instance-method","html_id":"ilike(value:String):T-instance-method","name":"ilike","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L34","def":{"name":"ilike","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Ilike.new(column, value))"}},{"id":"like(value:String):T-instance-method","html_id":"like(value:String):T-instance-method","name":"like","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L30","def":{"name":"like","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Like.new(column, value))"}},{"id":"lower-instance-method","html_id":"lower-instance-method","name":"lower","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L43","def":{"name":"lower","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lower = true\nself\n"}},{"id":"upper-instance-method","html_id":"upper-instance-method","name":"upper","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/string_extensions.cr#L38","def":{"name":"upper","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@upper = true\nself\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/luckyframework/avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/time_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Time` represents a date-time instant in\n[incremental time](https://www.w3.org/International/articles/definitions-time/#incremental_time)\nobserved in a specific time zone.\n\nThe calendaric calculations are based on the rules of the proleptic Gregorian\ncalendar as specified in [ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf).\nLeap seconds are ignored.\n\nInternally, the time is stored as an `Int64` representing seconds from epoch\n(`0001-01-01 00:00:00.0 UTC`) and an `Int32` representing\nnanosecond-of-second with value range `0..999_999_999`.\n\nThe supported date range is `0001-01-01 00:00:00.0` to\n`9999-12-31 23:59:59.999_999_999` in any local time zone.\n\n### Telling the Time\n\nThere are several methods to retrieve a `Time` instance representing the\ncurrent time:\n\n```crystal\nTime.utc                                        # returns the current time in UTC\nTime.local Time::Location.load(\"Europe/Berlin\") # returns the current time in time zone Europe/Berlin\nTime.local                                      # returns the current time in current time zone\n```\n\nIt is generally recommended to keep instances in UTC and only apply a\nlocal time zone when formatting for user display, unless the domain logic\nrequires having a specific time zone (for example for calendaric operations).\n\n### Creating a Specific Instant\n\n`Time` instances representing a specific instant can be created by\n`.utc` or `.new` with the date-time specified as individual arguments:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.to_s # => 2016-02-15 10:20:30 UTC\ntime = Time.local(2016, 2, 15, 10, 20, 30, location: Time::Location.load(\"Europe/Berlin\"))\ntime.to_s # => 2016-02-15 10:20:30 +01:00 Europe/Berlin\n# The time-of-day can be omitted and defaults to midnight (start of day):\ntime = Time.utc(2016, 2, 15)\ntime.to_s # => 2016-02-15 00:00:00 UTC\n```\n\n### Retrieving Time Information\n\nEach `Time` instance allows querying calendar data:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.year        # => 2016\ntime.month       # => 2\ntime.day         # => 15\ntime.hour        # => 10\ntime.minute      # => 20\ntime.second      # => 30\ntime.millisecond # => 0\ntime.nanosecond  # => 0\ntime.day_of_week # => Time::DayOfWeek::Monday\ntime.day_of_year # => 46\ntime.monday?     # => true\ntime.time_of_day # => 10:20:30\n```\n\nFor querying if a time is at a specific day of week, `Time` offers named\npredicate methods, delegating to `#day_of_week`:\n\n```\ntime.monday? # => true\n# ...\ntime.sunday? # => false\n```\n\n### Time Zones\n\nEach time is attached to a specific time zone, represented by a `Location`\n(see `#location`).\n`#zone` returns the time zone observed in this location at the current time\n(i.e. the instant represented by this `Time`).\n`#offset` returns the offset of the current zone in seconds.\n\n```\ntime = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime          # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime.location # => #<Time::Location Europe/Berlin>\ntime.zone     # => #<Time::Location::Zone CET +01:00 (3600s) STD>\ntime.offset   # => 3600\n```\n\nUsing `.utc`, the location is `Time::Location::UTC`:\n\n```\ntime = Time.utc(2018, 3, 8, 22, 5, 13)\ntime          # => 2018-03-08 22:05:13.0 UTC\ntime.location # => #<Time::Location UTC>\ntime.zone     # => #<Time::Location::Zone UTC +00:00 (0s) STD>\ntime.offset   # => 0\n```\n\nA `Time` instance can be transformed to a different time zone while retaining\nthe same instant using `#in`:\n\n```\ntime_de = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime_ar = time_de.in Time::Location.load(\"America/Buenos_Aires\")\ntime_de # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime_ar # => 2018-03-08 18:05:13 -03:00 America/Buenos_Aires\n```\n\nBoth `Time` instances show a different local date-time, but they represent\nthe same date-time in the instant time-line, therefore they are considered\nequal:\n\n```\ntime_de.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_ar.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_de == time_ar # => true\n```\n\nThere are also two special methods for converting to UTC and local time zone:\n\n```\ntime.to_utc   # equals time.in(Location::UTC)\ntime.to_local # equals time.in(Location.local)\n```\n\n`#to_local_in` allows changing the time zone while keeping\nthe same local date-time (wall clock) which results in a different instant\non the time line.\n\n### Formatting and Parsing Time\n\nTo make date-time instances exchangeable between different computer systems\nor readable to humans, they are usually converted to and from a string\nrepresentation.\n\nThe method `#to_s` formats the date-time according to a specified pattern.\n\n```\ntime = Time.utc(2015, 10, 12, 10, 30, 0)\ntime.to_s(\"%Y-%m-%d %H:%M:%S %:z\") # => \"2015-10-12 10:30:00 +00:00\"\n```\n\nSimilarly, `Time.parse` and `Time.parse!` are used to construct a `Time` instance from date-time\ninformation in a string, according to a specified pattern:\n\n```\nTime.parse(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC)\nTime.parse!(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\")\n```\n\nSee `Time::Format` for all directives.\n\n### Calculations\n\n```\nTime.utc(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00 +00:00\n\nspan = Time.utc(2015, 10, 10) - Time.utc(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n```\n\n## Measuring Time\n\nThe typical time representation provided by the operating system is based on\na \"wall clock\" which is subject to changes for clock synchronization.\nThis can result in discontinuous jumps in the time-line making it not\nsuitable for accurately measuring elapsed time.\n\nInstances of `Time` are focused on telling time â€“ using a \"wall clock\".\nWhen `Time.local` is called multiple times, the difference between the\nreturned instances is not guaranteed to equal to the time elapsed between\nmaking the calls; even the order of the returned `Time` instances might\nnot reflect invocation order.\n\n```\nt1 = Time.utc\n# operation that takes 1 minute\nt2 = Time.utc\nt2 - t1 # => ?\n```\n\nThe resulting `Time::Span` could be anything, even negative, if the\ncomputer's wall clock has changed between both calls.\n\nAs an alternative, the operating system also provides a monotonic clock.\nIts time-line has no specfied starting point but is strictly linearly\nincreasing.\n\nThis monotonic clock should always be used for measuring elapsed time.\n\nA reading from this clock can be taken using `.monotonic`:\n\n```\nt1 = Time.monotonic\n# operation that takes 1 minute\nt2 = Time.monotonic\nt2 - t1 # => 1.minute (approximately)\n```\n\nThe execution time of a block can be measured using `.measure`:\n\n```\nelapsed_time = Time.measure do\n  # operation that takes 20 milliseconds\nend\nelapsed_time # => 20.milliseconds (approximately)\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents a date-time instant in <a href=\"https://www.w3.org/International/articles/definitions-time/#incremental_time\" target=\"_blank\">incremental time</a> observed in a specific time zone.</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L8","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.nil?"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Time/Lucky","path":"Time/Lucky.html","kind":"module","full_name":"Time::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/time_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TIME_FORMATS","name":"TIME_FORMATS","value":"[Time::Format::ISO_8601_DATE_TIME, Time::Format::RFC_2822, Time::Format::RFC_3339, Time::Format::HTTP_DATE, Time::Format::ISO_8601_DATE, Time::Format::ISO_8601_TIME]","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Time","kind":"struct","full_name":"Time","name":"Time"},"doc":null,"summary":null,"class_methods":[{"id":"try_parsing_with_default_formatters(value:String)-class-method","html_id":"try_parsing_with_default_formatters(value:String)-class-method","name":"try_parsing_with_default_formatters","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L34","def":{"name":"try_parsing_with_default_formatters","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"TIME_FORMATS.find do |format|\n  begin\n    format.parse(value)\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((format.parse(value)).to_utc)\nend"}},{"id":"try_parsing_with_string_formats(value)-class-method","html_id":"try_parsing_with_string_formats(value)-class-method","name":"try_parsing_with_string_formats","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L46","def":{"name":"try_parsing_with_string_formats","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Avram.settings.time_formats.find do |format|\n  begin\n    Time.parse(value, format, Time::Location.load(\"UTC\"))\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((Time.parse(value, format, Time::Location.load(\"UTC\"))).to_utc)\nend"}}],"constructors":[],"instance_methods":[{"id":"from_db!(value:Time)-instance-method","html_id":"from_db!(value:Time)-instance-method","name":"from_db!","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L21","def":{"name":"from_db!","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value"}},{"id":"parse(value:String):Avram::Type::SuccessfulCast(Time)|FailedCast-instance-method","html_id":"parse(value:String):Avram::Type::SuccessfulCast(Time)|FailedCast-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Avram::Type::SuccessfulCast(Time) | FailedCast","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L25","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SuccessfulCast(Time) | FailedCast","visibility":"Public","body":"((try_parsing_with_string_formats(value)) || (try_parsing_with_default_formatters(value))) || FailedCast.new"}},{"id":"parse(value:Time)-instance-method","html_id":"parse(value:Time)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L58","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Time).new(value)"}},{"id":"parse(values:Array(Time))-instance-method","html_id":"parse(values:Array(Time))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Time)"}],"args_string":"(values : Array(Time))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L62","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(Time)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(Time)).new(values)"}},{"id":"to_db(value:Time)-instance-method","html_id":"to_db(value:Time)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"args_string":"(value : Time)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L66","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/Time/Lucky/ColumnType","path":"Time/Lucky/ColumnType.html","kind":"alias","full_name":"Time::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/time_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"Time","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/Time/Lucky/Criteria","path":"Time/Lucky/Criteria.html","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/time_extensions.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"between(low_value:V,high_value:V)-instance-method","html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column >= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/time_extensions.cr#L71","def":{"name":"between","args":[{"name":"low_value","doc":null,"default_value":"","external_name":"low_value","restriction":"V"},{"name":"high_value","doc":null,"default_value":"","external_name":"high_value","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(@column, V::Lucky.to_db!(low_value)))\nadd_clause(Avram::Where::LessThanOrEqualTo.new(@column, V::Lucky.to_db!(high_value)))\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/luckyframework/avram/UUID","path":"UUID.html","kind":"struct","full_name":"UUID","name":"UUID","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/luckyframework/avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/uuid_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr"},{"filename":"avram/blank_extensions.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Represents a UUID (Universally Unique IDentifier).","summary":"<p>Represents a UUID (Universally Unique IDentifier).</p>","class_methods":[{"id":"adapter-class-method","html_id":"adapter-class-method","name":"adapter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr#L2","def":{"name":"adapter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Lucky"}}],"constructors":[],"instance_methods":[{"id":"blank?-instance-method","html_id":"blank?-instance-method","name":"blank?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/blank_extensions.cr#L50","def":{"name":"blank?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/UUID/Lucky","path":"UUID/Lucky.html","kind":"module","full_name":"UUID::Lucky","name":"Lucky","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"avram/charms/uuid_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/luckyframework/avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"github.com/luckyframework/avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/UUID","kind":"struct","full_name":"UUID","name":"UUID"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"parse(value:UUID)-instance-method","html_id":"parse(value:UUID)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr#L10","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(UUID).new(value)"}},{"id":"parse(values:Array(UUID))-instance-method","html_id":"parse(values:Array(UUID))-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"args_string":"(values : Array(UUID))","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr#L14","def":{"name":"parse","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(UUID)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SuccessfulCast(Array(UUID)).new(values)"}},{"id":"parse(value:String)-instance-method","html_id":"parse(value:String)-instance-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr#L18","def":{"name":"parse","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  SuccessfulCast(UUID).new(UUID.new(value))\nrescue\n  FailedCast.new\nend"}},{"id":"to_db(value:UUID)-instance-method","html_id":"to_db(value:UUID)-instance-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr#L24","def":{"name":"to_db","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s"}}],"macros":[],"types":[{"html_id":"github.com/luckyframework/avram/UUID/Lucky/ColumnType","path":"UUID/Lucky/ColumnType.html","kind":"alias","full_name":"UUID::Lucky::ColumnType","name":"ColumnType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"avram/charms/uuid_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/luckyframework/avram/UUID/Lucky/Criteria","path":"UUID/Lucky/Criteria.html","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"github.com/luckyframework/avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"github.com/luckyframework/avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/luckyframework/avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"avram/charms/uuid_extensions.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/charms/uuid_extensions.cr"}],"repository_name":"github.com/luckyframework/avram","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/luckyframework/avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(rows:T,column:Symbol|String)-class-method","html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","source_link":"https://github.com/luckyframework/avram/blob/6dcbb6b7b60a5e0bba6541e60c8e3beee0c42e5d/src/avram/criteria.cr#L5","def":{"name":"new","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"T"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]}]}]}}